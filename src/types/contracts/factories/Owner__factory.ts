/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Owner, OwnerInterface } from '../Owner';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'enabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'changeOwner',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_enabled',
        type: 'bool',
      },
    ],
    name: 'changeEnabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600060146101000a81548160ff0219169083151502179055506105578061007b6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063238dafe0146100515780635365a93f1461006f5780638da5cb5b1461008b578063a6f9dae1146100a9575b600080fd5b6100596100c5565b6040516100669190610440565b60405180910390f35b610089600480360381019061008491906103bb565b6100d8565b005b6100936101c2565b6040516100a09190610425565b60405180910390f35b6100c360048036038101906100be9190610392565b6101e6565b005b600060149054906101000a900460ff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610166576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015d9061045b565b60405180910390fd5b801515600060149054906101000a900460ff161515141561018657600080fd5b80600060146101000a81548160ff021916908315150217905550801515600060149054906101000a900460ff161515146101bf57600080fd5b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610274576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026b9061045b565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156102cd57600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461036557600080fd5b50565b600081359050610377816104f3565b92915050565b60008135905061038c8161050a565b92915050565b6000602082840312156103a457600080fd5b60006103b284828501610368565b91505092915050565b6000602082840312156103cd57600080fd5b60006103db8482850161037d565b91505092915050565b6103ed8161048c565b82525050565b6103fc8161049e565b82525050565b600061040f60158361047b565b915061041a826104ca565b602082019050919050565b600060208201905061043a60008301846103e4565b92915050565b600060208201905061045560008301846103f3565b92915050565b6000602082019050818103600083015261047481610402565b9050919050565b600082825260208201905092915050565b6000610497826104aa565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f596f7520617265206e6f7420746865206f776e65720000000000000000000000600082015250565b6104fc8161048c565b811461050757600080fd5b50565b6105138161049e565b811461051e57600080fd5b5056fea2646970667358221220b982a0eb0a1b00cc22ea8a71e74c125250d04b9096af943dfce8dad73af1c2ef64736f6c63430008030033';

export class Owner__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<Owner> {
    return super.deploy(overrides || {}) as Promise<Owner>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Owner {
    return super.attach(address) as Owner;
  }
  connect(signer: Signer): Owner__factory {
    return super.connect(signer) as Owner__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OwnerInterface {
    return new utils.Interface(_abi) as OwnerInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Owner {
    return new Contract(address, _abi, signerOrProvider) as Owner;
  }
}
