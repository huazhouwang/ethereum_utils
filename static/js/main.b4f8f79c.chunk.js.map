{"version":3,"sources":["connector.tsx","components/basic.tsx","components/Editor.tsx","components/LabelText.tsx","pages/Message/view.tsx","pages/Message/methods.ts","pages/Message/index.tsx","components/PageDrawer.tsx","pages/Transaction/view.tsx","pages/Transaction/index.tsx","App.tsx","index.tsx","pages/Message/helper.ts"],"names":["Web3ProviderNetwork","createWeb3ReactRoot","ethereum","window","autoRefreshOnNetworkChange","getLibrary","provider","Web3Provider","chainId","parseInt","injected","InjectedConnector","Web3Root","children","Flex","styled","display","Column","flexDirection","Row","SizedBox","justifyItems","alignItems","width","height","style","Editor","props","fontSize","showGutter","wrapEnabled","showPrintMargin","highlightActiveLine","enableBasicAutocompletion","enableLiveAutocompletion","tabSize","LabelText","id","value","label","placeholder","TextField","variant","useStyle","makeStyles","theme","container","padding","options","justifyContent","margin","spacing","caseGroup","flexWrap","marginBottom","bottomButtonGroup","MessageEditorView","methodOptions","selectedMethod","onMethodSelected","cases","checkIsTargetMessage","hashMessage","isWalletEnabled","connectedAccount","connectWallet","onSign","preferJsonStringMessage","classes","useState","messageValue","setMessageValue","messageHashValue","setMessageHashValue","signatureValue","setSignatureValue","disabledSignBtn","setDisabledSignBtn","recoveredAddress","setRecoveredAddress","onMessageChanged","useCallback","message","a","messageHash","toEditorJsonString","easyCheckMessageHash","console","error","onSignButtonClick","signature","useEffect","className","Typography","component","align","Select","onChange","event","target","map","method","MenuItem","tag","index","Chip","size","name","onClick","catch","onTagClick","mode","Button","color","disabled","slice","DEMO_TYPED_DATA_01","DEMO_TYPED_DATA_02","DEMO_TYPED_DATA_03","Methods","eth_sign","Promise","resolve","signMessage","account","library","getSigner","send","then","response","result","personal_sign","length","ethUtil","toString","typed_data_sign","easyCheckLegacyEIP712Struct","signUtil","JSON","parse","isMetaMask","typed_data_sign_v1","typed_data_sign_v3","easyCheckStandardEIP712Struct","sign","typed_data_sign_v4","recoverAddress","hashBuffer","sigBuffer","assert","r","s","v","public_key","MessageEditor","web3","useWeb3React","active","activate","setSelectedMethod","snackBarState","setSnackBarState","undefined","easyCheckSignature","toLowerCase","isPositive","stringifyProviderError","isOpening","Object","keys","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","prevState","severity","PageDrawer","menus","onDrawerItemClick","useTheme","Drawer","anchor","text","ListItem","button","ListItemText","primary","Divider","TransactionView","Transaction","useStyles","appBar","position","main","marginLeft","marginRight","breakpoints","up","paper","marginTop","DRAWER_MENU","Pagers","Message","App","isDrawerOpening","setIsDrawerOpening","Page","setPage","Fragment","CssBaseline","AppBar","Toolbar","IconButton","edge","noWrap","Paper","ReactDOM","render","StrictMode","document","getElementById","startsWith","Buffer","from","e","endsWith","struct","Array","isArray","every","i","type","required","data","stringify","errorType"],"mappings":"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","file":"static/js/main.b4f8f79c.chunk.js","sourcesContent":["import { Web3Provider } from \"@ethersproject/providers\";\nimport { createWeb3ReactRoot, Web3ReactProvider } from \"@web3-react/core\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\n\nconst Web3ProviderNetwork = createWeb3ReactRoot(\"NETWORK\");\n\nconst { ethereum } = window as any;\nethereum && (ethereum.autoRefreshOnNetworkChange = false);\n\nconst getLibrary = (provider: any) =>\n  new Web3Provider(\n    provider,\n    typeof provider.chainId === \"number\"\n      ? provider.chainId\n      : typeof provider.chainId === \"string\"\n      ? parseInt(provider.chainId)\n      : \"any\"\n  );\n\nconst Web3Root = ({ children }: { children: any }) => (\n  <Web3ReactProvider getLibrary={getLibrary}>\n    <Web3ProviderNetwork getLibrary={getLibrary}>\n      {children}\n    </Web3ProviderNetwork>\n  </Web3ReactProvider>\n);\n\nexport const injected = new InjectedConnector({});\nexport default Web3Root;\n","import { styled } from \"@material-ui/core\";\n\nconst Flex = styled(\"div\")({\n  display: \"flex\",\n});\n\nconst Column = styled(Flex)({\n  flexDirection: \"column\",\n});\n\nconst Row = styled(Flex)({\n  flexDirection: \"row\",\n});\n\nconst Center = styled(Flex)({\n  justifyItems: \"center\",\n  alignItems: \"center\",\n});\n\nconst SizedBox = ({ width, height }: { width?: any; height?: any }) => (\n  <div style={{ width, height }} />\n);\n\nexport { Flex, Column, Row, Center, SizedBox };\n","import AceEditor from \"react-ace\";\nimport { IAceEditorProps } from \"react-ace/lib/ace\";\nimport \"ace-builds/src-noconflict/mode-json\";\nimport \"ace-builds/src-noconflict/theme-tomorrow_night_eighties\";\n\nconst Editor = (props: IAceEditorProps) => {\n  return (\n    <AceEditor\n      width={\"100%\"}\n      fontSize={14}\n      showGutter={false}\n      wrapEnabled\n      showPrintMargin\n      highlightActiveLine\n      enableBasicAutocompletion\n      enableLiveAutocompletion\n      tabSize={2}\n      {...props}\n    />\n  );\n};\n\nexport default Editor;\n","import { TextField } from \"@material-ui/core\";\nimport { TextFieldProps } from \"@material-ui/core/TextField/TextField\";\n\nconst LabelText = ({\n  id,\n  value,\n  label,\n  placeholder,\n  ...props\n}: TextFieldProps) => (\n  <TextField\n    id={id}\n    variant=\"outlined\"\n    value={value}\n    label={label}\n    placeholder={placeholder}\n    {...props}\n  />\n);\n\nexport default LabelText;\n","import {\n  Button,\n  Chip,\n  makeStyles,\n  MenuItem,\n  Select,\n  Typography,\n} from \"@material-ui/core\";\nimport { Column, Row, SizedBox } from \"../../components/basic\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { easyCheckMessageHash, toEditorJsonString } from \"./helper\";\nimport Editor from \"../../components/Editor\";\nimport LabelText from \"../../components/LabelText\";\n\nexport interface MessageViewProps {\n  methodOptions: Array<string>;\n  selectedMethod: string;\n  onMethodSelected: (method: string) => void;\n  cases: Array<{ name: string; value: string }>;\n  checkIsTargetMessage: (message: string) => boolean;\n  hashMessage: (message: string) => Promise<string>;\n  isWalletEnabled: boolean;\n  connectedAccount?: string | null;\n  connectWallet: () => void;\n  onSign: (message: string) => Promise<[string, string]>;\n  preferJsonStringMessage?: boolean;\n}\n\nconst useStyle = makeStyles((theme) => ({\n  container: {\n    padding: 0,\n  },\n  options: {\n    justifyContent: \"flex-end\",\n    alignItems: \"center\",\n    margin: theme.spacing(3, 0, 1),\n  },\n  caseGroup: {\n    flexWrap: \"wrap\",\n    padding: 0,\n    marginBottom: theme.spacing(1),\n    \"& > *\": {\n      margin: theme.spacing(0.5),\n    },\n  },\n  bottomButtonGroup: {\n    justifyContent: \"flex-end\",\n    padding: 0,\n  },\n}));\n\nexport const MessageEditorView = ({\n  methodOptions,\n  selectedMethod,\n  onMethodSelected,\n  cases,\n  checkIsTargetMessage,\n  hashMessage,\n  isWalletEnabled,\n  connectedAccount,\n  connectWallet,\n  onSign,\n  preferJsonStringMessage,\n}: MessageViewProps) => {\n  const classes = useStyle();\n\n  const [messageValue, setMessageValue] = useState<string>(\"\");\n  const [messageHashValue, setMessageHashValue] = useState<string>(\"\");\n  const [signatureValue, setSignatureValue] = useState<string>(\"\");\n  const [disabledSignBtn, setDisabledSignBtn] = useState<boolean>(true);\n  const [recoveredAddress, setRecoveredAddress] = useState<string>(\"\");\n\n  const onMessageChanged = useCallback(\n    async (message: string) => {\n      try {\n        if (message && checkIsTargetMessage(message)) {\n          const messageHash: string = await hashMessage(message);\n\n          message = preferJsonStringMessage\n            ? toEditorJsonString(message)\n            : message;\n\n          if (easyCheckMessageHash(messageHash)) {\n            setMessageHashValue(messageHash);\n            setDisabledSignBtn(false);\n          } else {\n            setDisabledSignBtn(true);\n          }\n        }\n      } catch (e) {\n        setDisabledSignBtn(true);\n        console.error(\"Error in hashing message\", e);\n      }\n\n      setMessageValue(message);\n      setSignatureValue(\"\");\n      setRecoveredAddress(\"\");\n    },\n    [preferJsonStringMessage, checkIsTargetMessage, hashMessage]\n  );\n\n  const onSignButtonClick = useCallback(async () => {\n    const [signature, recoveredAddress] = await onSign(messageValue);\n    setSignatureValue(signature);\n    setRecoveredAddress(recoveredAddress);\n  }, [messageValue, onSign]);\n\n  const onTagClick = (index: number) => {\n    const message = cases[index].value;\n    setMessageValue(message);\n    onMessageChanged(message).catch(console.error);\n  };\n\n  useEffect(() => {\n    if (cases[0].value) {\n      onMessageChanged(cases[0].value);\n    }\n  }, [cases, onMessageChanged]);\n\n  return (\n    <Column className={classes.container}>\n      <Typography component={\"h1\"} variant={\"h4\"} align={\"center\"}>\n        Message\n      </Typography>\n\n      <Row className={classes.options}>\n        <Select\n          variant={\"outlined\"}\n          value={selectedMethod}\n          onChange={(event) => onMethodSelected(event.target.value as string)}\n        >\n          {methodOptions.map((method) => (\n            <MenuItem key={method} value={method}>\n              {method}\n            </MenuItem>\n          ))}\n        </Select>\n      </Row>\n\n      <Row className={classes.caseGroup}>\n        {cases.map((tag, index) => (\n          <Chip\n            size={\"small\"}\n            key={tag.name}\n            label={tag.name}\n            onClick={() => onTagClick(index)}\n          />\n        ))}\n      </Row>\n      <Editor\n        name={\"message_editor\"}\n        placeholder={\"Input Message Here\"}\n        mode={\"json\"}\n        theme={\"tomorrow_night_eighties\"}\n        value={messageValue}\n        onChange={onMessageChanged}\n      />\n      <SizedBox height={10} />\n      <LabelText\n        id={\"message_hash\"}\n        value={messageHashValue}\n        label={\"Message Hash\"}\n      />\n      <SizedBox height={10} />\n      <LabelText id={\"signature\"} value={signatureValue} label={\"Signature\"} />\n      <SizedBox height={10} />\n      <LabelText\n        id={\"recovered_address\"}\n        value={recoveredAddress}\n        label={\"Recovered Address\"}\n        placeholder={\"Please make sure the message and signature are correct\"}\n      />\n      <SizedBox height={10} />\n      <Row className={classes.bottomButtonGroup}>\n        <Button\n          variant={\"contained\"}\n          color={\"primary\"}\n          disabled={isWalletEnabled}\n          onClick={connectWallet}\n        >\n          {isWalletEnabled && connectedAccount\n            ? `${connectedAccount.slice(0, 4)}...${connectedAccount.slice(-4)}`\n            : \"Connect\"}\n        </Button>\n        <SizedBox width={16} />\n        <Button\n          variant={\"contained\"}\n          color={\"secondary\"}\n          disabled={disabledSignBtn || !isWalletEnabled}\n          onClick={onSignButtonClick}\n        >\n          SIGN\n        </Button>\n      </Row>\n    </Column>\n  );\n};\n","import {\n  easyCheckLegacyEIP712Struct,\n  easyCheckMessageHash,\n  easyCheckStandardEIP712Struct,\n} from \"./helper\";\nimport { Web3ReactContextInterface } from \"@web3-react/core/dist/types\";\nimport * as ethUtil from \"ethereumjs-util\";\nimport * as signUtil from \"eth-sig-util\";\n\nexport interface MessageSignMethod {\n  name: string;\n  cases: Array<{ name: string; value: string }>;\n  preferJsonStringMessage?: boolean;\n  checkIsTargetMessage: (message: string) => boolean;\n  hashMessage: (message: string) => Promise<string>;\n  signMessage: (\n    web3: Web3ReactContextInterface,\n    message: string\n  ) => Promise<string>;\n}\n\nconst DEMO_TYPED_DATA_01 =\n  '{\"types\":{\"EIP712Domain\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"chainId\",\"type\":\"uint256\"},{\"name\":\"verifyingContract\",\"type\":\"address\"}],\"Person\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"wallet\",\"type\":\"address\"}],\"Mail\":[{\"name\":\"from\",\"type\":\"Person\"},{\"name\":\"to\",\"type\":\"Person\"},{\"name\":\"contents\",\"type\":\"string\"}]},\"primaryType\":\"Mail\",\"domain\":{\"name\":\"Ether Mail\",\"version\":\"1\",\"chainId\":1,\"verifyingContract\":\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\"},\"message\":{\"from\":{\"name\":\"Cow\",\"wallet\":\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\"},\"to\":{\"name\":\"Bob\",\"wallet\":\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\"},\"contents\":\"Hello, Bob!\"}}';\nconst DEMO_TYPED_DATA_02 =\n  '{\"types\":{\"EIP712Domain\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"chainId\",\"type\":\"uint256\"},{\"name\":\"verifyingContract\",\"type\":\"address\"}],\"Person\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"wallet\",\"type\":\"address\"}],\"Mail\":[{\"name\":\"from\",\"type\":\"Person\"},{\"name\":\"to\",\"type\":\"Person\"},{\"name\":\"contents\",\"type\":\"string\"},{\"name\":\"payload\",\"type\":\"bytes\"}]},\"primaryType\":\"Mail\",\"domain\":{\"name\":\"Ether Mail\",\"version\":\"1\",\"chainId\":1,\"verifyingContract\":\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\"},\"message\":{\"from\":{\"name\":\"Cow\",\"wallet\":\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\"},\"to\":{\"name\":\"Bob\",\"wallet\":\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\"},\"contents\":\"Hello, Bob!\",\"payload\":\"0x25192142931f380985072cdd991e37f65cf8253ba7a0e675b54163a1d133b8ca\"}}';\nconst DEMO_TYPED_DATA_03 =\n  '{\"types\":{\"EIP712Domain\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"chainId\",\"type\":\"uint256\"},{\"name\":\"verifyingContract\",\"type\":\"address\"}],\"Person\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"mother\",\"type\":\"Person\"},{\"name\":\"father\",\"type\":\"Person\"}]},\"domain\":{\"name\":\"Family Tree\",\"version\":\"1\",\"chainId\":1,\"verifyingContract\":\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\"},\"primaryType\":\"Person\",\"message\":{\"name\":\"Jon\",\"mother\":{\"name\":\"Lyanna\",\"father\":{\"name\":\"Rickard\"}},\"father\":{\"name\":\"Rhaegar\",\"father\":{\"name\":\"Aeris II\"}}}}';\n\nexport const Methods: { [key: string]: MessageSignMethod } = {\n  eth_sign: {\n    name: \"eth_sign\",\n    cases: [\n      {\n        name: \"Demo 1\",\n        value:\n          \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n      },\n      {\n        name: \"Demo 2\",\n        value:\n          \"0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\",\n      },\n    ],\n    checkIsTargetMessage: easyCheckMessageHash,\n    hashMessage: async (message: string): Promise<string> =>\n      Promise.resolve(message),\n    signMessage: (\n      { account, library }: Web3ReactContextInterface,\n      message: string\n    ): Promise<string> =>\n      library\n        .getSigner(account)\n        .provider.provider.send(\"eth_sign\", [account, message])\n        .then((response: any) => response.result),\n  },\n  personal_sign: {\n    name: \"personal_sign\",\n    cases: [\n      { name: \"Hello OneKey\", value: \"Hello OneKey\" },\n      { name: \"To Da Moon\", value: \"To Da Moon\" },\n    ],\n    checkIsTargetMessage: (message: string | undefined): boolean =>\n      typeof message === \"string\" && message.length > 0,\n    hashMessage: async (message: string): Promise<string> =>\n      ethUtil.addHexPrefix(\n        ethUtil.hashPersonalMessage(ethUtil.toBuffer(message)).toString(\"hex\")\n      ),\n    signMessage: (\n      { account, library }: Web3ReactContextInterface,\n      message: string\n    ): Promise<string> => library.getSigner(account).signMessage(message),\n  },\n  typed_data_sign: {\n    name: \"typed_data_sign\",\n    cases: [\n      {\n        name: \"Single Value\",\n        value: '[{\"type\":\"string\",\"name\":\"message\",\"value\":\"Hi, Alice!\"}]',\n      },\n      {\n        name: \"Multiple values\",\n        value:\n          '[{\"type\":\"string\",\"name\":\"message\",\"value\":\"Hi, Alice!\"},{\"type\":\"uint8\",\"name\":\"value\",\"value\":10}]',\n      },\n      {\n        name: \"With bytes\",\n        value: '[{\"type\":\"bytes\",\"name\":\"message\",\"value\":\"0xdeadbeaf\"}]',\n      },\n    ],\n    preferJsonStringMessage: true,\n    checkIsTargetMessage: easyCheckLegacyEIP712Struct,\n    hashMessage: async (message: string): Promise<string> =>\n      ethUtil.addHexPrefix(signUtil.typedSignatureHash(JSON.parse(message))),\n    signMessage: (\n      { account, library }: Web3ReactContextInterface,\n      message: string\n    ): Promise<string> =>\n      library.provider\n        .send(\n          \"eth_signTypedData\",\n          library.provider.isMetaMask\n            ? [JSON.parse(message), account]\n            : [account, message]\n        )\n        .then((response: any) => response.result),\n  },\n  typed_data_sign_v1: {\n    name: \"typed_data_sign_v1\",\n    cases: [\n      {\n        name: \"Single Value\",\n        value: '[{\"type\":\"string\",\"name\":\"message\",\"value\":\"Hi, Alice!\"}]',\n      },\n      {\n        name: \"Multiple values\",\n        value:\n          '[{\"type\":\"string\",\"name\":\"message\",\"value\":\"Hi, Alice!\"},{\"type\":\"uint8\",\"name\":\"value\",\"value\":10}]',\n      },\n      {\n        name: \"With bytes\",\n        value: '[{\"type\":\"bytes\",\"name\":\"message\",\"value\":\"0xdeadbeaf\"}]',\n      },\n    ],\n    preferJsonStringMessage: true,\n    checkIsTargetMessage: easyCheckLegacyEIP712Struct,\n    hashMessage: async (message: string): Promise<string> =>\n      ethUtil.addHexPrefix(signUtil.typedSignatureHash(JSON.parse(message))),\n    signMessage: (\n      { account, library }: Web3ReactContextInterface,\n      message: string\n    ): Promise<string> =>\n      library.provider\n        .send(\"eth_signTypedData_v1\", [account, message])\n        .then((response: any) => response.result),\n  },\n  typed_data_sign_v3: {\n    name: \"typed_data_sign_v3\",\n    cases: [\n      {\n        name: \"Demo\",\n        value: DEMO_TYPED_DATA_01,\n      },\n      {\n        name: \"With bytes\",\n        value: DEMO_TYPED_DATA_02,\n      },\n      {\n        name: \"With recursive types\",\n        value: DEMO_TYPED_DATA_03,\n      },\n    ],\n    preferJsonStringMessage: true,\n    checkIsTargetMessage: easyCheckStandardEIP712Struct,\n    hashMessage: async (message: string): Promise<string> =>\n      ethUtil.addHexPrefix(\n        signUtil.TypedDataUtils.sign(JSON.parse(message), false).toString(\"hex\")\n      ),\n    signMessage: (\n      { account, library }: Web3ReactContextInterface,\n      message: string\n    ): Promise<string> =>\n      library.provider\n        .send(\"eth_signTypedData_v3\", [account, message])\n        .then((response: any) => response.result),\n  },\n  typed_data_sign_v4: {\n    name: \"typed_data_sign_v4\",\n    cases: [\n      {\n        name: \"Demo\",\n        value: DEMO_TYPED_DATA_01,\n      },\n      {\n        name: \"With bytes\",\n        value: DEMO_TYPED_DATA_02,\n      },\n      {\n        name: \"With recursive types\",\n        value: DEMO_TYPED_DATA_03,\n      },\n      {\n        name: \"With array\",\n        value:\n          '{\"types\":{\"EIP712Domain\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"chainId\",\"type\":\"uint256\"},{\"name\":\"verifyingContract\",\"type\":\"address\"}],\"Person\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"wallets\",\"type\":\"address[]\"}],\"Mail\":[{\"name\":\"from\",\"type\":\"Person\"},{\"name\":\"to\",\"type\":\"Person[]\"},{\"name\":\"contents\",\"type\":\"string\"}],\"Group\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"members\",\"type\":\"Person[]\"}]},\"domain\":{\"name\":\"Ether Mail\",\"version\":\"1\",\"chainId\":1,\"verifyingContract\":\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\"},\"primaryType\":\"Mail\",\"message\":{\"from\":{\"name\":\"Cow\",\"wallets\":[\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\"0xDeaDbeefdEAdbeefdEadbEEFdeadbeEFdEaDbeeF\"]},\"to\":[{\"name\":\"Bob\",\"wallets\":[\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\"0xB0BdaBea57B0BDABeA57b0bdABEA57b0BDabEa57\",\"0xB0B0b0b0b0b0B000000000000000000000000000\"]}],\"contents\":\"Hello, Bob!\"}}',\n      },\n      {\n        name: \"With 2D array\",\n        value:\n          '{\"types\":{\"EIP712Domain\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"chainId\",\"type\":\"uint256\"},{\"name\":\"verifyingContract\",\"type\":\"address\"}],\"Person\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"wallets\",\"type\":\"address[]\"},{\"name\":\"logo_matrix\",\"type\":\"int[][]\"}],\"Mail\":[{\"name\":\"from\",\"type\":\"Person\"},{\"name\":\"to\",\"type\":\"Person[]\"},{\"name\":\"contents\",\"type\":\"string\"}],\"Group\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"members\",\"type\":\"Person[]\"}]},\"domain\":{\"name\":\"Ether Mail\",\"version\":\"1\",\"chainId\":1,\"verifyingContract\":\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\"},\"primaryType\":\"Mail\",\"message\":{\"from\":{\"name\":\"Cow\",\"wallets\":[\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\"0xDeaDbeefdEAdbeefdEadbEEFdeadbeEFdEaDbeeF\"],\"logo_matrix\":[[0,255],[-255,-1]]},\"to\":[{\"name\":\"Bob\",\"wallets\":[\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\"0xB0BdaBea57B0BDABeA57b0bdABEA57b0BDabEa57\",\"0xB0B0b0b0b0b0B000000000000000000000000000\"],\"logo_matrix\":[[0,0],[0,0]]}],\"contents\":\"Hello, Bob!\"}}',\n      },\n    ],\n    preferJsonStringMessage: true,\n    checkIsTargetMessage: easyCheckStandardEIP712Struct,\n    hashMessage: async (message: string): Promise<string> =>\n      ethUtil.addHexPrefix(\n        signUtil.TypedDataUtils.sign(JSON.parse(message), true).toString(\"hex\")\n      ),\n    signMessage: (\n      { account, library }: Web3ReactContextInterface,\n      message: string\n    ): Promise<string> =>\n      library.provider\n        .send(\"eth_signTypedData_v4\", [account, message])\n        .then((response: any) => response.result),\n  },\n};\n","import { MessageEditorView } from \"./view\";\nimport { useCallback, useState } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { MessageSignMethod, Methods } from \"./methods\";\nimport { injected } from \"../../connector\";\nimport { Snackbar } from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { easyCheckSignature, stringifyProviderError } from \"./helper\";\nimport * as ethUtil from \"ethereumjs-util\";\n\nconst recoverAddress = (messageHash: string, signature: string): string => {\n  const hashBuffer = ethUtil.toBuffer(messageHash);\n  const sigBuffer = ethUtil.toBuffer(signature);\n\n  console.assert(\n    hashBuffer.length === 32,\n    `Invalid message hash: ${messageHash}`\n  );\n  console.assert(sigBuffer.length === 65, `Invalid signature: ${signature}`);\n\n  const [r, s, v] = [\n    sigBuffer.slice(0, 32),\n    sigBuffer.slice(32, 64),\n    sigBuffer[64],\n  ];\n  const public_key = ethUtil.ecrecover(hashBuffer, v, r, s);\n  return ethUtil.addHexPrefix(ethUtil.pubToAddress(public_key).toString(\"hex\"));\n};\n\nconst MessageEditor = () => {\n  const web3 = useWeb3React();\n  const { active, activate, account } = web3;\n  const [selectedMethod, setSelectedMethod] = useState<string>(\"eth_sign\");\n  const [snackBarState, setSnackBarState] =\n    useState<{ isOpening: boolean; isPositive?: boolean; message?: string }>();\n\n  const method: MessageSignMethod = Methods[selectedMethod || \"eth_sign\"];\n  const onSign = useCallback(\n    async (message: string): Promise<[string, string]> => {\n      console.assert(!!account);\n      let snackBarState: { isPositive: boolean; message: string } | undefined =\n        undefined;\n      let signature = \"\";\n      let recoveredAddress = \"\";\n\n      try {\n        signature = await method.signMessage(web3, message);\n        if (signature && easyCheckSignature(signature)) {\n          recoveredAddress = recoverAddress(\n            await method.hashMessage(message),\n            signature\n          );\n\n          if (recoveredAddress.toLowerCase() === account?.toLowerCase()) {\n            snackBarState = {\n              isPositive: true,\n              message: \"Signature Verified\",\n            };\n          } else {\n            snackBarState = {\n              isPositive: false,\n              message: \"Sorry! The Message Signature Verification Failed\",\n            };\n          }\n        } else {\n          snackBarState = {\n            isPositive: false,\n            message: \"Invalid signature\",\n          };\n        }\n      } catch (e) {\n        console.error(\"Error in signing message\", e);\n\n        snackBarState = {\n          isPositive: false,\n          message: stringifyProviderError(e),\n        };\n      }\n\n      if (snackBarState) {\n        setSnackBarState(() => ({ isOpening: true, ...snackBarState }));\n      }\n\n      return [signature, recoveredAddress];\n    },\n    [web3, account, method]\n  );\n\n  return (\n    <>\n      <MessageEditorView\n        isWalletEnabled={active}\n        connectedAccount={account}\n        connectWallet={() => activate(injected)}\n        methodOptions={Object.keys(Methods)}\n        selectedMethod={selectedMethod}\n        onMethodSelected={setSelectedMethod}\n        cases={method.cases}\n        preferJsonStringMessage={method.preferJsonStringMessage}\n        hashMessage={method.hashMessage}\n        checkIsTargetMessage={method.checkIsTargetMessage}\n        onSign={onSign}\n      />\n      <Snackbar\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        open={snackBarState?.isOpening || false}\n        autoHideDuration={3000}\n        onClose={() =>\n          setSnackBarState((prevState) => ({ ...prevState, isOpening: false }))\n        }\n      >\n        <MuiAlert severity={snackBarState?.isPositive ? \"success\" : \"error\"}>\n          {snackBarState?.message}\n        </MuiAlert>\n      </Snackbar>\n    </>\n  );\n};\n\nexport default MessageEditor;\n","import {\n  Divider,\n  Drawer,\n  ListItem,\n  ListItemText,\n  useTheme,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { SizedBox } from \"./basic\";\n\nconst PageDrawer = ({\n  menus,\n  open,\n  onDrawerItemClick,\n  onClose,\n}: {\n  menus: Array<string>;\n  open: boolean;\n  onDrawerItemClick: (text: string, index: number) => void;\n  onClose: VoidFunction;\n}) => {\n  const theme = useTheme();\n\n  return (\n    <Drawer anchor={\"bottom\"} open={open} onClose={onClose}>\n      {menus.map((text, index) => (\n        <ListItem\n          button\n          key={text}\n          onClick={() => onDrawerItemClick(text, index)}\n        >\n          <ListItemText primary={text} />\n        </ListItem>\n      ))}\n\n      <Divider />\n      <SizedBox height={theme.spacing(6)} />\n    </Drawer>\n  );\n};\n\nexport default PageDrawer;\n","import { Column, SizedBox } from \"../../components/basic\";\nimport { makeStyles, Typography } from \"@material-ui/core\";\n\nconst useStyle = makeStyles((theme) => ({\n  container: {\n    height: 500,\n  },\n}));\n\nconst TransactionView = () => {\n  const classes = useStyle();\n\n  return (\n    <Column className={classes.container}>\n      <Typography component={\"h1\"} variant={\"h4\"} align={\"center\"}>\n        Transaction\n      </Typography>\n      <SizedBox height={32} />\n\n      <Typography component={\"h5\"} align={\"center\"} color={\"textSecondary\"}>\n        Developing...\n      </Typography>\n    </Column>\n  );\n};\n\nexport default TransactionView;\n","import TransactionView from \"./view\";\n\nconst Transaction = () => <TransactionView />;\n\nexport default Transaction;\n","import {\n  AppBar,\n  CssBaseline,\n  IconButton,\n  makeStyles,\n  Paper,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport MessageEditor from \"./pages/Message\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport PageDrawer from \"./components/PageDrawer\";\nimport Transaction from \"./pages/Transaction\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    color: \"default\",\n    position: \"relative\",\n  },\n  main: {\n    width: \"auto\",\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    [theme.breakpoints.up(800 + theme.spacing(2) * 2)]: {\n      width: 800,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(5),\n    },\n  },\n}));\n\nconst DRAWER_MENU = [\"Message\", \"Transaction\"];\nconst DEFAULT_PAGE = \"Message\";\n\nconst Pagers = {\n  Message: () => MessageEditor,\n  Transaction: () => Transaction,\n};\n\nconst App = () => {\n  const classes = useStyles();\n  const [isDrawerOpening, setIsDrawerOpening] = useState<boolean>(false);\n  const [Page, setPage] = useState<React.FC>(Pagers[DEFAULT_PAGE]);\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color={\"inherit\"}\n            aria-label={\"open drawer\"}\n            onClick={() => setIsDrawerOpening((prevState) => !prevState)}\n            edge={\"start\"}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant={\"h6\"} color={\"inherit\"} noWrap>\n            Ethereum Utils\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <PageDrawer\n        menus={DRAWER_MENU}\n        open={isDrawerOpening}\n        onClose={() => setIsDrawerOpening(() => false)}\n        onDrawerItemClick={(text) => {\n          setPage((Pagers as any)[text]);\n          setIsDrawerOpening(false);\n        }}\n      />\n\n      <main className={classes.main}>\n        <Paper className={classes.paper}>\n          <Page />\n        </Paper>\n      </main>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Web3Root from \"./connector\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Web3Root>\n      <App />\n    </Web3Root>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import * as signUtil from \"eth-sig-util\";\n\nexport const easyCheckMessageHash = (\n  messageHash: string | undefined\n): boolean => {\n  if (\n    typeof messageHash === \"string\" &&\n    messageHash.startsWith(\"0x\") &&\n    messageHash.length === 66\n  ) {\n    try {\n      return Buffer.from(messageHash.slice(2), \"hex\").length === 32;\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  return false;\n};\n\nexport const easyCheckSignature = (signature: string | undefined): boolean => {\n  if (\n    typeof signature == \"string\" &&\n    signature.startsWith(\"0x\") &&\n    signature.length === 132\n  ) {\n    try {\n      return Buffer.from(signature.slice(2), \"hex\").length === 65;\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  return false;\n};\n\nexport const easyCheckLegacyEIP712Struct = (value: string | undefined) => {\n  if (\n    typeof value === \"string\" &&\n    value.startsWith(\"[\") &&\n    value.endsWith(\"]\")\n  ) {\n    try {\n      const struct = JSON.parse(value);\n      if (Array.isArray(struct)) {\n        return struct.every(\n          (i: any) =>\n            typeof i === \"object\" &&\n            typeof i.type === \"string\" &&\n            typeof i.name == \"string\" &&\n            i.value !== undefined\n        );\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  return false;\n};\n\nexport const easyCheckStandardEIP712Struct = (value: string | undefined) => {\n  if (\n    typeof value === \"string\" &&\n    value.startsWith(\"{\") &&\n    value.endsWith(\"}\")\n  ) {\n    try {\n      const struct = JSON.parse(value);\n      if (typeof struct === \"object\") {\n        return signUtil.TYPED_MESSAGE_SCHEMA.required.every((i) => !!struct[i]);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  return false;\n};\n\nexport const toEditorJsonString = (value: string): string => {\n  if (value) {\n    try {\n      const data = JSON.parse(value);\n      return JSON.stringify(data, undefined, 2);\n    } catch (e) {}\n  }\n\n  return value;\n};\n\nexport const stringifyProviderError = (error: any): string => {\n  const errorType = typeof error;\n  if (errorType === \"undefined\") {\n    return \"Something wrong\";\n  } else if (errorType === \"string\") {\n    return error;\n  } else if (errorType === \"object\" && typeof error.message === \"string\") {\n    return error.message;\n  } else if (errorType === \"object\" && error.data) {\n    return JSON.stringify(error.data);\n  } else {\n    return JSON.stringify(error);\n  }\n};\n"],"sourceRoot":""}