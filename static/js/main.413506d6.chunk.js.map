{"version":3,"sources":["components/PagePaper.tsx","utils/index.ts","components/Editor.tsx","components/basic.tsx","components/JazziconAvatar.tsx","pages/Discussion/view.tsx","types/contracts/factories/OpenBoard__factory.ts","types/contracts/factories/Ownable__factory.ts","pages/Discussion/helper.ts","pages/Discussion/index.tsx","components/ExpandableHelperText.tsx","components/MultiActionsSelector.tsx","pages/Transaction/view.tsx","pages/Transaction/helper.ts","pages/Transaction/index.tsx","web3/Web3Root.tsx","components/PagesDrawer.tsx","App.tsx","index.tsx","pages/Message/view.tsx","pages/Message/methods.ts","pages/Message/index.tsx","hooks/index.ts","pages/Message/helper.ts","web3/connector.tsx","components/LabelText.tsx"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","marginBottom","padding","breakpoints","up","width","marginLeft","marginRight","PagePaper","children","props","classes","className","prettify","value","format","JSON","parse","stringify","undefined","Error","Editor","useTheme","isUp800","useMediaQuery","fontSize","showGutter","wrapEnabled","showPrintMargin","highlightActiveLine","enableBasicAutocompletion","enableLiveAutocompletion","tabSize","debounceChangePeriod","Flex","styled","display","Column","flexDirection","Row","Center","justifyContent","alignItems","SizedBox","height","JazziconAvatar","address","size","ref","React","createRef","useEffect","current","parent","count","length","i","removeChild","clearChildren","node","jazzicon","parseInt","slice","appendChild","useStyle","container","maxHeight","emptyContainer","textAlign","color","palette","divider","records","minHeight","overflow","boxShadow","recordItemPrimary","fontWeight","recordItemSecondary","flexBox","flex","floorLabel","borderRadius","backgroundColor","lineHeight","inputContainer","paddingLeft","transition","transform","RecordItemView","record","id","sender","message","date","isLastOne","account","floor","shortSender","ListItem","ListItemAvatar","Badge","invisible","toLowerCase","badgeContent","anchorOrigin","vertical","horizontal","ListItemText","disableTypography","primary","Link","href","target","Typography","variant","secondary","Divider","component","DiscussionView","isWrongNetwork","messageValue","onMessageValueChange","submitMessage","connectWallet","List","map","index","me","Forum","TextField","fullWidth","multiline","maxRows","placeholder","onChange","e","IconButton","disabled","Send","onClick","_abi","anonymous","inputs","components","internalType","name","type","indexed","outputs","stateMutability","_bytecode","OpenBoard__factory","signer","overrides","utils","Interface","signerOrProvider","Contract","ContractFactory","bytecode","abi","normalizeRecord","origin","toNumber","moment","timestamp","fromNow","isDonated","donatedValue","toString","loadHistoricalRecords","contract","a","recordId","lastIndex","Math","min","lastBatch","calls","push","Promise","all","originRecords","sort","b","Discussion","useActiveWeb3React","chainId","activateInjectedWeb3","useWeb3ReactActivate","useContract","useState","setRecords","setMessageValue","useCallback","then","catch","console","error","cancelled","filter","filters","NewRecord","listener","newRecord","prevState","on","removeListener","log","ExpandableHelperText","stripThreshold","isDialogOpen","setIsDialogOpen","isLongText","stripText","FormHelperText","underline","Dialog","scroll","open","onClose","DialogTitle","DialogContent","DialogContentText","MultiActionsSelector","selectedIndex","actions","onActionSelect","groupProps","openMenu","setOpenMenu","anchorEl","setAnchorEl","ButtonGroup","action","Button","currentTarget","Boolean","ArrowDropDown","Menu","keepMounted","MenuItem","selected","label","bottomContainer","flexWrap","nodeInput","borderColor","actionBtn","TransactionView","rawTransactionHelperText","rawTransactionValue","onRawTransactionInputChange","jsonTransactionHelperText","jsonTransactionValue","onJsonTransactionInputChange","txidValue","senderAddressValue","nodeSelectedIndex","onNodeSelect","isWalletInjected","injectWallet","customNodeValue","onCustomNodeValueChange","actionBtnState","align","mode","LabelText","FormHelperTextProps","InputProps","normalizedTransactionKeys","chain_id","gas_limit","gas","gas_price","access_list","max_priority_fee_per_gas","max_fee_per_gas","input","asHexNumber","BigNumber","from","toHexString","asNumber","normalizedTransactionValues","hash","addHexPrefix","to","nonce","gasLimit","max","gasPrice","data","maxPriorityFeePerGas","maxFeePerGas","r","s","v","allowedUnsignedTransactionKeys","allowedSignatureKeys","allowedTransactionKeys","normalizedTransaction","maybe_transaction","Object","fromEntries","entries","isMeaninglessValue","key","includes","serializeTransaction","maybeTransaction","transaction","signature","keys","exportSignature","unSignedTransaction","serialize","deserializeTransaction","rawTransaction","ExplorerUrlsForTx","DEFAULT_ACTION_BTN_STATE","renderActionBtnState","provider","onTransactionSigned","signed","txid","payload","btnState","getNetwork","network","send","tx","window","replace","Web3Provider","getSigner","sendTransaction","assign","Transaction","useInjectedWeb3React","active","injectedProvider","library","backupProvider","useBackupWeb3React","setJsonTransactionValue","setJsonTransactionHelperText","setRawTransactionValue","setRawTransactionHelperText","txSnapshot","setTxSnapshot","setNodeSelectedIndex","setCustomNodeValue","useMemo","url","URL","protocol","isValidUrl","JsonRpcProvider","setActionBtnState","updateTransaction","source","trim","jsonTransaction","senderAddress","onTransactionEditorChange","CircularProgress","BackupWeb3ReactProvider","createWeb3ReactRoot","BACKUP_NETWORK_ID","EagerConnectWrapper","useEagerConnect","Web3Root","getLibrary","drawer","drawerPaper","drawerHeader","mixins","toolbar","menuItem","PagesDrawer","menus","onDrawerItemClick","isDown800","down","drawerProps","anchor","Drawer","text","button","appBar","position","main","Pagers","Message","require","default","DRAWER_MENU","DEFAULT_PAGE","MyAppBar","onDrawerBtnClick","AppBar","Toolbar","edge","noWrap","App","isDrawerOpening","setIsDrawerOpening","Page","setPage","CssBaseline","ReactDOM","render","StrictMode","document","getElementById","options","margin","caseGroup","bottomButtonGroup","MessageEditorView","methodOptions","selectedMethod","onMethodSelected","cases","checkIsTargetMessage","hashMessage","isWalletEnabled","connectedAccount","onSign","preferJsonStringMessage","messageHashValue","setMessageHashValue","signatureValue","setSignatureValue","disabledSignBtn","setDisabledSignBtn","recoveredAddress","setRecoveredAddress","setMessageValueWrapper","formattedMessage","onSignButtonClick","messageHash","easyCheckMessageHash","hashIt","Select","event","method","tag","Chip","onTagClick","DEMO_TYPED_DATA_01","DEMO_TYPED_DATA_02","DEMO_TYPED_DATA_03","Methods","eth_sign","resolve","signMessage","response","result","personal_sign","ethUtil","typed_data_sign","easyCheckLegacyEIP712Struct","signUtil","isMetaMask","typed_data_sign_v1","typed_data_sign_v3","easyCheckStandardEIP712Struct","sign","typed_data_sign_v4","recoverAddress","hashBuffer","sigBuffer","assert","public_key","MessageEditor","web3","setSelectedMethod","snackBarState","setSnackBarState","easyCheckSignature","isPositive","stringifyProviderError","isOpening","Snackbar","autoHideDuration","severity","useWeb3React","backup","networkKey","activate","connector","backupNetworkConnector","injectedNetworkConnector","activateBackupWeb3","isAuthorized","contract_factory_class","connect","startsWith","Buffer","endsWith","struct","Array","isArray","every","required","errorType","ethereum","autoRefreshOnNetworkChange","INFURA_KEY","process","NetworkConnector","urls","defaultChainId","pollingInterval","InjectedConnector"],"mappings":"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","file":"static/js/main.413506d6.chunk.js","sourcesContent":["import { makeStyles, Paper } from '@material-ui/core';\nimport { PaperProps } from '@material-ui/core/Paper/Paper';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(800 + theme.spacing(2) * 2)]: {\n      width: 800,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n}));\n\nconst PagePaper = ({ children, ...props }: PaperProps) => {\n  const classes = useStyles();\n  return (\n    <Paper className={classes.paper} {...props}>\n      {children}\n    </Paper>\n  );\n};\n\nexport default PagePaper;\n","export const prettify = (\n  value: string | object,\n  format: 'json' | 'text',\n): string => {\n  if (format === 'json') {\n    if (typeof value === 'string') {\n      value = JSON.parse(value);\n    }\n\n    return JSON.stringify(value, undefined, 2);\n  } else if (format === 'text') {\n    if (typeof value === 'object') {\n      value = JSON.stringify(value);\n    }\n\n    return value;\n  } else {\n    throw Error(`Invalid format: ${format}, value: ${value}`);\n  }\n};\n","import AceEditor from 'react-ace';\nimport { IAceEditorProps } from 'react-ace/lib/ace';\nimport 'ace-builds/src-noconflict/mode-json';\nimport 'ace-builds/src-noconflict/theme-tomorrow_night_eighties';\nimport { useMediaQuery, useTheme } from '@material-ui/core';\n\nconst Editor = (props: IAceEditorProps) => {\n  const theme = useTheme();\n  const isUp800 = useMediaQuery(theme.breakpoints.up(800));\n\n  return (\n    <AceEditor\n      width={'100%'}\n      fontSize={14}\n      showGutter={isUp800}\n      wrapEnabled\n      showPrintMargin\n      highlightActiveLine\n      enableBasicAutocompletion\n      enableLiveAutocompletion\n      tabSize={2}\n      debounceChangePeriod={600}\n      {...props}\n    />\n  );\n};\n\nexport default Editor;\n","import { styled, Theme } from '@material-ui/core';\n\nconst Flex = styled('div')({\n  display: 'flex',\n});\n\nconst Column = styled(Flex)({\n  flexDirection: 'column',\n});\n\nconst Row = styled(Flex)({\n  flexDirection: 'row',\n});\n\nconst Center = styled(Flex)({\n  justifyContent: 'center',\n  alignItems: 'center',\n});\n\nconst SizedBox = styled('div')<Theme, { width?: any; height?: any }>(\n  ({ width, height }) => ({\n    width: width,\n    height: height,\n  }),\n);\n\nexport { Flex, Column, Row, Center, SizedBox };\n","import React, { useEffect } from 'react';\n// @ts-ignore\nimport jazzicon from '@metamask/jazzicon';\n\nconst clearChildren = (parent: HTMLDivElement) => {\n  const count = parent.children.length;\n\n  for (let i = 0; i < count; ++i) {\n    parent.removeChild(parent.children[i]);\n  }\n};\n\nconst JazziconAvatar = ({\n  address,\n  size = 45,\n}: {\n  address: string;\n  size?: number;\n}) => {\n  const ref = React.createRef<HTMLDivElement>();\n\n  useEffect(() => {\n    if (address && size && ref !== null && ref.current) {\n      clearChildren(ref.current);\n\n      const node = jazzicon(size, parseInt(address.slice(2, 10), 16));\n      ref.current.appendChild(node);\n    }\n  }, [address, size, ref]);\n\n  return <div ref={ref} />;\n};\n\nexport default JazziconAvatar;\n","import PagePaper from '../../components/PagePaper';\nimport {\n  Badge,\n  Divider,\n  IconButton,\n  Link,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  makeStyles,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport { Center, Column, Row, SizedBox } from '../../components/basic';\nimport { Record } from './helper';\nimport JazziconAvatar from '../../components/JazziconAvatar';\nimport { Forum, Send } from '@material-ui/icons';\n\nconst useStyle = makeStyles((theme) => ({\n  container: {\n    alignItems: 'center',\n    maxHeight: '80vh',\n    '& > *': {\n      width: '100%',\n    },\n  },\n  emptyContainer: {\n    flexDirection: 'column',\n    height: '30vh',\n    textAlign: 'center',\n    '& > #logo': {\n      fontSize: 80,\n      color: theme.palette.divider,\n    },\n  },\n  records: {\n    display: 'flex',\n    flexDirection: 'column-reverse',\n    minHeight: 300,\n    overflow: 'auto',\n    boxShadow: 'inset 0 -1px 1px -1px gray',\n  },\n  recordItemPrimary: {\n    alignItems: 'center',\n    fontSize: 13,\n    marginBottom: 8,\n    '& > #link': {\n      marginLeft: 2,\n      fontSize: 14,\n      fontWeight: 600,\n    },\n    '& > #dot': {\n      fontWeight: 400,\n      marginLeft: 4,\n      marginRight: 4,\n    },\n    '& > #date': {\n      fontWeight: 500,\n    },\n  },\n  recordItemSecondary: {\n    maxHeight: 80,\n    overflow: 'auto',\n  },\n  flexBox: {\n    flex: 1,\n  },\n  floorLabel: {\n    borderRadius: '10px',\n    backgroundColor: 'rgb(240, 240, 240)',\n    color: 'rgb(204, 204, 204)',\n    padding: '2px 5px 2px 5px',\n    fontSize: '9px',\n    lineHeight: '9px',\n    fontWeight: 600,\n  },\n  inputContainer: {\n    alignItems: 'center',\n    paddingLeft: 16,\n    '& > #send': {\n      transition: 'transform 300ms ease-in-out',\n      '&:hover': {\n        transform: 'rotate(-45deg)',\n      },\n    },\n  },\n}));\n\nexport interface DiscussionViewProps {\n  isWrongNetwork: boolean;\n  records: Array<Record>;\n  account: string;\n  messageValue: string;\n  onMessageValueChange: (value: string) => void;\n  submitMessage: () => void;\n  connectWallet: () => void;\n}\n\nconst DiscussionView = ({\n  isWrongNetwork,\n  records,\n  account,\n  messageValue,\n  onMessageValueChange,\n  submitMessage,\n  connectWallet,\n}: DiscussionViewProps) => {\n  const classes = useStyle();\n\n  return (\n    <PagePaper>\n      <Column className={classes.container}>\n        <Center>\n          <Badge badgeContent={'Dev'} color={'secondary'}>\n            <Typography component={'h1'} variant={'h4'}>\n              Discussion\n            </Typography>\n          </Badge>\n        </Center>\n        <SizedBox height={32} />\n\n        {records.length > 0 ? (\n          <List className={classes.records}>\n            {records.map((i, index, me) => (\n              <RecordItemView\n                key={i.id}\n                record={i}\n                isLastOne={index + 1 === me.length}\n                account={account}\n              />\n            ))}\n          </List>\n        ) : (\n          <Center className={classes.emptyContainer}>\n            <Forum id={'logo'} />\n            {isWrongNetwork && (\n              <Typography variant={'body2'} color={'error'}>\n                Wrong network <br />\n                Please connect to the Ropsten Ethereum network.\n              </Typography>\n            )}\n          </Center>\n        )}\n        <SizedBox height={8} />\n        <Row className={classes.inputContainer}>\n          <TextField\n            id={'input'}\n            fullWidth\n            multiline\n            maxRows={3}\n            placeholder={'Join the discussion...'}\n            value={messageValue}\n            onChange={(e) => onMessageValueChange(e.target.value)}\n          />\n          <IconButton id={'send'} color={'primary'} disabled={!account}>\n            <Send onClick={!!account ? submitMessage : connectWallet} />\n          </IconButton>\n        </Row>\n      </Column>\n    </PagePaper>\n  );\n};\n\nconst RecordItemView = ({\n  record: { id, sender, message, date },\n  isLastOne,\n  account,\n}: {\n  record: Record;\n  isLastOne: boolean;\n  account: string;\n}) => {\n  const classes = useStyle();\n  const floor = `${id}`;\n  const shortSender = `${sender.slice(0, 6)}`;\n\n  return (\n    <>\n      <ListItem alignItems={'flex-start'}>\n        <ListItemAvatar>\n          <Badge\n            invisible={account.toLowerCase() !== sender.toLowerCase()}\n            badgeContent={'me'}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            color={'secondary'}\n          >\n            <JazziconAvatar address={sender} />\n          </Badge>\n        </ListItemAvatar>\n\n        <ListItemText\n          disableTypography\n          primary={\n            <Row className={classes.recordItemPrimary}>\n              <Link\n                id={'link'}\n                href={`https://blockscan.com/address/${sender}`}\n                target={'_blank'}\n              >\n                {shortSender}\n              </Link>\n              <Typography id={'dot'} variant={'caption'}>\n                •\n              </Typography>\n              <Typography\n                id={'date'}\n                variant={'inherit'}\n                color={'textSecondary'}\n              >\n                {date}\n              </Typography>\n              <div className={classes.flexBox} />\n              <span className={classes.floorLabel}>{floor}</span>\n            </Row>\n          }\n          secondary={\n            <Typography\n              className={classes.recordItemSecondary}\n              variant={'body2'}\n            >\n              {message}\n            </Typography>\n          }\n        />\n      </ListItem>\n      {!isLastOne && <Divider variant={'inset'} component={'li'} />}\n    </>\n  );\n};\n\nexport default DiscussionView;\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';\nimport { Provider, TransactionRequest } from '@ethersproject/providers';\nimport type { OpenBoard, OpenBoardInterface } from '../OpenBoard';\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        components: [\n          {\n            internalType: 'uint256',\n            name: 'id',\n            type: 'uint256',\n          },\n          {\n            internalType: 'address',\n            name: 'sender',\n            type: 'address',\n          },\n          {\n            internalType: 'string',\n            name: 'message',\n            type: 'string',\n          },\n          {\n            internalType: 'uint256',\n            name: 'timestamp',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bool',\n            name: 'isDonated',\n            type: 'bool',\n          },\n          {\n            internalType: 'uint256',\n            name: 'donatedValue',\n            type: 'uint256',\n          },\n        ],\n        indexed: false,\n        internalType: 'struct Record',\n        name: 'record',\n        type: 'tuple',\n      },\n    ],\n    name: 'NewRecord',\n    type: 'event',\n  },\n  {\n    inputs: [],\n    name: 'MAX_CAPACITY',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bool',\n        name: '_enabled',\n        type: 'bool',\n      },\n    ],\n    name: 'changeEnabled',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'newOwner',\n        type: 'address',\n      },\n    ],\n    name: 'changeOwner',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'enabled',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'historicalDonation',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'owner',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'recordId',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    name: 'records',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: 'id',\n        type: 'uint256',\n      },\n      {\n        internalType: 'address',\n        name: 'sender',\n        type: 'address',\n      },\n      {\n        internalType: 'string',\n        name: 'message',\n        type: 'string',\n      },\n      {\n        internalType: 'uint256',\n        name: 'timestamp',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bool',\n        name: 'isDonated',\n        type: 'bool',\n      },\n      {\n        internalType: 'uint256',\n        name: 'donatedValue',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'message',\n        type: 'string',\n      },\n    ],\n    name: 'submitMessage',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'message',\n        type: 'string',\n      },\n    ],\n    name: 'donate',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'ownerClaim',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n];\n\nconst _bytecode =\n  '';\n\nexport class OpenBoard__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    overrides?: Overrides & { from?: string | Promise<string> },\n  ): Promise<OpenBoard> {\n    return super.deploy(overrides || {}) as Promise<OpenBoard>;\n  }\n  getDeployTransaction(\n    overrides?: Overrides & { from?: string | Promise<string> },\n  ): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): OpenBoard {\n    return super.attach(address) as OpenBoard;\n  }\n  connect(signer: Signer): OpenBoard__factory {\n    return super.connect(signer) as OpenBoard__factory;\n  }\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): OpenBoardInterface {\n    return new utils.Interface(_abi) as OpenBoardInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider,\n  ): OpenBoard {\n    return new Contract(address, _abi, signerOrProvider) as OpenBoard;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from 'ethers';\nimport { Provider } from '@ethersproject/providers';\nimport type { Ownable, OwnableInterface } from '../Ownable';\n\nconst _abi = [\n  {\n    inputs: [],\n    name: 'enabled',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'owner',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'newOwner',\n        type: 'address',\n      },\n    ],\n    name: 'changeOwner',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bool',\n        name: '_enabled',\n        type: 'bool',\n      },\n    ],\n    name: 'changeEnabled',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n];\n\nexport class Ownable__factory {\n  static readonly abi = _abi;\n  static createInterface(): OwnableInterface {\n    return new utils.Interface(_abi) as OwnableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider,\n  ): Ownable {\n    return new Contract(address, _abi, signerOrProvider) as Ownable;\n  }\n}\n","import { OpenBoard, OpenBoard__factory } from '../../types/contracts';\nimport { useContract } from '../../hooks';\nimport moment from 'moment';\n\nconst CONTRACT_ADDRESS = '0xa5954b05e2d7dbc2894bfe2732207ce2d8f656c7';\n\nexport const useOpenBoardContract = () =>\n  useContract(CONTRACT_ADDRESS, OpenBoard__factory) as OpenBoard;\n\nexport interface Record {\n  id: number;\n  sender: string;\n  message: string;\n  date: string;\n  isDonated: boolean;\n  donatedValue: number;\n}\n\nexport const normalizeRecord = (origin: any): Record => ({\n  id: origin.id.toNumber(),\n  sender: origin.sender,\n  message: origin.message,\n  date: moment(origin.timestamp * 1e3).fromNow(),\n  isDonated: origin.isDonated,\n  donatedValue: origin.donatedValue.toString(),\n});\n","import DiscussionView from './view';\nimport { normalizeRecord, Record, useOpenBoardContract } from './helper';\nimport { OpenBoard } from '../../types/contracts';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useActiveWeb3React, useWeb3ReactActivate } from '../../hooks';\n\nconst MAX_CAPACITY = 100;\n\nconst loadHistoricalRecords = async (\n  contract: OpenBoard,\n): Promise<Array<Record>> => {\n  const recordId = (await contract.recordId()).toNumber();\n  const lastIndex = Math.min(recordId, MAX_CAPACITY);\n\n  const records: Array<Record> = [];\n\n  for (let i = 0; i < lastIndex; ++i) {\n    const batchSize = 10;\n    const lastBatch = Math.min(i + batchSize, lastIndex);\n    const calls = [];\n    while (i < lastBatch) {\n      calls.push(contract.records(i));\n      ++i;\n    }\n    const originRecords = await Promise.all(calls);\n    records.push(...originRecords.map(normalizeRecord));\n  }\n\n  records.sort((a, b) => b.id - a.id);\n  return records;\n};\n\nconst Discussion = () => {\n  const { account, chainId } = useActiveWeb3React();\n  const activateInjectedWeb3 = useWeb3ReactActivate();\n  const contract: OpenBoard | undefined = useOpenBoardContract();\n  const [records, setRecords] = useState<Array<Record>>([]);\n  const [messageValue, setMessageValue] = useState<string>('');\n\n  const submitMessage = useCallback(() => {\n    if (!contract || !messageValue) {\n      return;\n    }\n\n    contract\n      .submitMessage(messageValue)\n      .then(() => setMessageValue(''))\n      .catch(console.error);\n  }, [contract, messageValue]);\n\n  useEffect(() => {\n    if (!contract) {\n      return;\n    }\n\n    let cancelled = false;\n    loadHistoricalRecords(contract)\n      .then((records) => !cancelled && setRecords(records))\n      .catch(console.error);\n\n    const filter = contract.filters.NewRecord();\n    const listener = (newRecord: any) => {\n      if (!cancelled) {\n        setRecords((prevState) => [normalizeRecord(newRecord), ...prevState]);\n      }\n    };\n    contract.on(filter, listener);\n\n    return () => {\n      cancelled = true;\n      contract.removeListener(filter, listener);\n    };\n  }, [contract, account]);\n  console.log(chainId);\n\n  return (\n    <DiscussionView\n      isWrongNetwork={chainId !== 3}\n      records={records}\n      account={typeof account === 'string' ? account : ''}\n      connectWallet={activateInjectedWeb3}\n      messageValue={messageValue}\n      onMessageValueChange={setMessageValue}\n      submitMessage={submitMessage}\n    />\n  );\n};\n\nexport default Discussion;\n","import { Row, SizedBox } from './basic';\nimport {\n  Dialog,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormHelperText,\n  Link,\n} from '@material-ui/core';\nimport { useState } from 'react';\n\nconst ExpandableHelperText = ({\n  value,\n  stripThreshold = 50,\n}: {\n  value: string | undefined;\n  stripThreshold?: number;\n}) => {\n  const [isDialogOpen, setIsDialogOpen] = useState<boolean>(false);\n  const isLongText = value && value.length >= stripThreshold;\n  const stripText = isLongText\n    ? value?.slice(0, stripThreshold) + '...'\n    : value;\n\n  return (\n    <>\n      {value && (\n        <FormHelperText error>\n          <Row>\n            {stripText}\n            {isLongText && (\n              <>\n                <SizedBox width={3} />\n                <Link\n                  component=\"button\"\n                  onClick={() => setIsDialogOpen(true)}\n                  color={'inherit'}\n                  underline={'always'}\n                  aria-label={value}\n                >\n                  more\n                </Link>\n                <Dialog\n                  scroll={'paper'}\n                  open={isDialogOpen}\n                  onClose={() => setIsDialogOpen(false)}\n                >\n                  <DialogTitle>Error</DialogTitle>\n                  <DialogContent>\n                    <DialogContentText>{value}</DialogContentText>\n                  </DialogContent>\n                </Dialog>\n              </>\n            )}\n          </Row>\n        </FormHelperText>\n      )}\n    </>\n  );\n};\n\nexport default ExpandableHelperText;\n","import {\n  Button,\n  ButtonGroup,\n  ButtonGroupProps,\n  Menu,\n  MenuItem,\n} from '@material-ui/core';\nimport { ArrowDropDown } from '@material-ui/icons';\nimport React from 'react';\n\nexport interface MultiActionType {\n  label: string;\n  action: JSX.Element;\n}\n\nconst MultiActionsSelector = ({\n  selectedIndex,\n  actions,\n  onActionSelect,\n  groupProps,\n}: {\n  selectedIndex: number;\n  actions: Array<MultiActionType>;\n  onActionSelect: (action: MultiActionType, index: number) => void;\n  groupProps?: ButtonGroupProps;\n}) => {\n  const [openMenu, setOpenMenu] = React.useState(false);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  // const [selectedIndex, setSelectedIndex] = useState<number>(0);\n\n  return (\n    <ButtonGroup {...groupProps}>\n      {actions[selectedIndex].action}\n      <Button\n        onClick={(e) => {\n          const target = e.currentTarget;\n          setAnchorEl(target);\n          setOpenMenu(Boolean(target));\n        }}\n      >\n        <ArrowDropDown />\n      </Button>\n      <Menu\n        keepMounted\n        anchorEl={anchorEl}\n        open={openMenu}\n        onClose={() => setOpenMenu(false)}\n      >\n        {actions.map((action, index) => (\n          <MenuItem\n            key={action.label}\n            selected={index === selectedIndex}\n            onClick={() => {\n              onActionSelect(action, index);\n              setOpenMenu(false);\n            }}\n          >\n            {action.label}\n          </MenuItem>\n        ))}\n      </Menu>\n    </ButtonGroup>\n  );\n};\n\nexport default MultiActionsSelector;\n","import { Column, Row, SizedBox } from '../../components/basic';\nimport { Button, makeStyles, TextField, Typography } from '@material-ui/core';\nimport PagePaper from '../../components/PagePaper';\nimport Editor from '../../components/Editor';\nimport LabelText from '../../components/LabelText';\nimport SwapVertIcon from '@material-ui/icons/SwapVert';\nimport ExpandableHelperText from '../../components/ExpandableHelperText';\nimport MultiActionsSelector from '../../components/MultiActionsSelector';\n\nconst DEMO_TRANSACTION_JSON = `\n// Input json format transaction here like this:\n{\n  \"nonce\": 0,\n  \"gasPrice\": \"0x0df8475800\",\n  \"gasLimit\": \"0x0186a0\",\n  \"to\": \"0x3535353535353535353535353535353535353535\",\n  \"value\": \"0x64\",\n  \"data\": \"0x\",\n  \"chainId\": 0,\n  \"v\": 27,\n  \"r\": \"0x82de9950cc5aac0dca7210cb4b77320ac9e844717d39b1781e9d941d920a1206\",\n  \"s\": \"0x1da497b3c134f50b2fce514d66e20c5e43f9615f097395a5527041d14860a52f\"\n}\n`;\nconst DEMO_RAW_TRANSACTION = `\n// or hex string raw transaction like this:\n0xf86580850df8475800830186a094353535353535353535353535353535353535353564801ba082de9950cc5aac0dca7210cb4b77320ac9e844717d39b1781e9d941d920a1206a01da497b3c134f50b2fce514d66e20c5e43f9615f097395a5527041d14860a52f\n`;\n\nconst useStyle = makeStyles((theme) => ({\n  container: {\n    alignItems: 'center',\n    '& > *': {\n      width: '100%',\n    },\n  },\n  bottomContainer: {\n    justifyContent: 'flex-end',\n    flexWrap: 'wrap',\n    '& > *': {\n      marginBottom: '8px',\n    },\n  },\n  nodeInput: {\n    height: '40px',\n    borderColor: 'transparent',\n    borderRadius: 0,\n  },\n  actionBtn: {\n    marginLeft: '16px',\n  },\n}));\n\nexport interface ActionBtnState {\n  children: JSX.Element | string;\n  disabled?: boolean;\n  onClick?: () => void;\n}\n\nexport interface TransactionViewProps {\n  rawTransactionValue: string;\n  onRawTransactionInputChange: (value: string) => void;\n  rawTransactionHelperText?: string;\n\n  jsonTransactionHelperText?: string;\n  jsonTransactionValue: string;\n  onJsonTransactionInputChange: (value: string) => void;\n\n  txidValue: string;\n  senderAddressValue: string;\n\n  nodeSelectedIndex: number;\n  onNodeSelect: (index: number) => void;\n  isWalletInjected: boolean;\n  chainIdOnEnv?: number;\n  injectWallet: () => void;\n  customNodeValue: string;\n  onCustomNodeValueChange: (value: string) => void;\n  actionBtnState: ActionBtnState;\n}\n\nconst TransactionView = ({\n  rawTransactionHelperText,\n  rawTransactionValue,\n  onRawTransactionInputChange,\n  jsonTransactionHelperText,\n  jsonTransactionValue,\n  onJsonTransactionInputChange,\n  txidValue,\n  senderAddressValue,\n  nodeSelectedIndex,\n  onNodeSelect,\n  isWalletInjected,\n  injectWallet,\n  customNodeValue,\n  onCustomNodeValueChange,\n  actionBtnState,\n}: TransactionViewProps) => {\n  const classes = useStyle();\n\n  return (\n    <PagePaper>\n      <Column className={classes.container}>\n        <Typography component={'h1'} variant={'h4'} align={'center'}>\n          Transaction\n        </Typography>\n\n        <SizedBox height={32} />\n\n        <Editor\n          name={'transaction_editor'}\n          placeholder={DEMO_TRANSACTION_JSON}\n          mode={'json'}\n          theme={'tomorrow_night_eighties'}\n          value={jsonTransactionValue}\n          onChange={onJsonTransactionInputChange}\n          aria-describedby=\"transaction_editor_helper_text\"\n        />\n        {jsonTransactionHelperText && (\n          <ExpandableHelperText value={jsonTransactionHelperText} />\n        )}\n\n        <SizedBox height={3} />\n        <SwapVertIcon color={'disabled'} />\n        <SizedBox height={3} />\n\n        <TextField\n          error={!!rawTransactionHelperText}\n          multiline\n          maxRows={5}\n          variant={'outlined'}\n          label={\n            rawTransactionValue && rawTransactionValue.length > 0\n              ? 'Raw Transaction'\n              : undefined\n          }\n          placeholder={DEMO_RAW_TRANSACTION}\n          value={rawTransactionValue}\n          onChange={(e) => onRawTransactionInputChange(e.target.value)}\n        />\n        {rawTransactionHelperText && (\n          <ExpandableHelperText value={rawTransactionHelperText} />\n        )}\n\n        <SizedBox height={16} />\n        <LabelText\n          id={'txid'}\n          FormHelperTextProps={{ variant: 'standard' }}\n          value={txidValue}\n          label={'Txid'}\n        />\n        <SizedBox height={8} />\n        <LabelText\n          id={'sender_address'}\n          value={senderAddressValue}\n          label={'Sender Address'}\n        />\n        <SizedBox height={16} />\n\n        <Row className={classes.bottomContainer}>\n          <MultiActionsSelector\n            selectedIndex={nodeSelectedIndex}\n            onActionSelect={(action, index) => onNodeSelect(index)}\n            actions={[\n              {\n                label: 'Default ETH Mainnet',\n                action: <Button>ETH Mainnet</Button>,\n              },\n              {\n                label: 'Connect Wallet',\n                action: (\n                  <Button onClick={injectWallet}>\n                    {isWalletInjected ? 'Connected' : 'Connect Wallet'}\n                  </Button>\n                ),\n              },\n              {\n                label: 'Custom',\n                action: (\n                  <TextField\n                    variant={'outlined'}\n                    value={customNodeValue}\n                    placeholder={'https://my_rpc_node.com'}\n                    onChange={(e) => onCustomNodeValueChange(e.target.value)}\n                    InputProps={{\n                      className: classes.nodeInput,\n                    }}\n                  />\n                ),\n              },\n            ]}\n            groupProps={{\n              variant: 'contained',\n              color: 'primary',\n            }}\n          />\n          <Button\n            className={classes.actionBtn}\n            variant={'contained'}\n            color={'secondary'}\n            {...actionBtnState}\n          />\n        </Row>\n      </Column>\n    </PagePaper>\n  );\n};\n\nexport default TransactionView;\n","import {\n  serialize,\n  parse,\n  Transaction,\n  UnsignedTransaction,\n} from '@ethersproject/transactions';\nimport { Signature } from '@ethersproject/bytes/src.ts/index';\nimport { addHexPrefix } from 'ethereumjs-util';\nimport { BigNumber } from '@ethersproject/bignumber';\n\nconst normalizedTransactionKeys: { [key: string]: string } = {\n  chain_id: 'chainId',\n  gas_limit: 'gasLimit',\n  gas: 'gasLimit',\n  gas_price: 'gasPrice',\n  access_list: 'accessList',\n  max_priority_fee_per_gas: 'maxPriorityFeePerGas',\n  max_fee_per_gas: 'maxFeePerGas',\n  input: 'data',\n};\n\nconst asHexNumber = (value: number | string | undefined): string =>\n  typeof value === 'undefined'\n    ? '0x00'\n    : BigNumber.from(\n        typeof value === 'number' ? value.toString() : value,\n      ).toHexString();\n\nconst asNumber = (value: number | string | undefined): number =>\n  parseInt(asHexNumber(value), 16);\n\nconst normalizedTransactionValues: {\n  [key: string]: (value: any) => any;\n} = {\n  hash: addHexPrefix,\n  from: addHexPrefix,\n  to: addHexPrefix,\n  nonce: asNumber,\n  gasLimit: (value) => asHexNumber(Math.max(21000, asNumber(value))),\n  gasPrice: asHexNumber,\n  data: addHexPrefix,\n  value: asHexNumber,\n  chainId: asNumber,\n  type: asNumber,\n  maxPriorityFeePerGas: asHexNumber,\n  maxFeePerGas: asHexNumber,\n  r: addHexPrefix,\n  s: addHexPrefix,\n  v: asNumber,\n};\n\nconst allowedUnsignedTransactionKeys: Array<string> = [\n  'to',\n  'nonce',\n  'gasLimit',\n  'gasPrice',\n  'data',\n  'value',\n  'chainId',\n  'type',\n  'accessList',\n  'maxPriorityFeePerGas',\n  'maxFeePerGas',\n];\n\nconst allowedSignatureKeys: Array<string> = ['r', 's', 'v'];\n\nconst allowedTransactionKeys: Array<string> = [\n  ...allowedUnsignedTransactionKeys,\n  ...allowedSignatureKeys,\n  'hash',\n  'from',\n];\n\nconst isMeaninglessValue = (value: any) =>\n  typeof value === 'undefined' ||\n  value === null ||\n  (typeof value === 'string' && value.length === 0);\n\nconst normalizedTransaction = (maybe_transaction: object): Transaction => {\n  const transaction = Object.fromEntries(\n    Object.entries(maybe_transaction)\n      .filter(([_, value]) => !isMeaninglessValue(value))\n      .map(([key, value]): [string, any] => [\n        key in normalizedTransactionKeys ? normalizedTransactionKeys[key] : key,\n        key in normalizedTransactionValues\n          ? normalizedTransactionValues[key](value)\n          : value,\n      ])\n      .filter(([key, _]) => allowedTransactionKeys.includes(key)),\n  );\n  return transaction as Transaction;\n};\n\nconst exportSignature = (transaction: Transaction): Signature | undefined => {\n  let signature: Signature | undefined = Object.fromEntries(\n    Object.entries(transaction).filter(([key, _]) =>\n      allowedSignatureKeys.includes(key),\n    ),\n  ) as Signature;\n\n  if (Object.keys(signature).length !== allowedSignatureKeys.length) {\n    signature = undefined;\n  }\n  return signature;\n};\n\nexport const serializeTransaction = (\n  maybeTransaction: object,\n): string | undefined => {\n  const transaction = normalizedTransaction(maybeTransaction);\n  const signature: Signature | undefined = exportSignature(transaction);\n\n  const unSignedTransaction = Object.fromEntries(\n    Object.entries(transaction).filter(([key, _]) =>\n      allowedUnsignedTransactionKeys.includes(key),\n    ),\n  ) as UnsignedTransaction;\n\n  return serialize(unSignedTransaction, signature);\n};\n\nexport const deserializeTransaction = (rawTransaction: string) =>\n  normalizedTransaction(parse(rawTransaction));\n\nexport const ExplorerUrlsForTx: { [key: number]: string } = {\n  1: 'https://etherscan.io/tx/{0}',\n  3: 'https://ropsten.etherscan.io/tx/{0}',\n  56: 'https://bscscan.com/tx/{0}',\n  97: 'https://testnet.bscscan.com/tx/{0}',\n  128: 'https://hecoinfo.com/tx/{0}',\n  256: 'https://testnet.hecoinfo.com/{0}',\n};\n\nexport const DEFAULT_TX_EXPLORER = 'https://blockscan.com/tx/{0}';\n","import TransactionView, { ActionBtnState } from './view';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { prettify } from '../../utils';\nimport {\n  DEFAULT_TX_EXPLORER,\n  deserializeTransaction,\n  ExplorerUrlsForTx,\n  serializeTransaction,\n} from './helper';\nimport { addHexPrefix } from 'ethereumjs-util';\nimport {\n  useBackupWeb3React,\n  useInjectedWeb3React,\n  useWeb3ReactActivate,\n} from '../../hooks';\nimport {\n  JsonRpcProvider,\n  Network,\n  Web3Provider,\n} from '@ethersproject/providers';\nimport { CircularProgress } from '@material-ui/core';\n\nconst DEFAULT_ACTION_BTN_STATE: ActionBtnState = {\n  disabled: true,\n  children: 'Pending',\n};\n\ninterface TxSnapshot {\n  txid?: string;\n  chainId?: number;\n  signed?: boolean;\n  sender?: string;\n  payload: object;\n}\n\nconst isValidUrl = (value: string): boolean => {\n  let url: URL | undefined;\n  try {\n    url = new URL(value);\n  } catch {}\n\n  return url?.protocol === 'http:' || url?.protocol === 'https:';\n};\n\nconst renderActionBtnState = async (\n  provider: any,\n  { signed, txid, chainId, payload }: TxSnapshot,\n  onTransactionSigned: (tx: any) => void,\n): Promise<ActionBtnState> => {\n  let btnState: ActionBtnState | undefined = undefined;\n  const network: Network = await provider.getNetwork();\n\n  if (signed) {\n    if (chainId !== network.chainId) {\n      btnState = {\n        disabled: true,\n        children: 'ChainId Mismatched',\n      };\n    } else if (txid) {\n      const tx = await provider.send('eth_getTransactionByHash', [txid]);\n      if (typeof tx === 'object' && tx !== null && tx.hash === txid) {\n        btnState = {\n          disabled: false,\n          children: 'Transaction Found!',\n          onClick: () =>\n            window.open(\n              (\n                ExplorerUrlsForTx[chainId as number] || DEFAULT_TX_EXPLORER\n              ).replace('{0}', txid as string),\n            ),\n        };\n      }\n    }\n\n    if (!btnState) {\n      btnState = {\n        disabled: false,\n        children: 'Broadcast',\n        onClick: () =>\n          provider.send('eth_sendRawTransaction', [\n            serializeTransaction(payload),\n          ]),\n      };\n    }\n  } else if (provider instanceof Web3Provider) {\n    btnState = {\n      disabled: false,\n      children: 'Sign & Broadcast',\n      onClick: () =>\n        provider\n          .getSigner()\n          .sendTransaction(\n            Object.assign(payload, {\n              chainId: network.chainId,\n            }),\n          )\n          .then((tx) =>\n            onTransactionSigned(\n              Object.assign(tx, { chainId: network.chainId }),\n            ),\n          ),\n    };\n  }\n\n  return btnState || DEFAULT_ACTION_BTN_STATE;\n};\n\nconst Transaction = () => {\n  const { active: isWalletInjected, library: injectedProvider } =\n    useInjectedWeb3React();\n  const { library: backupProvider } = useBackupWeb3React();\n  const activateInjectedWeb3 = useWeb3ReactActivate();\n\n  const [jsonTransactionValue, setJsonTransactionValue] = useState<string>('');\n  const [jsonTransactionHelperText, setJsonTransactionHelperText] = useState<\n    string | undefined\n  >();\n  const [rawTransactionValue, setRawTransactionValue] = useState<string>('');\n  const [rawTransactionHelperText, setRawTransactionHelperText] = useState<\n    string | undefined\n  >();\n  const [txSnapshot, setTxSnapshot] = useState<undefined | TxSnapshot>();\n\n  const [nodeSelectedIndex, setNodeSelectedIndex] = useState<number>(0);\n  const [customNodeValue, setCustomNodeValue] = useState<string>('');\n\n  const provider = useMemo((): any | undefined => {\n    if (nodeSelectedIndex === 0) {\n      return backupProvider;\n    } else if (nodeSelectedIndex === 1) {\n      return injectedProvider;\n    } else if (nodeSelectedIndex === 2 && isValidUrl(customNodeValue)) {\n      return new JsonRpcProvider({ url: customNodeValue });\n    }\n  }, [nodeSelectedIndex, injectedProvider, backupProvider, customNodeValue]);\n\n  const [actionBtnState, setActionBtnState] = useState<ActionBtnState>(\n    DEFAULT_ACTION_BTN_STATE,\n  );\n\n  const updateTransaction = async (\n    value: string,\n    source: 'json_tx' | 'raw_tx',\n  ) => {\n    let rawTransaction: string | undefined;\n\n    if (source === 'raw_tx') {\n      rawTransaction = addHexPrefix(value.trim());\n    } else if (value) {\n      const maybe_transaction = JSON.parse(value);\n      rawTransaction = serializeTransaction(maybe_transaction);\n    }\n\n    if (!rawTransaction) {\n      setTxSnapshot(undefined);\n      return;\n    }\n\n    const jsonTransaction = deserializeTransaction(rawTransaction);\n    const txid = jsonTransaction.hash;\n    const senderAddress = jsonTransaction.from;\n\n    txid && delete jsonTransaction.hash;\n    senderAddress && delete jsonTransaction.from;\n\n    const txSnapshot = {\n      txid,\n      chainId: jsonTransaction.chainId,\n      signed: Boolean(\n        jsonTransaction.r &&\n          jsonTransaction.s &&\n          typeof jsonTransaction.v === 'number',\n      ),\n      sender: senderAddress,\n      payload: jsonTransaction,\n    };\n\n    setRawTransactionHelperText(undefined);\n    setRawTransactionValue(rawTransaction);\n    setJsonTransactionHelperText(undefined);\n    setJsonTransactionValue(prettify(jsonTransaction, 'json'));\n    setTxSnapshot(txSnapshot);\n  };\n\n  const onTransactionEditorChange = useCallback(\n    (value: string) => {\n      if (value !== jsonTransactionValue) {\n        updateTransaction(value, 'json_tx').catch((e: Error) => {\n          console.error(e);\n          try {\n            value = prettify(value, 'json');\n          } catch {}\n          setJsonTransactionValue(value);\n          setJsonTransactionHelperText(e?.message);\n        });\n      } else if (!value) {\n        setJsonTransactionValue(value);\n        setJsonTransactionHelperText(undefined);\n      }\n    },\n    [jsonTransactionValue],\n  );\n\n  const onRawTransactionInputChange = (value: string) => {\n    if (value) {\n      updateTransaction(value, 'raw_tx').catch((e: Error) => {\n        console.error(e);\n        setRawTransactionHelperText(e?.message);\n        setRawTransactionValue(value);\n      });\n    } else {\n      setRawTransactionValue(value);\n      setRawTransactionHelperText(undefined);\n    }\n  };\n\n  useEffect(() => {\n    let cancelled: boolean = false;\n\n    if (typeof provider !== 'undefined' && typeof txSnapshot !== 'undefined') {\n      setActionBtnState({\n        disabled: false,\n        children: <CircularProgress color={'inherit'} size={24} />,\n      });\n      renderActionBtnState(\n        provider,\n        txSnapshot,\n        (tx) => !cancelled && onTransactionEditorChange(JSON.stringify(tx)),\n      )\n        .then((value) => !cancelled && setActionBtnState(() => value))\n        .catch(console.error);\n    } else {\n      setActionBtnState(DEFAULT_ACTION_BTN_STATE);\n    }\n\n    return () => {\n      cancelled = true;\n    };\n  }, [provider, txSnapshot, onTransactionEditorChange]);\n\n  useEffect(() => {\n    if (injectedProvider) {\n      setNodeSelectedIndex(1);\n    }\n  }, [injectedProvider]);\n\n  return (\n    <TransactionView\n      rawTransactionHelperText={rawTransactionHelperText}\n      rawTransactionValue={rawTransactionValue}\n      onRawTransactionInputChange={onRawTransactionInputChange}\n      jsonTransactionHelperText={jsonTransactionHelperText}\n      jsonTransactionValue={jsonTransactionValue}\n      onJsonTransactionInputChange={onTransactionEditorChange}\n      txidValue={txSnapshot?.txid || ''}\n      senderAddressValue={txSnapshot?.sender || ''}\n      nodeSelectedIndex={nodeSelectedIndex}\n      onNodeSelect={setNodeSelectedIndex}\n      isWalletInjected={isWalletInjected}\n      injectWallet={activateInjectedWeb3}\n      customNodeValue={customNodeValue}\n      onCustomNodeValueChange={setCustomNodeValue}\n      actionBtnState={actionBtnState}\n    />\n  );\n};\n\nexport default Transaction;\n","import { createWeb3ReactRoot, Web3ReactProvider } from '@web3-react/core';\nimport { BACKUP_NETWORK_ID, getLibrary } from './connector';\nimport React from 'react';\nimport { useEagerConnect } from '../hooks';\n\nconst BackupWeb3ReactProvider = createWeb3ReactRoot(BACKUP_NETWORK_ID);\n\nconst EagerConnectWrapper = () => {\n  useEagerConnect();\n  return <></>;\n};\n\nconst Web3Root = ({ children }: { children: JSX.Element }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <BackupWeb3ReactProvider getLibrary={getLibrary}>\n        <EagerConnectWrapper />\n        {children}\n      </BackupWeb3ReactProvider>\n    </Web3ReactProvider>\n  );\n};\n\nexport default Web3Root;\n","import {\n  Divider,\n  Drawer,\n  ListItem,\n  ListItemText,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core';\nimport React, { useMemo } from 'react';\nimport { SizedBox } from './basic';\nimport { DrawerProps } from '@material-ui/core/Drawer/Drawer';\n\nconst DRAWER_WIDTH = 240;\nconst useStyle = makeStyles((theme) => ({\n  drawer: {},\n  drawerPaper: {\n    marginTop: theme.spacing(8),\n    width: DRAWER_WIDTH,\n    height: 300,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  menuItem: {\n    height: theme.spacing(8),\n  },\n}));\n\nconst PagesDrawer = ({\n  menus,\n  open,\n  onDrawerItemClick,\n  onClose,\n}: {\n  menus: Array<string>;\n  open: boolean;\n  onDrawerItemClick: (text: string, index: number) => void;\n  onClose: VoidFunction;\n}) => {\n  const classes = useStyle();\n  const theme = useTheme();\n  const isDown800 = useMediaQuery(theme.breakpoints.down(800));\n\n  const drawerProps = useMemo<DrawerProps>(() => {\n    if (isDown800) {\n      return {\n        anchor: 'bottom',\n      };\n    } else {\n      return {\n        anchor: 'left',\n        className: classes.drawer,\n        classes: { paper: classes.drawerPaper },\n      };\n    }\n  }, [classes, isDown800]);\n\n  return (\n    <Drawer open={open} onClose={onClose} {...drawerProps}>\n      {menus.map((text, index) => (\n        <ListItem\n          className={classes.menuItem}\n          button\n          key={text}\n          onClick={() => onDrawerItemClick(text, index)}\n          divider={!isDown800}\n        >\n          <ListItemText primary={text} />\n        </ListItem>\n      ))}\n\n      {isDown800 && <Divider />}\n      <SizedBox height={theme.spacing(6)} />\n    </Drawer>\n  );\n};\n\nexport default PagesDrawer;\n","import {\n  AppBar,\n  CssBaseline,\n  IconButton,\n  makeStyles,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\nimport React, { useState } from 'react';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport PagesDrawer from './components/PagesDrawer';\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    color: 'default',\n    position: 'relative',\n  },\n  main: {\n    width: 'auto',\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst Pagers: { [key: string]: React.FC } = {\n  Message: () => require('./pages/Message/index').default,\n  Transaction: () => require('./pages/Transaction/index').default,\n  Discussion: () => require('./pages/Discussion/index').default,\n};\nconst DRAWER_MENU = Object.keys(Pagers);\nconst DEFAULT_PAGE = DRAWER_MENU[0];\n\nconst MyAppBar = ({ onDrawerBtnClick }: { onDrawerBtnClick: VoidFunction }) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar className={classes.appBar}>\n      <Toolbar>\n        <IconButton\n          color={'inherit'}\n          aria-label={'open drawer'}\n          onClick={onDrawerBtnClick}\n          edge={'start'}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography variant={'h6'} color={'inherit'} noWrap>\n          Web3 Example\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nconst App = () => {\n  const classes = useStyles();\n  const [isDrawerOpening, setIsDrawerOpening] = useState<boolean>(false);\n  const [Page, setPage] = useState<React.FC>(Pagers[DEFAULT_PAGE]);\n\n  return (\n    <>\n      <CssBaseline />\n      <MyAppBar\n        onDrawerBtnClick={() => setIsDrawerOpening((prevState) => !prevState)}\n      />\n      <PagesDrawer\n        menus={DRAWER_MENU}\n        open={isDrawerOpening}\n        onClose={() => setIsDrawerOpening(() => false)}\n        onDrawerItemClick={(text) => {\n          setPage((Pagers as any)[text]);\n          setIsDrawerOpening(false);\n        }}\n      />\n      <main className={classes.main}>\n        <Page />\n      </main>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Web3Root from './web3/Web3Root';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Web3Root>\n      <App />\n    </Web3Root>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import {\n  Button,\n  Chip,\n  makeStyles,\n  MenuItem,\n  Select,\n  Typography,\n} from '@material-ui/core';\nimport { Column, Row, SizedBox } from '../../components/basic';\nimport { useCallback, useEffect, useState } from 'react';\nimport { easyCheckMessageHash } from './helper';\nimport Editor from '../../components/Editor';\nimport LabelText from '../../components/LabelText';\nimport PagePaper from '../../components/PagePaper';\nimport { prettify } from '../../utils';\n\nexport interface MessageViewProps {\n  methodOptions: Array<string>;\n  selectedMethod: string;\n  onMethodSelected: (method: string) => void;\n  cases: Array<{ name: string; value: string }>;\n  checkIsTargetMessage: (message: string) => boolean;\n  hashMessage: (message: string) => Promise<string>;\n  isWalletEnabled: boolean;\n  connectedAccount?: string | null;\n  connectWallet: () => void;\n  onSign: (message: string) => Promise<[string, string]>;\n  preferJsonStringMessage?: boolean;\n}\n\nconst useStyle = makeStyles((theme) => ({\n  container: {\n    padding: 0,\n  },\n  options: {\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    margin: theme.spacing(3, 0, 1),\n  },\n  caseGroup: {\n    flexWrap: 'wrap',\n    padding: 0,\n    marginBottom: theme.spacing(1),\n    '& > *': {\n      margin: theme.spacing(0.5),\n    },\n  },\n  bottomButtonGroup: {\n    justifyContent: 'flex-end',\n    padding: 0,\n  },\n}));\n\nexport const MessageEditorView = ({\n  methodOptions,\n  selectedMethod,\n  onMethodSelected,\n  cases,\n  checkIsTargetMessage,\n  hashMessage,\n  isWalletEnabled,\n  connectedAccount,\n  connectWallet,\n  onSign,\n  preferJsonStringMessage,\n}: MessageViewProps) => {\n  const classes = useStyle();\n  const [messageValue, setMessageValue] = useState<string>('');\n  const [messageHashValue, setMessageHashValue] = useState<string>('');\n  const [signatureValue, setSignatureValue] = useState<string>('');\n  const [disabledSignBtn, setDisabledSignBtn] = useState<boolean>(true);\n  const [recoveredAddress, setRecoveredAddress] = useState<string>('');\n\n  const setMessageValueWrapper = useCallback(\n    (message: string) => {\n      const formattedMessage = prettify(\n        message,\n        preferJsonStringMessage ? 'json' : 'text',\n      );\n\n      setMessageValue(formattedMessage);\n    },\n    [preferJsonStringMessage],\n  );\n\n  const onSignButtonClick = useCallback(async () => {\n    const [signature, recoveredAddress] = await onSign(messageValue);\n    setSignatureValue(signature);\n    setRecoveredAddress(recoveredAddress);\n  }, [messageValue, onSign]);\n\n  const onTagClick = (index: number) => {\n    const message = cases[index].value;\n    setMessageValueWrapper(message);\n  };\n\n  useEffect(() => {\n    if (cases[0].value) {\n      setMessageValueWrapper(cases[0].value);\n    }\n  }, [cases, setMessageValueWrapper]);\n\n  useEffect(() => {\n    const hashIt = async () => {\n      try {\n        let message = messageValue;\n        if (message && checkIsTargetMessage(message)) {\n          const messageHash: string = await hashMessage(message);\n\n          if (easyCheckMessageHash(messageHash)) {\n            setMessageHashValue(messageHash);\n            setDisabledSignBtn(false);\n          } else {\n            setDisabledSignBtn(true);\n          }\n        }\n      } catch (e) {\n        setDisabledSignBtn(true);\n        console.error('Error in hashing message', e);\n      }\n\n      setSignatureValue('');\n      setRecoveredAddress('');\n    };\n\n    hashIt().catch(console.error);\n  }, [checkIsTargetMessage, hashMessage, messageValue]);\n\n  return (\n    <PagePaper>\n      <Column className={classes.container}>\n        <Typography component={'h1'} variant={'h4'} align={'center'}>\n          Message\n        </Typography>\n\n        <Row className={classes.options}>\n          <Select\n            variant={'outlined'}\n            value={selectedMethod}\n            onChange={(event) => onMethodSelected(event.target.value as string)}\n          >\n            {methodOptions.map((method) => (\n              <MenuItem key={method} value={method}>\n                {method}\n              </MenuItem>\n            ))}\n          </Select>\n        </Row>\n\n        <Row className={classes.caseGroup}>\n          {cases.map((tag, index) => (\n            <Chip\n              size={'small'}\n              key={tag.name}\n              label={tag.name}\n              onClick={() => onTagClick(index)}\n            />\n          ))}\n        </Row>\n        <Editor\n          name={'message_editor'}\n          placeholder={'Input Message Here'}\n          mode={'json'}\n          theme={'tomorrow_night_eighties'}\n          value={messageValue}\n          onChange={setMessageValueWrapper}\n        />\n        <SizedBox height={10} />\n        <LabelText\n          id={'message_hash'}\n          value={messageHashValue}\n          label={'Message Hash'}\n        />\n        <SizedBox height={10} />\n        <LabelText\n          id={'signature'}\n          value={signatureValue}\n          label={'Signature'}\n        />\n        <SizedBox height={10} />\n        <LabelText\n          id={'recovered_address'}\n          value={recoveredAddress}\n          label={'Recovered Address'}\n          placeholder={'Please make sure the message and signature are correct'}\n        />\n        <SizedBox height={10} />\n        <Row className={classes.bottomButtonGroup}>\n          <Button\n            variant={'contained'}\n            color={'primary'}\n            disabled={isWalletEnabled}\n            onClick={connectWallet}\n          >\n            {isWalletEnabled && connectedAccount\n              ? `${connectedAccount.slice(0, 4)}...${connectedAccount.slice(\n                  -4,\n                )}`\n              : 'Connect'}\n          </Button>\n          <SizedBox width={16} />\n          <Button\n            variant={'contained'}\n            color={'secondary'}\n            disabled={disabledSignBtn || !isWalletEnabled}\n            onClick={onSignButtonClick}\n          >\n            SIGN\n          </Button>\n        </Row>\n      </Column>\n    </PagePaper>\n  );\n};\n","import {\n  easyCheckLegacyEIP712Struct,\n  easyCheckMessageHash,\n  easyCheckStandardEIP712Struct,\n} from './helper';\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types';\nimport * as ethUtil from 'ethereumjs-util';\nimport * as signUtil from 'eth-sig-util';\n\nexport interface MessageSignMethod {\n  name: string;\n  cases: Array<{ name: string; value: string }>;\n  preferJsonStringMessage?: boolean;\n  checkIsTargetMessage: (message: string) => boolean;\n  hashMessage: (message: string) => Promise<string>;\n  signMessage: (\n    web3: Web3ReactContextInterface,\n    message: string,\n  ) => Promise<string>;\n}\n\nconst DEMO_TYPED_DATA_01 =\n  '{\"types\":{\"EIP712Domain\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"chainId\",\"type\":\"uint256\"},{\"name\":\"verifyingContract\",\"type\":\"address\"}],\"Person\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"wallet\",\"type\":\"address\"}],\"Mail\":[{\"name\":\"from\",\"type\":\"Person\"},{\"name\":\"to\",\"type\":\"Person\"},{\"name\":\"contents\",\"type\":\"string\"}]},\"primaryType\":\"Mail\",\"domain\":{\"name\":\"Ether Mail\",\"version\":\"1\",\"chainId\":1,\"verifyingContract\":\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\"},\"message\":{\"from\":{\"name\":\"Cow\",\"wallet\":\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\"},\"to\":{\"name\":\"Bob\",\"wallet\":\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\"},\"contents\":\"Hello, Bob!\"}}';\nconst DEMO_TYPED_DATA_02 =\n  '{\"types\":{\"EIP712Domain\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"chainId\",\"type\":\"uint256\"},{\"name\":\"verifyingContract\",\"type\":\"address\"}],\"Person\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"wallet\",\"type\":\"address\"}],\"Mail\":[{\"name\":\"from\",\"type\":\"Person\"},{\"name\":\"to\",\"type\":\"Person\"},{\"name\":\"contents\",\"type\":\"string\"},{\"name\":\"payload\",\"type\":\"bytes\"}]},\"primaryType\":\"Mail\",\"domain\":{\"name\":\"Ether Mail\",\"version\":\"1\",\"chainId\":1,\"verifyingContract\":\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\"},\"message\":{\"from\":{\"name\":\"Cow\",\"wallet\":\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\"},\"to\":{\"name\":\"Bob\",\"wallet\":\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\"},\"contents\":\"Hello, Bob!\",\"payload\":\"0x25192142931f380985072cdd991e37f65cf8253ba7a0e675b54163a1d133b8ca\"}}';\nconst DEMO_TYPED_DATA_03 =\n  '{\"types\":{\"EIP712Domain\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"chainId\",\"type\":\"uint256\"},{\"name\":\"verifyingContract\",\"type\":\"address\"}],\"Person\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"mother\",\"type\":\"Person\"},{\"name\":\"father\",\"type\":\"Person\"}]},\"domain\":{\"name\":\"Family Tree\",\"version\":\"1\",\"chainId\":1,\"verifyingContract\":\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\"},\"primaryType\":\"Person\",\"message\":{\"name\":\"Jon\",\"mother\":{\"name\":\"Lyanna\",\"father\":{\"name\":\"Rickard\"}},\"father\":{\"name\":\"Rhaegar\",\"father\":{\"name\":\"Aeris II\"}}}}';\n\nexport const Methods: { [key: string]: MessageSignMethod } = {\n  eth_sign: {\n    name: 'eth_sign',\n    cases: [\n      {\n        name: 'Demo 1',\n        value:\n          '0x0000000000000000000000000000000000000000000000000000000000000000',\n      },\n      {\n        name: 'Demo 2',\n        value:\n          '0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF',\n      },\n    ],\n    checkIsTargetMessage: easyCheckMessageHash,\n    hashMessage: async (message: string): Promise<string> =>\n      Promise.resolve(message),\n    signMessage: (\n      { account, library }: Web3ReactContextInterface,\n      message: string,\n    ): Promise<string> =>\n      library\n        .getSigner(account)\n        .provider.provider.send('eth_sign', [account, message])\n        .then((response: any) => response?.result || response),\n  },\n  personal_sign: {\n    name: 'personal_sign',\n    cases: [\n      { name: 'Hello OneKey', value: 'Hello OneKey' },\n      { name: 'To Da Moon', value: 'To Da Moon' },\n    ],\n    checkIsTargetMessage: (message: string | undefined): boolean =>\n      typeof message === 'string' && message.length > 0,\n    hashMessage: async (message: string): Promise<string> =>\n      ethUtil.addHexPrefix(\n        ethUtil.hashPersonalMessage(ethUtil.toBuffer(message)).toString('hex'),\n      ),\n    signMessage: (\n      { account, library }: Web3ReactContextInterface,\n      message: string,\n    ): Promise<string> =>\n      library\n        .getSigner(account)\n        .provider.send('personal_sign', [account, message])\n        .then((response: any) => response?.result || response),\n  },\n  typed_data_sign: {\n    name: 'typed_data_sign',\n    cases: [\n      {\n        name: 'Single Value',\n        value: '[{\"type\":\"string\",\"name\":\"message\",\"value\":\"Hi, Alice!\"}]',\n      },\n      {\n        name: 'Multiple values',\n        value:\n          '[{\"type\":\"string\",\"name\":\"message\",\"value\":\"Hi, Alice!\"},{\"type\":\"uint8\",\"name\":\"value\",\"value\":10}]',\n      },\n      {\n        name: 'With bytes',\n        value: '[{\"type\":\"bytes\",\"name\":\"message\",\"value\":\"0xdeadbeaf\"}]',\n      },\n    ],\n    preferJsonStringMessage: true,\n    checkIsTargetMessage: easyCheckLegacyEIP712Struct,\n    hashMessage: async (message: string): Promise<string> =>\n      ethUtil.addHexPrefix(signUtil.typedSignatureHash(JSON.parse(message))),\n    signMessage: (\n      { account, library }: Web3ReactContextInterface,\n      message: string,\n    ): Promise<string> =>\n      library.provider\n        .send(\n          'eth_signTypedData',\n          library.provider.isMetaMask\n            ? [JSON.parse(message), account]\n            : [account, message],\n        )\n        .then((response: any) => response?.result || response),\n  },\n  typed_data_sign_v1: {\n    name: 'typed_data_sign_v1',\n    cases: [\n      {\n        name: 'Single Value',\n        value: '[{\"type\":\"string\",\"name\":\"message\",\"value\":\"Hi, Alice!\"}]',\n      },\n      {\n        name: 'Multiple values',\n        value:\n          '[{\"type\":\"string\",\"name\":\"message\",\"value\":\"Hi, Alice!\"},{\"type\":\"uint8\",\"name\":\"value\",\"value\":10}]',\n      },\n      {\n        name: 'With bytes',\n        value: '[{\"type\":\"bytes\",\"name\":\"message\",\"value\":\"0xdeadbeaf\"}]',\n      },\n    ],\n    preferJsonStringMessage: true,\n    checkIsTargetMessage: easyCheckLegacyEIP712Struct,\n    hashMessage: async (message: string): Promise<string> =>\n      ethUtil.addHexPrefix(signUtil.typedSignatureHash(JSON.parse(message))),\n    signMessage: (\n      { account, library }: Web3ReactContextInterface,\n      message: string,\n    ): Promise<string> =>\n      library.provider\n        .send('eth_signTypedData_v1', [account, message])\n        .then((response: any) => response?.result || response),\n  },\n  typed_data_sign_v3: {\n    name: 'typed_data_sign_v3',\n    cases: [\n      {\n        name: 'Demo',\n        value: DEMO_TYPED_DATA_01,\n      },\n      {\n        name: 'With bytes',\n        value: DEMO_TYPED_DATA_02,\n      },\n      {\n        name: 'With recursive types',\n        value: DEMO_TYPED_DATA_03,\n      },\n    ],\n    preferJsonStringMessage: true,\n    checkIsTargetMessage: easyCheckStandardEIP712Struct,\n    hashMessage: async (message: string): Promise<string> =>\n      ethUtil.addHexPrefix(\n        signUtil.TypedDataUtils.sign(JSON.parse(message), false).toString(\n          'hex',\n        ),\n      ),\n    signMessage: (\n      { account, library }: Web3ReactContextInterface,\n      message: string,\n    ): Promise<string> =>\n      library.provider\n        .send('eth_signTypedData_v3', [account, message])\n        .then((response: any) => response?.result || response),\n  },\n  typed_data_sign_v4: {\n    name: 'typed_data_sign_v4',\n    cases: [\n      {\n        name: 'Demo',\n        value: DEMO_TYPED_DATA_01,\n      },\n      {\n        name: 'With bytes',\n        value: DEMO_TYPED_DATA_02,\n      },\n      {\n        name: 'With recursive types',\n        value: DEMO_TYPED_DATA_03,\n      },\n      {\n        name: 'With array',\n        value:\n          '{\"types\":{\"EIP712Domain\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"chainId\",\"type\":\"uint256\"},{\"name\":\"verifyingContract\",\"type\":\"address\"}],\"Person\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"wallets\",\"type\":\"address[]\"}],\"Mail\":[{\"name\":\"from\",\"type\":\"Person\"},{\"name\":\"to\",\"type\":\"Person[]\"},{\"name\":\"contents\",\"type\":\"string\"}],\"Group\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"members\",\"type\":\"Person[]\"}]},\"domain\":{\"name\":\"Ether Mail\",\"version\":\"1\",\"chainId\":1,\"verifyingContract\":\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\"},\"primaryType\":\"Mail\",\"message\":{\"from\":{\"name\":\"Cow\",\"wallets\":[\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\"0xDeaDbeefdEAdbeefdEadbEEFdeadbeEFdEaDbeeF\"]},\"to\":[{\"name\":\"Bob\",\"wallets\":[\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\"0xB0BdaBea57B0BDABeA57b0bdABEA57b0BDabEa57\",\"0xB0B0b0b0b0b0B000000000000000000000000000\"]}],\"contents\":\"Hello, Bob!\"}}',\n      },\n      {\n        name: 'With 2D array',\n        value:\n          '{\"types\":{\"EIP712Domain\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"chainId\",\"type\":\"uint256\"},{\"name\":\"verifyingContract\",\"type\":\"address\"}],\"Person\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"wallets\",\"type\":\"address[]\"},{\"name\":\"logo_matrix\",\"type\":\"int[][]\"}],\"Mail\":[{\"name\":\"from\",\"type\":\"Person\"},{\"name\":\"to\",\"type\":\"Person[]\"},{\"name\":\"contents\",\"type\":\"string\"}],\"Group\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"members\",\"type\":\"Person[]\"}]},\"domain\":{\"name\":\"Ether Mail\",\"version\":\"1\",\"chainId\":1,\"verifyingContract\":\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\"},\"primaryType\":\"Mail\",\"message\":{\"from\":{\"name\":\"Cow\",\"wallets\":[\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\"0xDeaDbeefdEAdbeefdEadbEEFdeadbeEFdEaDbeeF\"],\"logo_matrix\":[[0,255],[-255,-1]]},\"to\":[{\"name\":\"Bob\",\"wallets\":[\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\"0xB0BdaBea57B0BDABeA57b0bdABEA57b0BDabEa57\",\"0xB0B0b0b0b0b0B000000000000000000000000000\"],\"logo_matrix\":[[0,0],[0,0]]}],\"contents\":\"Hello, Bob!\"}}',\n      },\n    ],\n    preferJsonStringMessage: true,\n    checkIsTargetMessage: easyCheckStandardEIP712Struct,\n    hashMessage: async (message: string): Promise<string> =>\n      ethUtil.addHexPrefix(\n        signUtil.TypedDataUtils.sign(JSON.parse(message), true).toString('hex'),\n      ),\n    signMessage: (\n      { account, library }: Web3ReactContextInterface,\n      message: string,\n    ): Promise<string> =>\n      library.provider\n        .send('eth_signTypedData_v4', [account, message])\n        .then((response: any) => response?.result || response),\n  },\n};\n","import { MessageEditorView } from './view';\nimport { useCallback, useState } from 'react';\nimport { MessageSignMethod, Methods } from './methods';\nimport { Snackbar } from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { easyCheckSignature, stringifyProviderError } from './helper';\nimport * as ethUtil from 'ethereumjs-util';\nimport { useInjectedWeb3React, useWeb3ReactActivate } from '../../hooks';\n\nconst recoverAddress = (messageHash: string, signature: string): string => {\n  const hashBuffer = ethUtil.toBuffer(messageHash);\n  const sigBuffer = ethUtil.toBuffer(signature);\n\n  console.assert(\n    hashBuffer.length === 32,\n    `Invalid message hash: ${messageHash}`,\n  );\n  console.assert(sigBuffer.length === 65, `Invalid signature: ${signature}`);\n\n  const [r, s, v] = [\n    sigBuffer.slice(0, 32),\n    sigBuffer.slice(32, 64),\n    sigBuffer[64],\n  ];\n  const public_key = ethUtil.ecrecover(hashBuffer, v, r, s);\n  return ethUtil.addHexPrefix(ethUtil.pubToAddress(public_key).toString('hex'));\n};\n\nconst MessageEditor = () => {\n  const web3 = useInjectedWeb3React();\n  const { active, account } = web3;\n  const activateInjectedWeb3 = useWeb3ReactActivate();\n  const [selectedMethod, setSelectedMethod] = useState<string>('eth_sign');\n  const [snackBarState, setSnackBarState] = useState<{\n    isOpening: boolean;\n    isPositive?: boolean;\n    message?: string;\n  }>();\n\n  const method: MessageSignMethod = Methods[selectedMethod || 'eth_sign'];\n  const onSign = useCallback(\n    async (message: string): Promise<[string, string]> => {\n      console.assert(!!account);\n      let snackBarState: { isPositive: boolean; message: string } | undefined =\n        undefined;\n      let signature = '';\n      let recoveredAddress = '';\n\n      try {\n        signature = await method.signMessage(web3, message);\n        if (signature && easyCheckSignature(signature)) {\n          recoveredAddress = recoverAddress(\n            await method.hashMessage(message),\n            signature,\n          );\n\n          if (recoveredAddress.toLowerCase() === account?.toLowerCase()) {\n            snackBarState = {\n              isPositive: true,\n              message: 'Signature Verified',\n            };\n          } else {\n            snackBarState = {\n              isPositive: false,\n              message: 'Sorry! The Message Signature Verification Failed',\n            };\n          }\n        } else {\n          snackBarState = {\n            isPositive: false,\n            message: 'Invalid signature',\n          };\n        }\n      } catch (e) {\n        console.error('Error in signing message', e);\n\n        snackBarState = {\n          isPositive: false,\n          message: stringifyProviderError(e),\n        };\n      }\n\n      if (snackBarState) {\n        setSnackBarState(() => ({ isOpening: true, ...snackBarState }));\n      }\n\n      return [signature, recoveredAddress];\n    },\n    [web3, account, method],\n  );\n\n  return (\n    <>\n      <MessageEditorView\n        isWalletEnabled={active}\n        connectedAccount={account}\n        connectWallet={activateInjectedWeb3}\n        methodOptions={Object.keys(Methods)}\n        selectedMethod={selectedMethod}\n        onMethodSelected={setSelectedMethod}\n        cases={method.cases}\n        preferJsonStringMessage={method.preferJsonStringMessage}\n        hashMessage={method.hashMessage}\n        checkIsTargetMessage={method.checkIsTargetMessage}\n        onSign={onSign}\n      />\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={snackBarState?.isOpening || false}\n        autoHideDuration={3000}\n        onClose={() =>\n          setSnackBarState((prevState) => ({\n            ...prevState,\n            isOpening: false,\n          }))\n        }\n      >\n        <MuiAlert severity={snackBarState?.isPositive ? 'success' : 'error'}>\n          {snackBarState?.message}\n        </MuiAlert>\n      </Snackbar>\n    </>\n  );\n};\n\nexport default MessageEditor;\n","import { useWeb3React } from '@web3-react/core';\nimport { useCallback, useEffect, useMemo } from 'react';\nimport {\n  BACKUP_NETWORK_ID,\n  backupNetworkConnector,\n  injectedNetworkConnector,\n} from '../web3/connector';\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types';\nimport { Web3Provider } from '@ethersproject/providers';\n\nexport const useInjectedWeb3React = () => useWeb3React<Web3Provider>();\n\nexport const useBackupWeb3React = () =>\n  useWeb3React<Web3Provider>(BACKUP_NETWORK_ID);\n\nexport const useActiveWeb3React =\n  (): Web3ReactContextInterface<Web3Provider> => {\n    const injectedProvider = useInjectedWeb3React();\n    const backupProvider = useBackupWeb3React();\n    return injectedProvider?.active ? injectedProvider : backupProvider;\n  };\n\nexport const useWeb3ReactActivate = (backup: boolean = false) => {\n  const networkKey = backup ? BACKUP_NETWORK_ID : undefined;\n  const { active, activate } = useWeb3React<Web3Provider>(networkKey);\n\n  return useCallback(async () => {\n    if (!active && activate) {\n      const connector = backup\n        ? backupNetworkConnector\n        : injectedNetworkConnector;\n\n      return activate(connector);\n    }\n  }, [active, activate, backup]);\n};\n\nexport const useEagerConnect = () => {\n  const activateInjectedWeb3 = useWeb3ReactActivate();\n  const activateBackupWeb3 = useWeb3ReactActivate(true);\n\n  useEffect(() => {\n    Promise.all([\n      injectedNetworkConnector.isAuthorized().then((isAuthorized) => {\n        if (isAuthorized) {\n          return activateInjectedWeb3();\n        }\n      }),\n      activateBackupWeb3(),\n    ]).catch(console.error);\n  }, [activateInjectedWeb3, activateBackupWeb3]);\n};\n\nexport const useContract = (\n  address: string,\n  contract_factory_class: any,\n): object | undefined => {\n  const { library, account } = useActiveWeb3React();\n\n  return useMemo((): object | undefined => {\n    if (address && library) {\n      return contract_factory_class.connect(\n        address,\n        typeof account === 'string' ? library.getSigner(account) : library,\n      );\n    }\n  }, [address, contract_factory_class, library, account]);\n};\n","import * as signUtil from 'eth-sig-util';\n\nexport const easyCheckMessageHash = (\n  messageHash: string | undefined,\n): boolean => {\n  if (\n    typeof messageHash === 'string' &&\n    messageHash.startsWith('0x') &&\n    messageHash.length === 66\n  ) {\n    try {\n      return Buffer.from(messageHash.slice(2), 'hex').length === 32;\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  return false;\n};\n\nexport const easyCheckSignature = (signature: string | undefined): boolean => {\n  if (\n    typeof signature == 'string' &&\n    signature.startsWith('0x') &&\n    signature.length === 132\n  ) {\n    try {\n      return Buffer.from(signature.slice(2), 'hex').length === 65;\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  return false;\n};\n\nexport const easyCheckLegacyEIP712Struct = (value: string | undefined) => {\n  if (\n    typeof value === 'string' &&\n    value.startsWith('[') &&\n    value.endsWith(']')\n  ) {\n    try {\n      const struct = JSON.parse(value);\n      if (Array.isArray(struct)) {\n        return struct.every(\n          (i: any) =>\n            typeof i === 'object' &&\n            typeof i.type === 'string' &&\n            typeof i.name == 'string' &&\n            i.value !== undefined,\n        );\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  return false;\n};\n\nexport const easyCheckStandardEIP712Struct = (value: string | undefined) => {\n  if (\n    typeof value === 'string' &&\n    value.startsWith('{') &&\n    value.endsWith('}')\n  ) {\n    try {\n      const struct = JSON.parse(value);\n      if (typeof struct === 'object') {\n        return signUtil.TYPED_MESSAGE_SCHEMA.required.every((i) => !!struct[i]);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  return false;\n};\n\nexport const stringifyProviderError = (error: any): string => {\n  const errorType = typeof error;\n  if (errorType === 'undefined') {\n    return 'Something wrong';\n  } else if (errorType === 'string') {\n    return error;\n  } else if (errorType === 'object' && typeof error.message === 'string') {\n    return error.message;\n  } else if (errorType === 'object' && error.data) {\n    return JSON.stringify(error.data);\n  } else {\n    return JSON.stringify(error);\n  }\n};\n","import { Web3Provider } from '@ethersproject/providers';\nimport { InjectedConnector } from '@web3-react/injected-connector';\nimport { NetworkConnector } from '@web3-react/network-connector';\n\nconst { ethereum } = window;\nethereum && (ethereum.autoRefreshOnNetworkChange = false);\n\nconst INFURA_KEY = process.env.REACT_APP_INFURA_KEY;\nif (typeof INFURA_KEY === 'undefined') {\n  throw new Error(\n    `REACT_APP_INFURA_KEY must be a defined environment variable`,\n  );\n}\n\nexport const backupNetworkConnector = new NetworkConnector({\n  urls: {\n    1: `https://mainnet.infura.io/v3/${INFURA_KEY}`,\n  },\n  defaultChainId: 1,\n});\nexport const BACKUP_NETWORK_ID = 'BACKUP';\n\nexport const getLibrary = (provider: any): Web3Provider => {\n  const library = new Web3Provider(\n    provider,\n    typeof provider.chainId === 'number'\n      ? provider.chainId\n      : typeof provider.chainId === 'string'\n      ? parseInt(provider.chainId)\n      : 'any',\n  );\n  library.pollingInterval = 15_000;\n\n  return library;\n};\n\nexport const injectedNetworkConnector = new InjectedConnector({});\n","import { TextField } from '@material-ui/core';\nimport { TextFieldProps } from '@material-ui/core/TextField/TextField';\n\nconst LabelText = ({\n  id,\n  value,\n  label,\n  placeholder,\n  ...props\n}: TextFieldProps) => (\n  <TextField\n    id={id}\n    variant=\"outlined\"\n    value={value}\n    label={label}\n    placeholder={placeholder}\n    {...props}\n  />\n);\n\nexport default LabelText;\n"],"sourceRoot":""}