{"version":3,"sources":["components/basic.tsx","components/Editor.tsx","components/LabelText.tsx","pages/Message/view.tsx","utils/index.ts","pages/Message/methods.ts","pages/Message/index.tsx","components/PagesDrawer.tsx","App.tsx","index.tsx","pages/Transaction/view.tsx","pages/Transaction/index.tsx","pages/Message/helper.ts","connector.tsx","components/PagePaper.tsx"],"names":["Flex","styled","display","Column","flexDirection","Row","SizedBox","justifyItems","alignItems","width","height","style","Editor","props","theme","useTheme","isUp800","useMediaQuery","breakpoints","up","fontSize","showGutter","wrapEnabled","showPrintMargin","highlightActiveLine","enableBasicAutocompletion","enableLiveAutocompletion","tabSize","debounceChangePeriod","LabelText","id","value","label","placeholder","TextField","variant","useStyle","makeStyles","container","padding","options","justifyContent","margin","spacing","caseGroup","flexWrap","marginBottom","bottomButtonGroup","MessageEditorView","methodOptions","selectedMethod","onMethodSelected","cases","checkIsTargetMessage","hashMessage","isWalletEnabled","connectedAccount","connectWallet","onSign","preferJsonStringMessage","classes","useState","messageValue","setMessageValue","messageHashValue","setMessageHashValue","signatureValue","setSignatureValue","disabledSignBtn","setDisabledSignBtn","recoveredAddress","setRecoveredAddress","setMessageValueWrapper","useCallback","message","formattedMessage","format","toLowerCase","JSON","stringify","parse","undefined","prettify","onSignButtonClick","a","signature","useEffect","messageHash","easyCheckMessageHash","console","error","hashIt","catch","PagePaper","className","Typography","component","align","Select","onChange","event","target","map","method","MenuItem","tag","index","Chip","size","name","onClick","onTagClick","mode","Button","color","disabled","slice","DEMO_TYPED_DATA_01","DEMO_TYPED_DATA_02","DEMO_TYPED_DATA_03","Methods","eth_sign","Promise","resolve","signMessage","account","library","getSigner","provider","send","then","response","result","personal_sign","length","ethUtil","toString","typed_data_sign","easyCheckLegacyEIP712Struct","signUtil","isMetaMask","typed_data_sign_v1","typed_data_sign_v3","easyCheckStandardEIP712Struct","sign","typed_data_sign_v4","recoverAddress","hashBuffer","sigBuffer","assert","r","s","v","public_key","MessageEditor","web3","useWeb3React","active","activate","setSelectedMethod","snackBarState","setSnackBarState","easyCheckSignature","isPositive","stringifyProviderError","isOpening","injected","Object","keys","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","prevState","severity","drawer","drawerPaper","marginTop","drawerHeader","mixins","toolbar","menuItem","PagesDrawer","menus","onDrawerItemClick","isDown800","down","drawerProps","useMemo","anchor","paper","Drawer","text","ListItem","button","divider","ListItemText","primary","Divider","useStyles","appBar","position","main","marginLeft","marginRight","DRAWER_MENU","Pagers","Message","require","default","Transaction","MyAppBar","onDrawerBtnClick","AppBar","Toolbar","IconButton","edge","noWrap","App","isDrawerOpening","setIsDrawerOpening","Page","setPage","CssBaseline","ReactDOM","render","StrictMode","document","getElementById","TransactionView","startsWith","Buffer","from","e","endsWith","struct","Array","isArray","every","i","type","required","errorType","data","Web3ProviderNetwork","createWeb3ReactRoot","ethereum","window","autoRefreshOnNetworkChange","getLibrary","Web3Provider","chainId","parseInt","InjectedConnector","Web3Root","children"],"mappings":"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","file":"static/js/main.1ac921ee.chunk.js","sourcesContent":["import { styled } from '@material-ui/core';\n\nconst Flex = styled('div')({\n  display: 'flex',\n});\n\nconst Column = styled(Flex)({\n  flexDirection: 'column',\n});\n\nconst Row = styled(Flex)({\n  flexDirection: 'row',\n});\n\nconst Center = styled(Flex)({\n  justifyItems: 'center',\n  alignItems: 'center',\n});\n\nconst SizedBox = ({ width, height }: { width?: any; height?: any }) => (\n  <div style={{ width, height }} />\n);\n\nexport { Flex, Column, Row, Center, SizedBox };\n","import AceEditor from 'react-ace';\nimport { IAceEditorProps } from 'react-ace/lib/ace';\nimport 'ace-builds/src-noconflict/mode-json';\nimport 'ace-builds/src-noconflict/theme-tomorrow_night_eighties';\nimport { useMediaQuery, useTheme } from '@material-ui/core';\n\nconst Editor = (props: IAceEditorProps) => {\n  const theme = useTheme();\n  const isUp800 = useMediaQuery(theme.breakpoints.up(800));\n\n  return (\n    <AceEditor\n      width={'100%'}\n      fontSize={14}\n      showGutter={isUp800}\n      wrapEnabled\n      showPrintMargin\n      highlightActiveLine\n      enableBasicAutocompletion\n      enableLiveAutocompletion\n      tabSize={2}\n      debounceChangePeriod={600}\n      {...props}\n    />\n  );\n};\n\nexport default Editor;\n","import { TextField } from '@material-ui/core';\nimport { TextFieldProps } from '@material-ui/core/TextField/TextField';\n\nconst LabelText = ({\n  id,\n  value,\n  label,\n  placeholder,\n  ...props\n}: TextFieldProps) => (\n  <TextField\n    id={id}\n    variant=\"outlined\"\n    value={value}\n    label={label}\n    placeholder={placeholder}\n    {...props}\n  />\n);\n\nexport default LabelText;\n","import {\n  Button,\n  Chip,\n  makeStyles,\n  MenuItem,\n  Select,\n  Typography,\n} from '@material-ui/core';\nimport { Column, Row, SizedBox } from '../../components/basic';\nimport { useCallback, useEffect, useState } from 'react';\nimport { easyCheckMessageHash } from './helper';\nimport Editor from '../../components/Editor';\nimport LabelText from '../../components/LabelText';\nimport PagePaper from '../../components/PagePaper';\nimport { prettify } from '../../utils';\n\nexport interface MessageViewProps {\n  methodOptions: Array<string>;\n  selectedMethod: string;\n  onMethodSelected: (method: string) => void;\n  cases: Array<{ name: string; value: string }>;\n  checkIsTargetMessage: (message: string) => boolean;\n  hashMessage: (message: string) => Promise<string>;\n  isWalletEnabled: boolean;\n  connectedAccount?: string | null;\n  connectWallet: () => void;\n  onSign: (message: string) => Promise<[string, string]>;\n  preferJsonStringMessage?: boolean;\n}\n\nconst useStyle = makeStyles((theme) => ({\n  container: {\n    padding: 0,\n  },\n  options: {\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    margin: theme.spacing(3, 0, 1),\n  },\n  caseGroup: {\n    flexWrap: 'wrap',\n    padding: 0,\n    marginBottom: theme.spacing(1),\n    '& > *': {\n      margin: theme.spacing(0.5),\n    },\n  },\n  bottomButtonGroup: {\n    justifyContent: 'flex-end',\n    padding: 0,\n  },\n}));\n\nexport const MessageEditorView = ({\n  methodOptions,\n  selectedMethod,\n  onMethodSelected,\n  cases,\n  checkIsTargetMessage,\n  hashMessage,\n  isWalletEnabled,\n  connectedAccount,\n  connectWallet,\n  onSign,\n  preferJsonStringMessage,\n}: MessageViewProps) => {\n  const classes = useStyle();\n  const [messageValue, setMessageValue] = useState<string>('');\n  const [messageHashValue, setMessageHashValue] = useState<string>('');\n  const [signatureValue, setSignatureValue] = useState<string>('');\n  const [disabledSignBtn, setDisabledSignBtn] = useState<boolean>(true);\n  const [recoveredAddress, setRecoveredAddress] = useState<string>('');\n\n  const setMessageValueWrapper = useCallback(\n    (message: string) => {\n      const formattedMessage = prettify(\n        message,\n        preferJsonStringMessage ? 'json' : 'text',\n      );\n\n      setMessageValue(formattedMessage);\n    },\n    [preferJsonStringMessage],\n  );\n\n  const onSignButtonClick = useCallback(async () => {\n    const [signature, recoveredAddress] = await onSign(messageValue);\n    setSignatureValue(signature);\n    setRecoveredAddress(recoveredAddress);\n  }, [messageValue, onSign]);\n\n  const onTagClick = (index: number) => {\n    const message = cases[index].value;\n    setMessageValueWrapper(message);\n  };\n\n  useEffect(() => {\n    if (cases[0].value) {\n      setMessageValueWrapper(cases[0].value);\n    }\n  }, [cases, setMessageValueWrapper]);\n\n  useEffect(() => {\n    const hashIt = async () => {\n      try {\n        let message = messageValue;\n        if (message && checkIsTargetMessage(message)) {\n          const messageHash: string = await hashMessage(message);\n\n          if (easyCheckMessageHash(messageHash)) {\n            setMessageHashValue(messageHash);\n            setDisabledSignBtn(false);\n          } else {\n            setDisabledSignBtn(true);\n          }\n        }\n      } catch (e) {\n        setDisabledSignBtn(true);\n        console.error('Error in hashing message', e);\n      }\n\n      setSignatureValue('');\n      setRecoveredAddress('');\n    };\n\n    hashIt().catch(console.error);\n  }, [checkIsTargetMessage, hashMessage, messageValue]);\n\n  return (\n    <PagePaper>\n      <Column className={classes.container}>\n        <Typography component={'h1'} variant={'h4'} align={'center'}>\n          Message\n        </Typography>\n\n        <Row className={classes.options}>\n          <Select\n            variant={'outlined'}\n            value={selectedMethod}\n            onChange={(event) => onMethodSelected(event.target.value as string)}\n          >\n            {methodOptions.map((method) => (\n              <MenuItem key={method} value={method}>\n                {method}\n              </MenuItem>\n            ))}\n          </Select>\n        </Row>\n\n        <Row className={classes.caseGroup}>\n          {cases.map((tag, index) => (\n            <Chip\n              size={'small'}\n              key={tag.name}\n              label={tag.name}\n              onClick={() => onTagClick(index)}\n            />\n          ))}\n        </Row>\n        <Editor\n          name={'message_editor'}\n          placeholder={'Input Message Here'}\n          mode={'json'}\n          theme={'tomorrow_night_eighties'}\n          value={messageValue}\n          onChange={setMessageValueWrapper}\n        />\n        <SizedBox height={10} />\n        <LabelText\n          id={'message_hash'}\n          value={messageHashValue}\n          label={'Message Hash'}\n        />\n        <SizedBox height={10} />\n        <LabelText\n          id={'signature'}\n          value={signatureValue}\n          label={'Signature'}\n        />\n        <SizedBox height={10} />\n        <LabelText\n          id={'recovered_address'}\n          value={recoveredAddress}\n          label={'Recovered Address'}\n          placeholder={'Please make sure the message and signature are correct'}\n        />\n        <SizedBox height={10} />\n        <Row className={classes.bottomButtonGroup}>\n          <Button\n            variant={'contained'}\n            color={'primary'}\n            disabled={isWalletEnabled}\n            onClick={connectWallet}\n          >\n            {isWalletEnabled && connectedAccount\n              ? `${connectedAccount.slice(0, 4)}...${connectedAccount.slice(\n                  -4,\n                )}`\n              : 'Connect'}\n          </Button>\n          <SizedBox width={16} />\n          <Button\n            variant={'contained'}\n            color={'secondary'}\n            disabled={disabledSignBtn || !isWalletEnabled}\n            onClick={onSignButtonClick}\n          >\n            SIGN\n          </Button>\n        </Row>\n      </Column>\n    </PagePaper>\n  );\n};\n","export const prettify = (value: string, format: string): string => {\n  format = format.toLowerCase();\n\n  try {\n    if (format === 'json') {\n      return JSON.stringify(JSON.parse(value), undefined, 2);\n    }\n  } catch {\n    // ignored\n  }\n\n  return value;\n};\n","import {\n  easyCheckLegacyEIP712Struct,\n  easyCheckMessageHash,\n  easyCheckStandardEIP712Struct,\n} from './helper';\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types';\nimport * as ethUtil from 'ethereumjs-util';\nimport * as signUtil from 'eth-sig-util';\n\nexport interface MessageSignMethod {\n  name: string;\n  cases: Array<{ name: string; value: string }>;\n  preferJsonStringMessage?: boolean;\n  checkIsTargetMessage: (message: string) => boolean;\n  hashMessage: (message: string) => Promise<string>;\n  signMessage: (\n    web3: Web3ReactContextInterface,\n    message: string,\n  ) => Promise<string>;\n}\n\nconst DEMO_TYPED_DATA_01 =\n  '{\"types\":{\"EIP712Domain\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"chainId\",\"type\":\"uint256\"},{\"name\":\"verifyingContract\",\"type\":\"address\"}],\"Person\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"wallet\",\"type\":\"address\"}],\"Mail\":[{\"name\":\"from\",\"type\":\"Person\"},{\"name\":\"to\",\"type\":\"Person\"},{\"name\":\"contents\",\"type\":\"string\"}]},\"primaryType\":\"Mail\",\"domain\":{\"name\":\"Ether Mail\",\"version\":\"1\",\"chainId\":1,\"verifyingContract\":\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\"},\"message\":{\"from\":{\"name\":\"Cow\",\"wallet\":\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\"},\"to\":{\"name\":\"Bob\",\"wallet\":\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\"},\"contents\":\"Hello, Bob!\"}}';\nconst DEMO_TYPED_DATA_02 =\n  '{\"types\":{\"EIP712Domain\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"chainId\",\"type\":\"uint256\"},{\"name\":\"verifyingContract\",\"type\":\"address\"}],\"Person\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"wallet\",\"type\":\"address\"}],\"Mail\":[{\"name\":\"from\",\"type\":\"Person\"},{\"name\":\"to\",\"type\":\"Person\"},{\"name\":\"contents\",\"type\":\"string\"},{\"name\":\"payload\",\"type\":\"bytes\"}]},\"primaryType\":\"Mail\",\"domain\":{\"name\":\"Ether Mail\",\"version\":\"1\",\"chainId\":1,\"verifyingContract\":\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\"},\"message\":{\"from\":{\"name\":\"Cow\",\"wallet\":\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\"},\"to\":{\"name\":\"Bob\",\"wallet\":\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\"},\"contents\":\"Hello, Bob!\",\"payload\":\"0x25192142931f380985072cdd991e37f65cf8253ba7a0e675b54163a1d133b8ca\"}}';\nconst DEMO_TYPED_DATA_03 =\n  '{\"types\":{\"EIP712Domain\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"chainId\",\"type\":\"uint256\"},{\"name\":\"verifyingContract\",\"type\":\"address\"}],\"Person\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"mother\",\"type\":\"Person\"},{\"name\":\"father\",\"type\":\"Person\"}]},\"domain\":{\"name\":\"Family Tree\",\"version\":\"1\",\"chainId\":1,\"verifyingContract\":\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\"},\"primaryType\":\"Person\",\"message\":{\"name\":\"Jon\",\"mother\":{\"name\":\"Lyanna\",\"father\":{\"name\":\"Rickard\"}},\"father\":{\"name\":\"Rhaegar\",\"father\":{\"name\":\"Aeris II\"}}}}';\n\nexport const Methods: { [key: string]: MessageSignMethod } = {\n  eth_sign: {\n    name: 'eth_sign',\n    cases: [\n      {\n        name: 'Demo 1',\n        value:\n          '0x0000000000000000000000000000000000000000000000000000000000000000',\n      },\n      {\n        name: 'Demo 2',\n        value:\n          '0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF',\n      },\n    ],\n    checkIsTargetMessage: easyCheckMessageHash,\n    hashMessage: async (message: string): Promise<string> =>\n      Promise.resolve(message),\n    signMessage: (\n      { account, library }: Web3ReactContextInterface,\n      message: string,\n    ): Promise<string> =>\n      library\n        .getSigner(account)\n        .provider.provider.send('eth_sign', [account, message])\n        .then((response: any) => response?.result || response),\n  },\n  personal_sign: {\n    name: 'personal_sign',\n    cases: [\n      { name: 'Hello OneKey', value: 'Hello OneKey' },\n      { name: 'To Da Moon', value: 'To Da Moon' },\n    ],\n    checkIsTargetMessage: (message: string | undefined): boolean =>\n      typeof message === 'string' && message.length > 0,\n    hashMessage: async (message: string): Promise<string> =>\n      ethUtil.addHexPrefix(\n        ethUtil.hashPersonalMessage(ethUtil.toBuffer(message)).toString('hex'),\n      ),\n    signMessage: (\n      { account, library }: Web3ReactContextInterface,\n      message: string,\n    ): Promise<string> =>\n      library\n        .getSigner(account)\n        .provider.send('personal_sign', [account, message])\n        .then((response: any) => response?.result || response),\n  },\n  typed_data_sign: {\n    name: 'typed_data_sign',\n    cases: [\n      {\n        name: 'Single Value',\n        value: '[{\"type\":\"string\",\"name\":\"message\",\"value\":\"Hi, Alice!\"}]',\n      },\n      {\n        name: 'Multiple values',\n        value:\n          '[{\"type\":\"string\",\"name\":\"message\",\"value\":\"Hi, Alice!\"},{\"type\":\"uint8\",\"name\":\"value\",\"value\":10}]',\n      },\n      {\n        name: 'With bytes',\n        value: '[{\"type\":\"bytes\",\"name\":\"message\",\"value\":\"0xdeadbeaf\"}]',\n      },\n    ],\n    preferJsonStringMessage: true,\n    checkIsTargetMessage: easyCheckLegacyEIP712Struct,\n    hashMessage: async (message: string): Promise<string> =>\n      ethUtil.addHexPrefix(signUtil.typedSignatureHash(JSON.parse(message))),\n    signMessage: (\n      { account, library }: Web3ReactContextInterface,\n      message: string,\n    ): Promise<string> =>\n      library.provider\n        .send(\n          'eth_signTypedData',\n          library.provider.isMetaMask\n            ? [JSON.parse(message), account]\n            : [account, message],\n        )\n        .then((response: any) => response?.result || response),\n  },\n  typed_data_sign_v1: {\n    name: 'typed_data_sign_v1',\n    cases: [\n      {\n        name: 'Single Value',\n        value: '[{\"type\":\"string\",\"name\":\"message\",\"value\":\"Hi, Alice!\"}]',\n      },\n      {\n        name: 'Multiple values',\n        value:\n          '[{\"type\":\"string\",\"name\":\"message\",\"value\":\"Hi, Alice!\"},{\"type\":\"uint8\",\"name\":\"value\",\"value\":10}]',\n      },\n      {\n        name: 'With bytes',\n        value: '[{\"type\":\"bytes\",\"name\":\"message\",\"value\":\"0xdeadbeaf\"}]',\n      },\n    ],\n    preferJsonStringMessage: true,\n    checkIsTargetMessage: easyCheckLegacyEIP712Struct,\n    hashMessage: async (message: string): Promise<string> =>\n      ethUtil.addHexPrefix(signUtil.typedSignatureHash(JSON.parse(message))),\n    signMessage: (\n      { account, library }: Web3ReactContextInterface,\n      message: string,\n    ): Promise<string> =>\n      library.provider\n        .send('eth_signTypedData_v1', [account, message])\n        .then((response: any) => response?.result || response),\n  },\n  typed_data_sign_v3: {\n    name: 'typed_data_sign_v3',\n    cases: [\n      {\n        name: 'Demo',\n        value: DEMO_TYPED_DATA_01,\n      },\n      {\n        name: 'With bytes',\n        value: DEMO_TYPED_DATA_02,\n      },\n      {\n        name: 'With recursive types',\n        value: DEMO_TYPED_DATA_03,\n      },\n    ],\n    preferJsonStringMessage: true,\n    checkIsTargetMessage: easyCheckStandardEIP712Struct,\n    hashMessage: async (message: string): Promise<string> =>\n      ethUtil.addHexPrefix(\n        signUtil.TypedDataUtils.sign(JSON.parse(message), false).toString(\n          'hex',\n        ),\n      ),\n    signMessage: (\n      { account, library }: Web3ReactContextInterface,\n      message: string,\n    ): Promise<string> =>\n      library.provider\n        .send('eth_signTypedData_v3', [account, message])\n        .then((response: any) => response?.result || response),\n  },\n  typed_data_sign_v4: {\n    name: 'typed_data_sign_v4',\n    cases: [\n      {\n        name: 'Demo',\n        value: DEMO_TYPED_DATA_01,\n      },\n      {\n        name: 'With bytes',\n        value: DEMO_TYPED_DATA_02,\n      },\n      {\n        name: 'With recursive types',\n        value: DEMO_TYPED_DATA_03,\n      },\n      {\n        name: 'With array',\n        value:\n          '{\"types\":{\"EIP712Domain\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"chainId\",\"type\":\"uint256\"},{\"name\":\"verifyingContract\",\"type\":\"address\"}],\"Person\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"wallets\",\"type\":\"address[]\"}],\"Mail\":[{\"name\":\"from\",\"type\":\"Person\"},{\"name\":\"to\",\"type\":\"Person[]\"},{\"name\":\"contents\",\"type\":\"string\"}],\"Group\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"members\",\"type\":\"Person[]\"}]},\"domain\":{\"name\":\"Ether Mail\",\"version\":\"1\",\"chainId\":1,\"verifyingContract\":\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\"},\"primaryType\":\"Mail\",\"message\":{\"from\":{\"name\":\"Cow\",\"wallets\":[\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\"0xDeaDbeefdEAdbeefdEadbEEFdeadbeEFdEaDbeeF\"]},\"to\":[{\"name\":\"Bob\",\"wallets\":[\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\"0xB0BdaBea57B0BDABeA57b0bdABEA57b0BDabEa57\",\"0xB0B0b0b0b0b0B000000000000000000000000000\"]}],\"contents\":\"Hello, Bob!\"}}',\n      },\n      {\n        name: 'With 2D array',\n        value:\n          '{\"types\":{\"EIP712Domain\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"chainId\",\"type\":\"uint256\"},{\"name\":\"verifyingContract\",\"type\":\"address\"}],\"Person\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"wallets\",\"type\":\"address[]\"},{\"name\":\"logo_matrix\",\"type\":\"int[][]\"}],\"Mail\":[{\"name\":\"from\",\"type\":\"Person\"},{\"name\":\"to\",\"type\":\"Person[]\"},{\"name\":\"contents\",\"type\":\"string\"}],\"Group\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"members\",\"type\":\"Person[]\"}]},\"domain\":{\"name\":\"Ether Mail\",\"version\":\"1\",\"chainId\":1,\"verifyingContract\":\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\"},\"primaryType\":\"Mail\",\"message\":{\"from\":{\"name\":\"Cow\",\"wallets\":[\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\"0xDeaDbeefdEAdbeefdEadbEEFdeadbeEFdEaDbeeF\"],\"logo_matrix\":[[0,255],[-255,-1]]},\"to\":[{\"name\":\"Bob\",\"wallets\":[\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\"0xB0BdaBea57B0BDABeA57b0bdABEA57b0BDabEa57\",\"0xB0B0b0b0b0b0B000000000000000000000000000\"],\"logo_matrix\":[[0,0],[0,0]]}],\"contents\":\"Hello, Bob!\"}}',\n      },\n    ],\n    preferJsonStringMessage: true,\n    checkIsTargetMessage: easyCheckStandardEIP712Struct,\n    hashMessage: async (message: string): Promise<string> =>\n      ethUtil.addHexPrefix(\n        signUtil.TypedDataUtils.sign(JSON.parse(message), true).toString('hex'),\n      ),\n    signMessage: (\n      { account, library }: Web3ReactContextInterface,\n      message: string,\n    ): Promise<string> =>\n      library.provider\n        .send('eth_signTypedData_v4', [account, message])\n        .then((response: any) => response?.result || response),\n  },\n};\n","import { MessageEditorView } from './view';\nimport { useCallback, useState } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { MessageSignMethod, Methods } from './methods';\nimport { injected } from '../../connector';\nimport { Snackbar } from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { easyCheckSignature, stringifyProviderError } from './helper';\nimport * as ethUtil from 'ethereumjs-util';\n\nconst recoverAddress = (messageHash: string, signature: string): string => {\n  const hashBuffer = ethUtil.toBuffer(messageHash);\n  const sigBuffer = ethUtil.toBuffer(signature);\n\n  console.assert(\n    hashBuffer.length === 32,\n    `Invalid message hash: ${messageHash}`,\n  );\n  console.assert(sigBuffer.length === 65, `Invalid signature: ${signature}`);\n\n  const [r, s, v] = [\n    sigBuffer.slice(0, 32),\n    sigBuffer.slice(32, 64),\n    sigBuffer[64],\n  ];\n  const public_key = ethUtil.ecrecover(hashBuffer, v, r, s);\n  return ethUtil.addHexPrefix(ethUtil.pubToAddress(public_key).toString('hex'));\n};\n\nconst MessageEditor = () => {\n  const web3 = useWeb3React();\n  const { active, activate, account } = web3;\n  const [selectedMethod, setSelectedMethod] = useState<string>('eth_sign');\n  const [snackBarState, setSnackBarState] =\n    useState<{ isOpening: boolean; isPositive?: boolean; message?: string }>();\n\n  const method: MessageSignMethod = Methods[selectedMethod || 'eth_sign'];\n  const onSign = useCallback(\n    async (message: string): Promise<[string, string]> => {\n      console.assert(!!account);\n      let snackBarState: { isPositive: boolean; message: string } | undefined =\n        undefined;\n      let signature = '';\n      let recoveredAddress = '';\n\n      try {\n        signature = await method.signMessage(web3, message);\n        if (signature && easyCheckSignature(signature)) {\n          recoveredAddress = recoverAddress(\n            await method.hashMessage(message),\n            signature,\n          );\n\n          if (recoveredAddress.toLowerCase() === account?.toLowerCase()) {\n            snackBarState = {\n              isPositive: true,\n              message: 'Signature Verified',\n            };\n          } else {\n            snackBarState = {\n              isPositive: false,\n              message: 'Sorry! The Message Signature Verification Failed',\n            };\n          }\n        } else {\n          snackBarState = {\n            isPositive: false,\n            message: 'Invalid signature',\n          };\n        }\n      } catch (e) {\n        console.error('Error in signing message', e);\n\n        snackBarState = {\n          isPositive: false,\n          message: stringifyProviderError(e),\n        };\n      }\n\n      if (snackBarState) {\n        setSnackBarState(() => ({ isOpening: true, ...snackBarState }));\n      }\n\n      return [signature, recoveredAddress];\n    },\n    [web3, account, method],\n  );\n\n  return (\n    <>\n      <MessageEditorView\n        isWalletEnabled={active}\n        connectedAccount={account}\n        connectWallet={() => activate(injected)}\n        methodOptions={Object.keys(Methods)}\n        selectedMethod={selectedMethod}\n        onMethodSelected={setSelectedMethod}\n        cases={method.cases}\n        preferJsonStringMessage={method.preferJsonStringMessage}\n        hashMessage={method.hashMessage}\n        checkIsTargetMessage={method.checkIsTargetMessage}\n        onSign={onSign}\n      />\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={snackBarState?.isOpening || false}\n        autoHideDuration={3000}\n        onClose={() =>\n          setSnackBarState((prevState) => ({ ...prevState, isOpening: false }))\n        }\n      >\n        <MuiAlert severity={snackBarState?.isPositive ? 'success' : 'error'}>\n          {snackBarState?.message}\n        </MuiAlert>\n      </Snackbar>\n    </>\n  );\n};\n\nexport default MessageEditor;\n","import {\n  Divider,\n  Drawer,\n  ListItem,\n  ListItemText,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core';\nimport React, { useMemo } from 'react';\nimport { SizedBox } from './basic';\nimport { DrawerProps } from '@material-ui/core/Drawer/Drawer';\n\nconst DRAWER_WIDTH = 240;\nconst useStyle = makeStyles((theme) => ({\n  drawer: {},\n  drawerPaper: {\n    marginTop: theme.spacing(8),\n    width: DRAWER_WIDTH,\n    height: 300,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  menuItem: {\n    height: theme.spacing(8),\n  },\n}));\n\nconst PagesDrawer = ({\n  menus,\n  open,\n  onDrawerItemClick,\n  onClose,\n}: {\n  menus: Array<string>;\n  open: boolean;\n  onDrawerItemClick: (text: string, index: number) => void;\n  onClose: VoidFunction;\n}) => {\n  const classes = useStyle();\n  const theme = useTheme();\n  const isDown800 = useMediaQuery(theme.breakpoints.down(800));\n\n  const drawerProps = useMemo<DrawerProps>(() => {\n    if (isDown800) {\n      return {\n        anchor: 'bottom',\n      };\n    } else {\n      return {\n        anchor: 'left',\n        className: classes.drawer,\n        classes: { paper: classes.drawerPaper },\n      };\n    }\n  }, [classes, isDown800]);\n\n  return (\n    <Drawer open={open} onClose={onClose} {...drawerProps}>\n      {menus.map((text, index) => (\n        <ListItem\n          className={classes.menuItem}\n          button\n          key={text}\n          onClick={() => onDrawerItemClick(text, index)}\n          divider={!isDown800}\n        >\n          <ListItemText primary={text} />\n        </ListItem>\n      ))}\n\n      {isDown800 && <Divider />}\n      <SizedBox height={theme.spacing(6)} />\n    </Drawer>\n  );\n};\n\nexport default PagesDrawer;\n","import {\n  AppBar,\n  CssBaseline,\n  IconButton,\n  makeStyles,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\nimport React, { useState } from 'react';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport PagesDrawer from './components/PagesDrawer';\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    color: 'default',\n    position: 'relative',\n  },\n  main: {\n    width: 'auto',\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst DRAWER_MENU = ['Message', 'Transaction'];\nconst DEFAULT_PAGE = 'Message';\n\nconst Pagers: { [key: string]: React.FC } = {\n  Message: () => require('./pages/Message/index').default,\n  Transaction: () => require('./pages/Transaction/index').default,\n};\n\nconst MyAppBar = ({ onDrawerBtnClick }: { onDrawerBtnClick: VoidFunction }) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar className={classes.appBar}>\n      <Toolbar>\n        <IconButton\n          color={'inherit'}\n          aria-label={'open drawer'}\n          onClick={onDrawerBtnClick}\n          edge={'start'}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography variant={'h6'} color={'inherit'} noWrap>\n          Ethereum Utils\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nconst App = () => {\n  const classes = useStyles();\n  const [isDrawerOpening, setIsDrawerOpening] = useState<boolean>(false);\n  const [Page, setPage] = useState<React.FC>(Pagers[DEFAULT_PAGE]);\n\n  return (\n    <>\n      <CssBaseline />\n      <MyAppBar\n        onDrawerBtnClick={() => setIsDrawerOpening((prevState) => !prevState)}\n      />\n      <PagesDrawer\n        menus={DRAWER_MENU}\n        open={isDrawerOpening}\n        onClose={() => setIsDrawerOpening(() => false)}\n        onDrawerItemClick={(text) => {\n          setPage((Pagers as any)[text]);\n          setIsDrawerOpening(false);\n        }}\n      />\n      <main className={classes.main}>\n        <Page />\n      </main>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Web3Root from './connector';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Web3Root>\n      <App />\n    </Web3Root>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import { Column, SizedBox } from '../../components/basic';\nimport { makeStyles, Typography } from '@material-ui/core';\nimport PagePaper from '../../components/PagePaper';\n\nconst useStyle = makeStyles((theme) => ({\n  container: {\n    height: 500,\n  },\n}));\n\nconst TransactionView = () => {\n  const classes = useStyle();\n\n  return (\n    <PagePaper>\n      <Column className={classes.container}>\n        <Typography component={'h1'} variant={'h4'} align={'center'}>\n          Transaction\n        </Typography>\n        <SizedBox height={32} />\n\n        <Typography component={'h5'} align={'center'} color={'textSecondary'}>\n          Developing...\n        </Typography>\n      </Column>\n    </PagePaper>\n  );\n};\n\nexport default TransactionView;\n","import TransactionView from './view';\n\nconst Transaction = () => <TransactionView />;\n\nexport default Transaction;\n","import * as signUtil from 'eth-sig-util';\n\nexport const easyCheckMessageHash = (\n  messageHash: string | undefined,\n): boolean => {\n  if (\n    typeof messageHash === 'string' &&\n    messageHash.startsWith('0x') &&\n    messageHash.length === 66\n  ) {\n    try {\n      return Buffer.from(messageHash.slice(2), 'hex').length === 32;\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  return false;\n};\n\nexport const easyCheckSignature = (signature: string | undefined): boolean => {\n  if (\n    typeof signature == 'string' &&\n    signature.startsWith('0x') &&\n    signature.length === 132\n  ) {\n    try {\n      return Buffer.from(signature.slice(2), 'hex').length === 65;\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  return false;\n};\n\nexport const easyCheckLegacyEIP712Struct = (value: string | undefined) => {\n  if (\n    typeof value === 'string' &&\n    value.startsWith('[') &&\n    value.endsWith(']')\n  ) {\n    try {\n      const struct = JSON.parse(value);\n      if (Array.isArray(struct)) {\n        return struct.every(\n          (i: any) =>\n            typeof i === 'object' &&\n            typeof i.type === 'string' &&\n            typeof i.name == 'string' &&\n            i.value !== undefined,\n        );\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  return false;\n};\n\nexport const easyCheckStandardEIP712Struct = (value: string | undefined) => {\n  if (\n    typeof value === 'string' &&\n    value.startsWith('{') &&\n    value.endsWith('}')\n  ) {\n    try {\n      const struct = JSON.parse(value);\n      if (typeof struct === 'object') {\n        return signUtil.TYPED_MESSAGE_SCHEMA.required.every((i) => !!struct[i]);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  return false;\n};\n\nexport const stringifyProviderError = (error: any): string => {\n  const errorType = typeof error;\n  if (errorType === 'undefined') {\n    return 'Something wrong';\n  } else if (errorType === 'string') {\n    return error;\n  } else if (errorType === 'object' && typeof error.message === 'string') {\n    return error.message;\n  } else if (errorType === 'object' && error.data) {\n    return JSON.stringify(error.data);\n  } else {\n    return JSON.stringify(error);\n  }\n};\n","import { Web3Provider } from '@ethersproject/providers';\nimport { createWeb3ReactRoot, Web3ReactProvider } from '@web3-react/core';\nimport { InjectedConnector } from '@web3-react/injected-connector';\n\nconst Web3ProviderNetwork = createWeb3ReactRoot('NETWORK');\n\nconst { ethereum } = window as any;\nethereum && (ethereum.autoRefreshOnNetworkChange = false);\n\nconst getLibrary = (provider: any) =>\n  new Web3Provider(\n    provider,\n    typeof provider.chainId === 'number'\n      ? provider.chainId\n      : typeof provider.chainId === 'string'\n      ? parseInt(provider.chainId)\n      : 'any',\n  );\n\nconst Web3Root = ({ children }: { children: any }) => (\n  <Web3ReactProvider getLibrary={getLibrary}>\n    <Web3ProviderNetwork getLibrary={getLibrary}>\n      {children}\n    </Web3ProviderNetwork>\n  </Web3ReactProvider>\n);\n\nexport const injected = new InjectedConnector({});\nexport default Web3Root;\n","import { makeStyles, Paper } from '@material-ui/core';\nimport { PaperProps } from '@material-ui/core/Paper/Paper';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(800 + theme.spacing(2) * 2)]: {\n      width: 800,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n}));\n\nconst PagePaper = ({ children, ...props }: PaperProps) => {\n  const classes = useStyles();\n  return (\n    <Paper className={classes.paper} {...props}>\n      {children}\n    </Paper>\n  );\n};\n\nexport default PagePaper;\n"],"sourceRoot":""}