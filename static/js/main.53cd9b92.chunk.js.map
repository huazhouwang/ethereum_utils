{"version":3,"sources":["web3/connector.tsx","hooks/index.ts","web3/Web3Root.tsx","components/basic.tsx","components/Editor.tsx","components/LabelText.tsx","components/PagePaper.tsx","utils/index.ts","pages/Message/view.tsx","pages/Message/methods.ts","pages/Message/index.tsx","components/ExpandableHelperText.tsx","components/MultiActionsSelector.tsx","pages/Transaction/view.tsx","pages/Transaction/helper.ts","pages/Transaction/index.tsx","components/JazziconAvatar.tsx","pages/Discussion/view.tsx","types/contracts/factories/OpenBoard__factory.ts","types/contracts/factories/Ownable__factory.ts","pages/Discussion/helper.ts","pages/Discussion/index.tsx","components/PagesDrawer.tsx","components/PageWrapper.tsx","index.tsx","pages/Message/helper.ts"],"names":["ethereum","window","autoRefreshOnNetworkChange","INFURA_KEY","process","backupNetworkConnector","NetworkConnector","urls","defaultChainId","BACKUP_NETWORK_ID","getLibrary","provider","library","Web3Provider","chainId","parseInt","pollingInterval","injectedNetworkConnector","InjectedConnector","useInjectedWeb3React","useWeb3React","useBackupWeb3React","useActiveWeb3React","injectedProvider","backupProvider","active","useWeb3ReactActivate","backup","networkKey","undefined","activate","useCallback","a","connector","BackupWeb3ReactProvider","createWeb3ReactRoot","EagerConnectWrapper","activateInjectedWeb3","activateBackupWeb3","useEffect","Promise","all","isAuthorized","then","catch","console","error","useEagerConnect","Web3Root","children","Flex","styled","display","Column","flexDirection","Row","Center","justifyContent","alignItems","SizedBox","width","height","Editor","props","theme","useTheme","isUp800","useMediaQuery","breakpoints","up","fontSize","showGutter","wrapEnabled","showPrintMargin","highlightActiveLine","enableBasicAutocompletion","enableLiveAutocompletion","tabSize","debounceChangePeriod","LabelText","id","value","label","placeholder","TextField","variant","useStyles","makeStyles","paper","marginTop","spacing","marginBottom","padding","marginLeft","marginRight","PagePaper","classes","Paper","className","prettify","format","JSON","parse","stringify","Error","useStyle","container","options","margin","caseGroup","flexWrap","bottomButtonGroup","MessageEditorView","methodOptions","selectedMethod","onMethodSelected","cases","checkIsTargetMessage","hashMessage","isWalletEnabled","connectedAccount","connectWallet","onSign","preferJsonStringMessage","useState","messageValue","setMessageValue","messageHashValue","setMessageHashValue","signatureValue","setSignatureValue","disabledSignBtn","setDisabledSignBtn","recoveredAddress","setRecoveredAddress","setMessageValueWrapper","message","formattedMessage","onSignButtonClick","signature","messageHash","easyCheckMessageHash","hashIt","Typography","component","align","Select","onChange","event","target","map","method","MenuItem","tag","index","Chip","size","name","onClick","onTagClick","mode","Button","color","disabled","slice","DEMO_TYPED_DATA_01","DEMO_TYPED_DATA_02","DEMO_TYPED_DATA_03","Methods","eth_sign","resolve","signMessage","account","getSigner","send","response","result","personal_sign","length","ethUtil","toString","typed_data_sign","easyCheckLegacyEIP712Struct","signUtil","isMetaMask","typed_data_sign_v1","typed_data_sign_v3","easyCheckStandardEIP712Struct","sign","typed_data_sign_v4","recoverAddress","hashBuffer","sigBuffer","assert","r","s","v","public_key","MessageEditor","web3","setSelectedMethod","snackBarState","setSnackBarState","easyCheckSignature","toLowerCase","isPositive","stringifyProviderError","isOpening","Object","keys","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","prevState","severity","ExpandableHelperText","stripThreshold","isDialogOpen","setIsDialogOpen","isLongText","stripText","FormHelperText","Link","underline","Dialog","scroll","DialogTitle","DialogContent","DialogContentText","MultiActionsSelector","selectedIndex","actions","onActionSelect","groupProps","React","openMenu","setOpenMenu","anchorEl","setAnchorEl","ButtonGroup","action","e","currentTarget","Boolean","ArrowDropDown","Menu","keepMounted","selected","bottomContainer","nodeInput","borderColor","borderRadius","actionBtn","TransactionView","rawTransactionHelperText","rawTransactionValue","onRawTransactionInputChange","jsonTransactionHelperText","jsonTransactionValue","onJsonTransactionInputChange","txidValue","senderAddressValue","nodeSelectedIndex","onNodeSelect","isWalletInjected","injectWallet","customNodeValue","onCustomNodeValueChange","actionBtnState","multiline","maxRows","FormHelperTextProps","InputProps","normalizedTransactionKeys","chain_id","gas_limit","gas","gas_price","access_list","max_priority_fee_per_gas","max_fee_per_gas","input","asHexNumber","BigNumber","from","toHexString","asNumber","normalizedTransactionValues","hash","addHexPrefix","to","nonce","gasLimit","Math","max","gasPrice","data","type","maxPriorityFeePerGas","maxFeePerGas","allowedUnsignedTransactionKeys","allowedSignatureKeys","allowedTransactionKeys","normalizedTransaction","maybe_transaction","fromEntries","entries","filter","isMeaninglessValue","key","includes","serializeTransaction","maybeTransaction","transaction","exportSignature","unSignedTransaction","serialize","deserializeTransaction","rawTransaction","ExplorerUrlsForTx","DEFAULT_ACTION_BTN_STATE","renderActionBtnState","onTransactionSigned","signed","txid","payload","btnState","getNetwork","network","tx","replace","sendTransaction","assign","Transaction","setJsonTransactionValue","setJsonTransactionHelperText","setRawTransactionValue","setRawTransactionHelperText","txSnapshot","setTxSnapshot","setNodeSelectedIndex","setCustomNodeValue","useMemo","url","URL","protocol","isValidUrl","JsonRpcProvider","setActionBtnState","updateTransaction","source","trim","jsonTransaction","senderAddress","sender","onTransactionEditorChange","cancelled","CircularProgress","JazziconAvatar","address","ref","createRef","current","parent","count","i","removeChild","clearChildren","node","jazzicon","appendChild","maxHeight","emptyContainer","textAlign","palette","divider","records","minHeight","overflow","boxShadow","recordItemPrimary","fontWeight","recordItemSecondary","flexBox","flex","floorLabel","backgroundColor","lineHeight","inputContainer","paddingLeft","transition","transform","RecordItemView","record","date","isLastOne","floor","shortSender","ListItem","ListItemAvatar","Badge","invisible","badgeContent","ListItemText","disableTypography","primary","href","secondary","Divider","DiscussionView","isWrongNetwork","onMessageValueChange","submitMessage","List","me","Forum","fullWidth","IconButton","Send","_abi","anonymous","inputs","components","internalType","indexed","outputs","stateMutability","_bytecode","OpenBoard__factory","signer","overrides","utils","Interface","signerOrProvider","Contract","ContractFactory","bytecode","abi","useOpenBoardContract","contract_factory_class","connect","useContract","normalizeRecord","origin","toNumber","moment","timestamp","fromNow","isDonated","donatedValue","loadHistoricalRecords","contract","recordId","lastIndex","min","lastBatch","calls","push","originRecords","sort","b","Discussion","setRecords","filters","NewRecord","listener","newRecord","on","removeListener","drawer","drawerPaper","drawerHeader","mixins","toolbar","menuItem","PagesDrawer","menus","onDrawerItemClick","isDown800","down","drawerProps","anchor","Drawer","text","button","appBar","position","main","MyAppBar","onDrawerBtnClick","AppBar","Toolbar","edge","noWrap","PageWrapper","isDrawerOpening","setIsDrawerOpening","navigate","useNavigate","router","createBrowserRouter","path","element","Message","basename","ReactDOM","render","StrictMode","CssBaseline","document","getElementById","startsWith","Buffer","endsWith","struct","Array","isArray","every","required","errorType"],"mappings":"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","file":"static/js/main.53cd9b92.chunk.js","sourcesContent":["import { Web3Provider } from '@ethersproject/providers';\nimport { InjectedConnector } from '@web3-react/injected-connector';\nimport { NetworkConnector } from '@web3-react/network-connector';\n\nconst { ethereum } = window;\nethereum && (ethereum.autoRefreshOnNetworkChange = false);\n\nconst INFURA_KEY = process.env.REACT_APP_INFURA_KEY;\nif (typeof INFURA_KEY === 'undefined') {\n  console.warn(`REACT_APP_INFURA_KEY must be a defined environment variable`);\n}\n\nexport const backupNetworkConnector = new NetworkConnector({\n  urls: {\n    1: `https://mainnet.infura.io/v3/${INFURA_KEY}`,\n  },\n  defaultChainId: 1,\n});\nexport const BACKUP_NETWORK_ID = 'BACKUP';\n\nexport const getLibrary = (provider: any): Web3Provider => {\n  const library = new Web3Provider(\n    provider,\n    typeof provider.chainId === 'number'\n      ? provider.chainId\n      : typeof provider.chainId === 'string'\n      ? parseInt(provider.chainId)\n      : 'any',\n  );\n  library.pollingInterval = 15_000;\n\n  return library;\n};\n\nexport const injectedNetworkConnector = new InjectedConnector({});\n","import { useWeb3React } from '@web3-react/core';\nimport { useCallback, useEffect, useMemo } from 'react';\nimport {\n  BACKUP_NETWORK_ID,\n  backupNetworkConnector,\n  injectedNetworkConnector,\n} from '../web3/connector';\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types';\nimport { Web3Provider } from '@ethersproject/providers';\n\nexport const useInjectedWeb3React = () => useWeb3React<Web3Provider>();\n\nexport const useBackupWeb3React = () =>\n  useWeb3React<Web3Provider>(BACKUP_NETWORK_ID);\n\nexport const useActiveWeb3React =\n  (): Web3ReactContextInterface<Web3Provider> => {\n    const injectedProvider = useInjectedWeb3React();\n    const backupProvider = useBackupWeb3React();\n    return injectedProvider?.active ? injectedProvider : backupProvider;\n  };\n\nexport const useWeb3ReactActivate = (backup: boolean = false) => {\n  const networkKey = backup ? BACKUP_NETWORK_ID : undefined;\n  const { active, activate } = useWeb3React<Web3Provider>(networkKey);\n\n  return useCallback(async () => {\n    if (!active && activate) {\n      const connector = backup\n        ? backupNetworkConnector\n        : injectedNetworkConnector;\n\n      return activate(connector);\n    }\n  }, [active, activate, backup]);\n};\n\nexport const useEagerConnect = () => {\n  const activateInjectedWeb3 = useWeb3ReactActivate();\n  const activateBackupWeb3 = useWeb3ReactActivate(true);\n\n  useEffect(() => {\n    Promise.all([\n      injectedNetworkConnector.isAuthorized().then((isAuthorized) => {\n        if (isAuthorized) {\n          return activateInjectedWeb3();\n        }\n      }),\n      activateBackupWeb3(),\n    ]).catch(console.error);\n  }, [activateInjectedWeb3, activateBackupWeb3]);\n};\n\nexport const useContract = (\n  address: string,\n  contract_factory_class: any,\n): object | undefined => {\n  const { library, account } = useActiveWeb3React();\n\n  return useMemo((): object | undefined => {\n    if (address && library) {\n      return contract_factory_class.connect(\n        address,\n        typeof account === 'string' ? library.getSigner(account) : library,\n      );\n    }\n  }, [address, contract_factory_class, library, account]);\n};\n","import { createWeb3ReactRoot, Web3ReactProvider } from '@web3-react/core';\nimport { BACKUP_NETWORK_ID, getLibrary } from './connector';\nimport React from 'react';\nimport { useEagerConnect } from '../hooks';\n\nconst BackupWeb3ReactProvider = createWeb3ReactRoot(BACKUP_NETWORK_ID);\n\nconst EagerConnectWrapper = () => {\n  useEagerConnect();\n  return <></>;\n};\n\nconst Web3Root = ({ children }: { children: JSX.Element }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <BackupWeb3ReactProvider getLibrary={getLibrary}>\n        <EagerConnectWrapper />\n        {children}\n      </BackupWeb3ReactProvider>\n    </Web3ReactProvider>\n  );\n};\n\nexport default Web3Root;\n","import { styled, Theme } from '@material-ui/core';\n\nconst Flex = styled('div')({\n  display: 'flex',\n});\n\nconst Column = styled(Flex)({\n  flexDirection: 'column',\n});\n\nconst Row = styled(Flex)({\n  flexDirection: 'row',\n});\n\nconst Center = styled(Flex)({\n  justifyContent: 'center',\n  alignItems: 'center',\n});\n\nconst SizedBox = styled('div')<Theme, { width?: any; height?: any }>(\n  ({ width, height }) => ({\n    width: width,\n    height: height,\n  }),\n);\n\nexport { Flex, Column, Row, Center, SizedBox };\n","import AceEditor from 'react-ace';\nimport { IAceEditorProps } from 'react-ace/lib/ace';\nimport 'ace-builds/src-noconflict/mode-json';\nimport 'ace-builds/src-noconflict/theme-tomorrow_night_eighties';\nimport { useMediaQuery, useTheme } from '@material-ui/core';\n\nconst Editor = (props: IAceEditorProps) => {\n  const theme = useTheme();\n  const isUp800 = useMediaQuery(theme.breakpoints.up(800));\n\n  return (\n    <AceEditor\n      width={'100%'}\n      fontSize={14}\n      showGutter={isUp800}\n      wrapEnabled\n      showPrintMargin\n      highlightActiveLine\n      enableBasicAutocompletion\n      enableLiveAutocompletion\n      tabSize={2}\n      debounceChangePeriod={600}\n      {...props}\n    />\n  );\n};\n\nexport default Editor;\n","import { TextField } from '@material-ui/core';\nimport { TextFieldProps } from '@material-ui/core/TextField/TextField';\n\nconst LabelText = ({\n  id,\n  value,\n  label,\n  placeholder,\n  ...props\n}: TextFieldProps) => (\n  <TextField\n    id={id}\n    variant=\"outlined\"\n    value={value}\n    label={label}\n    placeholder={placeholder}\n    {...props}\n  />\n);\n\nexport default LabelText;\n","import { makeStyles, Paper } from '@material-ui/core';\nimport { PaperProps } from '@material-ui/core/Paper/Paper';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(800 + theme.spacing(2) * 2)]: {\n      width: 800,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n}));\n\nconst PagePaper = ({ children, ...props }: PaperProps) => {\n  const classes = useStyles();\n  return (\n    <Paper className={classes.paper} {...props}>\n      {children}\n    </Paper>\n  );\n};\n\nexport default PagePaper;\n","export const prettify = (\n  value: string | object,\n  format: 'json' | 'text',\n): string => {\n  if (format === 'json') {\n    if (typeof value === 'string') {\n      value = JSON.parse(value);\n    }\n\n    return JSON.stringify(value, undefined, 2);\n  } else if (format === 'text') {\n    if (typeof value === 'object') {\n      value = JSON.stringify(value);\n    }\n\n    return value;\n  } else {\n    throw Error(`Invalid format: ${format}, value: ${value}`);\n  }\n};\n","import {\n  Button,\n  Chip,\n  makeStyles,\n  MenuItem,\n  Select,\n  Typography,\n} from '@material-ui/core';\nimport { Column, Row, SizedBox } from '../../components/basic';\nimport { useCallback, useEffect, useState } from 'react';\nimport { easyCheckMessageHash } from './helper';\nimport Editor from '../../components/Editor';\nimport LabelText from '../../components/LabelText';\nimport PagePaper from '../../components/PagePaper';\nimport { prettify } from '../../utils';\n\nexport interface MessageViewProps {\n  methodOptions: Array<string>;\n  selectedMethod: string;\n  onMethodSelected: (method: string) => void;\n  cases: Array<{ name: string; value: string }>;\n  checkIsTargetMessage: (message: string) => boolean;\n  hashMessage: (message: string) => Promise<string>;\n  isWalletEnabled: boolean;\n  connectedAccount?: string | null;\n  connectWallet: () => void;\n  onSign: (message: string) => Promise<[string, string]>;\n  preferJsonStringMessage?: boolean;\n}\n\nconst useStyle = makeStyles((theme) => ({\n  container: {\n    padding: 0,\n  },\n  options: {\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    margin: theme.spacing(3, 0, 1),\n  },\n  caseGroup: {\n    flexWrap: 'wrap',\n    padding: 0,\n    marginBottom: theme.spacing(1),\n    '& > *': {\n      margin: theme.spacing(0.5),\n    },\n  },\n  bottomButtonGroup: {\n    justifyContent: 'flex-end',\n    padding: 0,\n  },\n}));\n\nexport const MessageEditorView = ({\n  methodOptions,\n  selectedMethod,\n  onMethodSelected,\n  cases,\n  checkIsTargetMessage,\n  hashMessage,\n  isWalletEnabled,\n  connectedAccount,\n  connectWallet,\n  onSign,\n  preferJsonStringMessage,\n}: MessageViewProps) => {\n  const classes = useStyle();\n  const [messageValue, setMessageValue] = useState<string>('');\n  const [messageHashValue, setMessageHashValue] = useState<string>('');\n  const [signatureValue, setSignatureValue] = useState<string>('');\n  const [disabledSignBtn, setDisabledSignBtn] = useState<boolean>(true);\n  const [recoveredAddress, setRecoveredAddress] = useState<string>('');\n\n  const setMessageValueWrapper = useCallback(\n    (message: string) => {\n      const formattedMessage = prettify(\n        message,\n        preferJsonStringMessage ? 'json' : 'text',\n      );\n\n      setMessageValue(formattedMessage);\n    },\n    [preferJsonStringMessage],\n  );\n\n  const onSignButtonClick = useCallback(async () => {\n    const [signature, recoveredAddress] = await onSign(messageValue);\n    setSignatureValue(signature);\n    setRecoveredAddress(recoveredAddress);\n  }, [messageValue, onSign]);\n\n  const onTagClick = (index: number) => {\n    const message = cases[index].value;\n    setMessageValueWrapper(message);\n  };\n\n  useEffect(() => {\n    if (cases[0].value) {\n      setMessageValueWrapper(cases[0].value);\n    }\n  }, [cases, setMessageValueWrapper]);\n\n  useEffect(() => {\n    const hashIt = async () => {\n      try {\n        let message = messageValue;\n        if (message && checkIsTargetMessage(message)) {\n          const messageHash: string = await hashMessage(message);\n\n          if (easyCheckMessageHash(messageHash)) {\n            setMessageHashValue(messageHash);\n            setDisabledSignBtn(false);\n          } else {\n            setDisabledSignBtn(true);\n          }\n        }\n      } catch (e) {\n        setDisabledSignBtn(true);\n        console.error('Error in hashing message', e);\n      }\n\n      setSignatureValue('');\n      setRecoveredAddress('');\n    };\n\n    hashIt().catch(console.error);\n  }, [checkIsTargetMessage, hashMessage, messageValue]);\n\n  return (\n    <PagePaper>\n      <Column className={classes.container}>\n        <Typography component={'h1'} variant={'h4'} align={'center'}>\n          Message\n        </Typography>\n\n        <Row className={classes.options}>\n          <Select\n            variant={'outlined'}\n            value={selectedMethod}\n            onChange={(event) => onMethodSelected(event.target.value as string)}\n          >\n            {methodOptions.map((method) => (\n              <MenuItem key={method} value={method}>\n                {method}\n              </MenuItem>\n            ))}\n          </Select>\n        </Row>\n\n        <Row className={classes.caseGroup}>\n          {cases.map((tag, index) => (\n            <Chip\n              size={'small'}\n              key={tag.name}\n              label={tag.name}\n              onClick={() => onTagClick(index)}\n            />\n          ))}\n        </Row>\n        <Editor\n          name={'message_editor'}\n          placeholder={'Input Message Here'}\n          mode={'json'}\n          theme={'tomorrow_night_eighties'}\n          value={messageValue}\n          onChange={setMessageValueWrapper}\n        />\n        <SizedBox height={10} />\n        <LabelText\n          id={'message_hash'}\n          value={messageHashValue}\n          label={'Message Hash'}\n        />\n        <SizedBox height={10} />\n        <LabelText\n          id={'signature'}\n          value={signatureValue}\n          label={'Signature'}\n        />\n        <SizedBox height={10} />\n        <LabelText\n          id={'recovered_address'}\n          value={recoveredAddress}\n          label={'Recovered Address'}\n          placeholder={'Please make sure the message and signature are correct'}\n        />\n        <SizedBox height={10} />\n        <Row className={classes.bottomButtonGroup}>\n          <Button\n            variant={'contained'}\n            color={'primary'}\n            disabled={isWalletEnabled}\n            onClick={connectWallet}\n          >\n            {isWalletEnabled && connectedAccount\n              ? `${connectedAccount.slice(0, 4)}...${connectedAccount.slice(\n                  -4,\n                )}`\n              : 'Connect'}\n          </Button>\n          <SizedBox width={16} />\n          <Button\n            variant={'contained'}\n            color={'secondary'}\n            disabled={disabledSignBtn || !isWalletEnabled}\n            onClick={onSignButtonClick}\n          >\n            SIGN\n          </Button>\n        </Row>\n      </Column>\n    </PagePaper>\n  );\n};\n","import {\n  easyCheckLegacyEIP712Struct,\n  easyCheckMessageHash,\n  easyCheckStandardEIP712Struct,\n} from './helper';\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types';\nimport * as ethUtil from 'ethereumjs-util';\nimport * as signUtil from 'eth-sig-util';\n\nexport interface MessageSignMethod {\n  name: string;\n  cases: Array<{ name: string; value: string }>;\n  preferJsonStringMessage?: boolean;\n  checkIsTargetMessage: (message: string) => boolean;\n  hashMessage: (message: string) => Promise<string>;\n  signMessage: (\n    web3: Web3ReactContextInterface,\n    message: string,\n  ) => Promise<string>;\n}\n\nconst DEMO_TYPED_DATA_01 =\n  '{\"types\":{\"EIP712Domain\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"chainId\",\"type\":\"uint256\"},{\"name\":\"verifyingContract\",\"type\":\"address\"}],\"Person\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"wallet\",\"type\":\"address\"}],\"Mail\":[{\"name\":\"from\",\"type\":\"Person\"},{\"name\":\"to\",\"type\":\"Person\"},{\"name\":\"contents\",\"type\":\"string\"}]},\"primaryType\":\"Mail\",\"domain\":{\"name\":\"Ether Mail\",\"version\":\"1\",\"chainId\":1,\"verifyingContract\":\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\"},\"message\":{\"from\":{\"name\":\"Cow\",\"wallet\":\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\"},\"to\":{\"name\":\"Bob\",\"wallet\":\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\"},\"contents\":\"Hello, Bob!\"}}';\nconst DEMO_TYPED_DATA_02 =\n  '{\"types\":{\"EIP712Domain\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"chainId\",\"type\":\"uint256\"},{\"name\":\"verifyingContract\",\"type\":\"address\"}],\"Person\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"wallet\",\"type\":\"address\"}],\"Mail\":[{\"name\":\"from\",\"type\":\"Person\"},{\"name\":\"to\",\"type\":\"Person\"},{\"name\":\"contents\",\"type\":\"string\"},{\"name\":\"payload\",\"type\":\"bytes\"}]},\"primaryType\":\"Mail\",\"domain\":{\"name\":\"Ether Mail\",\"version\":\"1\",\"chainId\":1,\"verifyingContract\":\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\"},\"message\":{\"from\":{\"name\":\"Cow\",\"wallet\":\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\"},\"to\":{\"name\":\"Bob\",\"wallet\":\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\"},\"contents\":\"Hello, Bob!\",\"payload\":\"0x25192142931f380985072cdd991e37f65cf8253ba7a0e675b54163a1d133b8ca\"}}';\nconst DEMO_TYPED_DATA_03 =\n  '{\"types\":{\"EIP712Domain\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"chainId\",\"type\":\"uint256\"},{\"name\":\"verifyingContract\",\"type\":\"address\"}],\"Person\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"mother\",\"type\":\"Person\"},{\"name\":\"father\",\"type\":\"Person\"}]},\"domain\":{\"name\":\"Family Tree\",\"version\":\"1\",\"chainId\":1,\"verifyingContract\":\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\"},\"primaryType\":\"Person\",\"message\":{\"name\":\"Jon\",\"mother\":{\"name\":\"Lyanna\",\"father\":{\"name\":\"Rickard\"}},\"father\":{\"name\":\"Rhaegar\",\"father\":{\"name\":\"Aeris II\"}}}}';\n\nexport const Methods: { [key: string]: MessageSignMethod } = {\n  eth_sign: {\n    name: 'eth_sign',\n    cases: [\n      {\n        name: 'Demo 1',\n        value:\n          '0x0000000000000000000000000000000000000000000000000000000000000000',\n      },\n      {\n        name: 'Demo 2',\n        value:\n          '0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF',\n      },\n    ],\n    checkIsTargetMessage: easyCheckMessageHash,\n    hashMessage: async (message: string): Promise<string> =>\n      Promise.resolve(message),\n    signMessage: (\n      { account, library }: Web3ReactContextInterface,\n      message: string,\n    ): Promise<string> =>\n      library\n        .getSigner(account)\n        .provider.provider.send('eth_sign', [account, message])\n        .then((response: any) => response?.result || response),\n  },\n  personal_sign: {\n    name: 'personal_sign',\n    cases: [\n      { name: 'Hello OneKey', value: 'Hello OneKey' },\n      { name: 'To Da Moon', value: 'To Da Moon' },\n    ],\n    checkIsTargetMessage: (message: string | undefined): boolean =>\n      typeof message === 'string' && message.length > 0,\n    hashMessage: async (message: string): Promise<string> =>\n      ethUtil.addHexPrefix(\n        ethUtil.hashPersonalMessage(ethUtil.toBuffer(message)).toString('hex'),\n      ),\n    signMessage: (\n      { account, library }: Web3ReactContextInterface,\n      message: string,\n    ): Promise<string> =>\n      library\n        .getSigner(account)\n        .provider.send('personal_sign', [account, message])\n        .then((response: any) => response?.result || response),\n  },\n  typed_data_sign: {\n    name: 'typed_data_sign',\n    cases: [\n      {\n        name: 'Single Value',\n        value: '[{\"type\":\"string\",\"name\":\"message\",\"value\":\"Hi, Alice!\"}]',\n      },\n      {\n        name: 'Multiple values',\n        value:\n          '[{\"type\":\"string\",\"name\":\"message\",\"value\":\"Hi, Alice!\"},{\"type\":\"uint8\",\"name\":\"value\",\"value\":10}]',\n      },\n      {\n        name: 'With bytes',\n        value: '[{\"type\":\"bytes\",\"name\":\"message\",\"value\":\"0xdeadbeaf\"}]',\n      },\n    ],\n    preferJsonStringMessage: true,\n    checkIsTargetMessage: easyCheckLegacyEIP712Struct,\n    hashMessage: async (message: string): Promise<string> =>\n      ethUtil.addHexPrefix(signUtil.typedSignatureHash(JSON.parse(message))),\n    signMessage: (\n      { account, library }: Web3ReactContextInterface,\n      message: string,\n    ): Promise<string> =>\n      library.provider\n        .send(\n          'eth_signTypedData',\n          library.provider.isMetaMask\n            ? [JSON.parse(message), account]\n            : [account, message],\n        )\n        .then((response: any) => response?.result || response),\n  },\n  typed_data_sign_v1: {\n    name: 'typed_data_sign_v1',\n    cases: [\n      {\n        name: 'Single Value',\n        value: '[{\"type\":\"string\",\"name\":\"message\",\"value\":\"Hi, Alice!\"}]',\n      },\n      {\n        name: 'Multiple values',\n        value:\n          '[{\"type\":\"string\",\"name\":\"message\",\"value\":\"Hi, Alice!\"},{\"type\":\"uint8\",\"name\":\"value\",\"value\":10}]',\n      },\n      {\n        name: 'With bytes',\n        value: '[{\"type\":\"bytes\",\"name\":\"message\",\"value\":\"0xdeadbeaf\"}]',\n      },\n    ],\n    preferJsonStringMessage: true,\n    checkIsTargetMessage: easyCheckLegacyEIP712Struct,\n    hashMessage: async (message: string): Promise<string> =>\n      ethUtil.addHexPrefix(signUtil.typedSignatureHash(JSON.parse(message))),\n    signMessage: (\n      { account, library }: Web3ReactContextInterface,\n      message: string,\n    ): Promise<string> =>\n      library.provider\n        .send('eth_signTypedData_v1', [account, message])\n        .then((response: any) => response?.result || response),\n  },\n  typed_data_sign_v3: {\n    name: 'typed_data_sign_v3',\n    cases: [\n      {\n        name: 'Demo',\n        value: DEMO_TYPED_DATA_01,\n      },\n      {\n        name: 'With bytes',\n        value: DEMO_TYPED_DATA_02,\n      },\n      {\n        name: 'With recursive types',\n        value: DEMO_TYPED_DATA_03,\n      },\n    ],\n    preferJsonStringMessage: true,\n    checkIsTargetMessage: easyCheckStandardEIP712Struct,\n    hashMessage: async (message: string): Promise<string> =>\n      ethUtil.addHexPrefix(\n        signUtil.TypedDataUtils.sign(JSON.parse(message), false).toString(\n          'hex',\n        ),\n      ),\n    signMessage: (\n      { account, library }: Web3ReactContextInterface,\n      message: string,\n    ): Promise<string> =>\n      library.provider\n        .send('eth_signTypedData_v3', [account, message])\n        .then((response: any) => response?.result || response),\n  },\n  typed_data_sign_v4: {\n    name: 'typed_data_sign_v4',\n    cases: [\n      {\n        name: 'Demo',\n        value: DEMO_TYPED_DATA_01,\n      },\n      {\n        name: 'With bytes',\n        value: DEMO_TYPED_DATA_02,\n      },\n      {\n        name: 'With recursive types',\n        value: DEMO_TYPED_DATA_03,\n      },\n      {\n        name: 'With array',\n        value:\n          '{\"types\":{\"EIP712Domain\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"chainId\",\"type\":\"uint256\"},{\"name\":\"verifyingContract\",\"type\":\"address\"}],\"Person\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"wallets\",\"type\":\"address[]\"}],\"Mail\":[{\"name\":\"from\",\"type\":\"Person\"},{\"name\":\"to\",\"type\":\"Person[]\"},{\"name\":\"contents\",\"type\":\"string\"}],\"Group\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"members\",\"type\":\"Person[]\"}]},\"domain\":{\"name\":\"Ether Mail\",\"version\":\"1\",\"chainId\":1,\"verifyingContract\":\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\"},\"primaryType\":\"Mail\",\"message\":{\"from\":{\"name\":\"Cow\",\"wallets\":[\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\"0xDeaDbeefdEAdbeefdEadbEEFdeadbeEFdEaDbeeF\"]},\"to\":[{\"name\":\"Bob\",\"wallets\":[\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\"0xB0BdaBea57B0BDABeA57b0bdABEA57b0BDabEa57\",\"0xB0B0b0b0b0b0B000000000000000000000000000\"]}],\"contents\":\"Hello, Bob!\"}}',\n      },\n      {\n        name: 'With 2D array',\n        value:\n          '{\"types\":{\"EIP712Domain\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"chainId\",\"type\":\"uint256\"},{\"name\":\"verifyingContract\",\"type\":\"address\"}],\"Person\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"wallets\",\"type\":\"address[]\"},{\"name\":\"logo_matrix\",\"type\":\"int[][]\"}],\"Mail\":[{\"name\":\"from\",\"type\":\"Person\"},{\"name\":\"to\",\"type\":\"Person[]\"},{\"name\":\"contents\",\"type\":\"string\"}],\"Group\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"members\",\"type\":\"Person[]\"}]},\"domain\":{\"name\":\"Ether Mail\",\"version\":\"1\",\"chainId\":1,\"verifyingContract\":\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\"},\"primaryType\":\"Mail\",\"message\":{\"from\":{\"name\":\"Cow\",\"wallets\":[\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\"0xDeaDbeefdEAdbeefdEadbEEFdeadbeEFdEaDbeeF\"],\"logo_matrix\":[[0,255],[-255,-1]]},\"to\":[{\"name\":\"Bob\",\"wallets\":[\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\"0xB0BdaBea57B0BDABeA57b0bdABEA57b0BDabEa57\",\"0xB0B0b0b0b0b0B000000000000000000000000000\"],\"logo_matrix\":[[0,0],[0,0]]}],\"contents\":\"Hello, Bob!\"}}',\n      },\n    ],\n    preferJsonStringMessage: true,\n    checkIsTargetMessage: easyCheckStandardEIP712Struct,\n    hashMessage: async (message: string): Promise<string> =>\n      ethUtil.addHexPrefix(\n        signUtil.TypedDataUtils.sign(JSON.parse(message), true).toString('hex'),\n      ),\n    signMessage: (\n      { account, library }: Web3ReactContextInterface,\n      message: string,\n    ): Promise<string> =>\n      library.provider\n        .send('eth_signTypedData_v4', [account, message])\n        .then((response: any) => response?.result || response),\n  },\n};\n","import { MessageEditorView } from './view';\nimport { useCallback, useState } from 'react';\nimport { MessageSignMethod, Methods } from './methods';\nimport { Snackbar } from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { easyCheckSignature, stringifyProviderError } from './helper';\nimport * as ethUtil from 'ethereumjs-util';\nimport { useInjectedWeb3React, useWeb3ReactActivate } from '../../hooks';\n\nconst recoverAddress = (messageHash: string, signature: string): string => {\n  const hashBuffer = ethUtil.toBuffer(messageHash);\n  const sigBuffer = ethUtil.toBuffer(signature);\n\n  console.assert(\n    hashBuffer.length === 32,\n    `Invalid message hash: ${messageHash}`,\n  );\n  console.assert(sigBuffer.length === 65, `Invalid signature: ${signature}`);\n\n  const [r, s, v] = [\n    sigBuffer.slice(0, 32),\n    sigBuffer.slice(32, 64),\n    sigBuffer[64],\n  ];\n  const public_key = ethUtil.ecrecover(hashBuffer, v, r, s);\n  return ethUtil.addHexPrefix(ethUtil.pubToAddress(public_key).toString('hex'));\n};\n\nconst MessageEditor = () => {\n  const web3 = useInjectedWeb3React();\n  const { active, account } = web3;\n  const activateInjectedWeb3 = useWeb3ReactActivate();\n  const [selectedMethod, setSelectedMethod] = useState<string>('eth_sign');\n  const [snackBarState, setSnackBarState] = useState<{\n    isOpening: boolean;\n    isPositive?: boolean;\n    message?: string;\n  }>();\n\n  const method: MessageSignMethod = Methods[selectedMethod || 'eth_sign'];\n  const onSign = useCallback(\n    async (message: string): Promise<[string, string]> => {\n      console.assert(!!account);\n      let snackBarState: { isPositive: boolean; message: string } | undefined =\n        undefined;\n      let signature = '';\n      let recoveredAddress = '';\n\n      try {\n        signature = await method.signMessage(web3, message);\n        if (signature && easyCheckSignature(signature)) {\n          recoveredAddress = recoverAddress(\n            await method.hashMessage(message),\n            signature,\n          );\n\n          if (recoveredAddress.toLowerCase() === account?.toLowerCase()) {\n            snackBarState = {\n              isPositive: true,\n              message: 'Signature Verified',\n            };\n          } else {\n            snackBarState = {\n              isPositive: false,\n              message: 'Sorry! The Message Signature Verification Failed',\n            };\n          }\n        } else {\n          snackBarState = {\n            isPositive: false,\n            message: 'Invalid signature',\n          };\n        }\n      } catch (e) {\n        console.error('Error in signing message', e);\n\n        snackBarState = {\n          isPositive: false,\n          message: stringifyProviderError(e),\n        };\n      }\n\n      if (snackBarState) {\n        setSnackBarState(() => ({ isOpening: true, ...snackBarState }));\n      }\n\n      return [signature, recoveredAddress];\n    },\n    [web3, account, method],\n  );\n\n  return (\n    <>\n      <MessageEditorView\n        isWalletEnabled={active}\n        connectedAccount={account}\n        connectWallet={activateInjectedWeb3}\n        methodOptions={Object.keys(Methods)}\n        selectedMethod={selectedMethod}\n        onMethodSelected={setSelectedMethod}\n        cases={method.cases}\n        preferJsonStringMessage={method.preferJsonStringMessage}\n        hashMessage={method.hashMessage}\n        checkIsTargetMessage={method.checkIsTargetMessage}\n        onSign={onSign}\n      />\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={snackBarState?.isOpening || false}\n        autoHideDuration={3000}\n        onClose={() =>\n          setSnackBarState((prevState) => ({\n            ...prevState,\n            isOpening: false,\n          }))\n        }\n      >\n        <MuiAlert severity={snackBarState?.isPositive ? 'success' : 'error'}>\n          {snackBarState?.message}\n        </MuiAlert>\n      </Snackbar>\n    </>\n  );\n};\n\nexport default MessageEditor;\n","import { Row, SizedBox } from './basic';\nimport {\n  Dialog,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormHelperText,\n  Link,\n} from '@material-ui/core';\nimport { useState } from 'react';\n\nconst ExpandableHelperText = ({\n  value,\n  stripThreshold = 50,\n}: {\n  value: string | undefined;\n  stripThreshold?: number;\n}) => {\n  const [isDialogOpen, setIsDialogOpen] = useState<boolean>(false);\n  const isLongText = value && value.length >= stripThreshold;\n  const stripText = isLongText\n    ? value?.slice(0, stripThreshold) + '...'\n    : value;\n\n  return (\n    <>\n      {value && (\n        <FormHelperText error>\n          <Row>\n            {stripText}\n            {isLongText && (\n              <>\n                <SizedBox width={3} />\n                <Link\n                  component=\"button\"\n                  onClick={() => setIsDialogOpen(true)}\n                  color={'inherit'}\n                  underline={'always'}\n                  aria-label={value}\n                >\n                  more\n                </Link>\n                <Dialog\n                  scroll={'paper'}\n                  open={isDialogOpen}\n                  onClose={() => setIsDialogOpen(false)}\n                >\n                  <DialogTitle>Error</DialogTitle>\n                  <DialogContent>\n                    <DialogContentText>{value}</DialogContentText>\n                  </DialogContent>\n                </Dialog>\n              </>\n            )}\n          </Row>\n        </FormHelperText>\n      )}\n    </>\n  );\n};\n\nexport default ExpandableHelperText;\n","import {\n  Button,\n  ButtonGroup,\n  ButtonGroupProps,\n  Menu,\n  MenuItem,\n} from '@material-ui/core';\nimport { ArrowDropDown } from '@material-ui/icons';\nimport React from 'react';\n\nexport interface MultiActionType {\n  label: string;\n  action: JSX.Element;\n}\n\nconst MultiActionsSelector = ({\n  selectedIndex,\n  actions,\n  onActionSelect,\n  groupProps,\n}: {\n  selectedIndex: number;\n  actions: Array<MultiActionType>;\n  onActionSelect: (action: MultiActionType, index: number) => void;\n  groupProps?: ButtonGroupProps;\n}) => {\n  const [openMenu, setOpenMenu] = React.useState(false);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  // const [selectedIndex, setSelectedIndex] = useState<number>(0);\n\n  return (\n    <ButtonGroup {...groupProps}>\n      {actions[selectedIndex].action}\n      <Button\n        onClick={(e) => {\n          const target = e.currentTarget;\n          setAnchorEl(target);\n          setOpenMenu(Boolean(target));\n        }}\n      >\n        <ArrowDropDown />\n      </Button>\n      <Menu\n        keepMounted\n        anchorEl={anchorEl}\n        open={openMenu}\n        onClose={() => setOpenMenu(false)}\n      >\n        {actions.map((action, index) => (\n          <MenuItem\n            key={action.label}\n            selected={index === selectedIndex}\n            onClick={() => {\n              onActionSelect(action, index);\n              setOpenMenu(false);\n            }}\n          >\n            {action.label}\n          </MenuItem>\n        ))}\n      </Menu>\n    </ButtonGroup>\n  );\n};\n\nexport default MultiActionsSelector;\n","import { Column, Row, SizedBox } from '../../components/basic';\nimport { Button, makeStyles, TextField, Typography } from '@material-ui/core';\nimport PagePaper from '../../components/PagePaper';\nimport Editor from '../../components/Editor';\nimport LabelText from '../../components/LabelText';\nimport SwapVertIcon from '@material-ui/icons/SwapVert';\nimport ExpandableHelperText from '../../components/ExpandableHelperText';\nimport MultiActionsSelector from '../../components/MultiActionsSelector';\n\nconst DEMO_TRANSACTION_JSON = `\n// Input json format transaction here like this:\n{\n  \"nonce\": 0,\n  \"gasPrice\": \"0x0df8475800\",\n  \"gasLimit\": \"0x0186a0\",\n  \"to\": \"0x3535353535353535353535353535353535353535\",\n  \"value\": \"0x64\",\n  \"data\": \"0x\",\n  \"chainId\": 0,\n  \"v\": 27,\n  \"r\": \"0x82de9950cc5aac0dca7210cb4b77320ac9e844717d39b1781e9d941d920a1206\",\n  \"s\": \"0x1da497b3c134f50b2fce514d66e20c5e43f9615f097395a5527041d14860a52f\"\n}\n`;\nconst DEMO_RAW_TRANSACTION = `\n// or hex string raw transaction like this:\n0xf86580850df8475800830186a094353535353535353535353535353535353535353564801ba082de9950cc5aac0dca7210cb4b77320ac9e844717d39b1781e9d941d920a1206a01da497b3c134f50b2fce514d66e20c5e43f9615f097395a5527041d14860a52f\n`;\n\nconst useStyle = makeStyles((theme) => ({\n  container: {\n    alignItems: 'center',\n    '& > *': {\n      width: '100%',\n    },\n  },\n  bottomContainer: {\n    justifyContent: 'flex-end',\n    flexWrap: 'wrap',\n    '& > *': {\n      marginBottom: '8px',\n    },\n  },\n  nodeInput: {\n    height: '40px',\n    borderColor: 'transparent',\n    borderRadius: 0,\n  },\n  actionBtn: {\n    marginLeft: '16px',\n  },\n}));\n\nexport interface ActionBtnState {\n  children: JSX.Element | string;\n  disabled?: boolean;\n  onClick?: () => void;\n}\n\nexport interface TransactionViewProps {\n  rawTransactionValue: string;\n  onRawTransactionInputChange: (value: string) => void;\n  rawTransactionHelperText?: string;\n\n  jsonTransactionHelperText?: string;\n  jsonTransactionValue: string;\n  onJsonTransactionInputChange: (value: string) => void;\n\n  txidValue: string;\n  senderAddressValue: string;\n\n  nodeSelectedIndex: number;\n  onNodeSelect: (index: number) => void;\n  isWalletInjected: boolean;\n  chainIdOnEnv?: number;\n  injectWallet: () => void;\n  customNodeValue: string;\n  onCustomNodeValueChange: (value: string) => void;\n  actionBtnState: ActionBtnState;\n}\n\nconst TransactionView = ({\n  rawTransactionHelperText,\n  rawTransactionValue,\n  onRawTransactionInputChange,\n  jsonTransactionHelperText,\n  jsonTransactionValue,\n  onJsonTransactionInputChange,\n  txidValue,\n  senderAddressValue,\n  nodeSelectedIndex,\n  onNodeSelect,\n  isWalletInjected,\n  injectWallet,\n  customNodeValue,\n  onCustomNodeValueChange,\n  actionBtnState,\n}: TransactionViewProps) => {\n  const classes = useStyle();\n\n  return (\n    <PagePaper>\n      <Column className={classes.container}>\n        <Typography component={'h1'} variant={'h4'} align={'center'}>\n          Transaction\n        </Typography>\n\n        <SizedBox height={32} />\n\n        <Editor\n          name={'transaction_editor'}\n          placeholder={DEMO_TRANSACTION_JSON}\n          mode={'json'}\n          theme={'tomorrow_night_eighties'}\n          value={jsonTransactionValue}\n          onChange={onJsonTransactionInputChange}\n          aria-describedby=\"transaction_editor_helper_text\"\n        />\n        {jsonTransactionHelperText && (\n          <ExpandableHelperText value={jsonTransactionHelperText} />\n        )}\n\n        <SizedBox height={3} />\n        <SwapVertIcon color={'disabled'} />\n        <SizedBox height={3} />\n\n        <TextField\n          error={!!rawTransactionHelperText}\n          multiline\n          maxRows={5}\n          variant={'outlined'}\n          label={\n            rawTransactionValue && rawTransactionValue.length > 0\n              ? 'Raw Transaction'\n              : undefined\n          }\n          placeholder={DEMO_RAW_TRANSACTION}\n          value={rawTransactionValue}\n          onChange={(e) => onRawTransactionInputChange(e.target.value)}\n        />\n        {rawTransactionHelperText && (\n          <ExpandableHelperText value={rawTransactionHelperText} />\n        )}\n\n        <SizedBox height={16} />\n        <LabelText\n          id={'txid'}\n          FormHelperTextProps={{ variant: 'standard' }}\n          value={txidValue}\n          label={'Txid'}\n        />\n        <SizedBox height={8} />\n        <LabelText\n          id={'sender_address'}\n          value={senderAddressValue}\n          label={'Sender Address'}\n        />\n        <SizedBox height={16} />\n\n        <Row className={classes.bottomContainer}>\n          <MultiActionsSelector\n            selectedIndex={nodeSelectedIndex}\n            onActionSelect={(action, index) => onNodeSelect(index)}\n            actions={[\n              {\n                label: 'Default ETH Mainnet',\n                action: <Button>ETH Mainnet</Button>,\n              },\n              {\n                label: 'Connect Wallet',\n                action: (\n                  <Button onClick={injectWallet}>\n                    {isWalletInjected ? 'Connected' : 'Connect Wallet'}\n                  </Button>\n                ),\n              },\n              {\n                label: 'Custom',\n                action: (\n                  <TextField\n                    variant={'outlined'}\n                    value={customNodeValue}\n                    placeholder={'https://my_rpc_node.com'}\n                    onChange={(e) => onCustomNodeValueChange(e.target.value)}\n                    InputProps={{\n                      className: classes.nodeInput,\n                    }}\n                  />\n                ),\n              },\n            ]}\n            groupProps={{\n              variant: 'contained',\n              color: 'primary',\n            }}\n          />\n          <Button\n            className={classes.actionBtn}\n            variant={'contained'}\n            color={'secondary'}\n            {...actionBtnState}\n          />\n        </Row>\n      </Column>\n    </PagePaper>\n  );\n};\n\nexport default TransactionView;\n","import {\n  serialize,\n  parse,\n  Transaction,\n  UnsignedTransaction,\n} from '@ethersproject/transactions';\nimport { Signature } from '@ethersproject/bytes/src.ts/index';\nimport { addHexPrefix } from 'ethereumjs-util';\nimport { BigNumber } from '@ethersproject/bignumber';\n\nconst normalizedTransactionKeys: { [key: string]: string } = {\n  chain_id: 'chainId',\n  gas_limit: 'gasLimit',\n  gas: 'gasLimit',\n  gas_price: 'gasPrice',\n  access_list: 'accessList',\n  max_priority_fee_per_gas: 'maxPriorityFeePerGas',\n  max_fee_per_gas: 'maxFeePerGas',\n  input: 'data',\n};\n\nconst asHexNumber = (value: number | string | undefined): string =>\n  typeof value === 'undefined'\n    ? '0x00'\n    : BigNumber.from(\n        typeof value === 'number' ? value.toString() : value,\n      ).toHexString();\n\nconst asNumber = (value: number | string | undefined): number =>\n  parseInt(asHexNumber(value), 16);\n\nconst normalizedTransactionValues: {\n  [key: string]: (value: any) => any;\n} = {\n  hash: addHexPrefix,\n  from: addHexPrefix,\n  to: addHexPrefix,\n  nonce: asNumber,\n  gasLimit: (value) => asHexNumber(Math.max(21000, asNumber(value))),\n  gasPrice: asHexNumber,\n  data: addHexPrefix,\n  value: asHexNumber,\n  chainId: asNumber,\n  type: asNumber,\n  maxPriorityFeePerGas: asHexNumber,\n  maxFeePerGas: asHexNumber,\n  r: addHexPrefix,\n  s: addHexPrefix,\n  v: asNumber,\n};\n\nconst allowedUnsignedTransactionKeys: Array<string> = [\n  'to',\n  'nonce',\n  'gasLimit',\n  'gasPrice',\n  'data',\n  'value',\n  'chainId',\n  'type',\n  'accessList',\n  'maxPriorityFeePerGas',\n  'maxFeePerGas',\n];\n\nconst allowedSignatureKeys: Array<string> = ['r', 's', 'v'];\n\nconst allowedTransactionKeys: Array<string> = [\n  ...allowedUnsignedTransactionKeys,\n  ...allowedSignatureKeys,\n  'hash',\n  'from',\n];\n\nconst isMeaninglessValue = (value: any) =>\n  typeof value === 'undefined' ||\n  value === null ||\n  (typeof value === 'string' && value.length === 0);\n\nconst normalizedTransaction = (maybe_transaction: object): Transaction => {\n  const transaction = Object.fromEntries(\n    Object.entries(maybe_transaction)\n      .filter(([_, value]) => !isMeaninglessValue(value))\n      .map(([key, value]): [string, any] => [\n        key in normalizedTransactionKeys ? normalizedTransactionKeys[key] : key,\n        key in normalizedTransactionValues\n          ? normalizedTransactionValues[key](value)\n          : value,\n      ])\n      .filter(([key, _]) => allowedTransactionKeys.includes(key)),\n  );\n  return transaction as Transaction;\n};\n\nconst exportSignature = (transaction: Transaction): Signature | undefined => {\n  let signature: Signature | undefined = Object.fromEntries(\n    Object.entries(transaction).filter(([key, _]) =>\n      allowedSignatureKeys.includes(key),\n    ),\n  ) as Signature;\n\n  if (Object.keys(signature).length !== allowedSignatureKeys.length) {\n    signature = undefined;\n  }\n  return signature;\n};\n\nexport const serializeTransaction = (\n  maybeTransaction: object,\n): string | undefined => {\n  const transaction = normalizedTransaction(maybeTransaction);\n  const signature: Signature | undefined = exportSignature(transaction);\n\n  const unSignedTransaction = Object.fromEntries(\n    Object.entries(transaction).filter(([key, _]) =>\n      allowedUnsignedTransactionKeys.includes(key),\n    ),\n  ) as UnsignedTransaction;\n\n  return serialize(unSignedTransaction, signature);\n};\n\nexport const deserializeTransaction = (rawTransaction: string) =>\n  normalizedTransaction(parse(rawTransaction));\n\nexport const ExplorerUrlsForTx: { [key: number]: string } = {\n  1: 'https://etherscan.io/tx/{0}',\n  3: 'https://ropsten.etherscan.io/tx/{0}',\n  56: 'https://bscscan.com/tx/{0}',\n  97: 'https://testnet.bscscan.com/tx/{0}',\n  128: 'https://hecoinfo.com/tx/{0}',\n  256: 'https://testnet.hecoinfo.com/{0}',\n};\n\nexport const DEFAULT_TX_EXPLORER = 'https://blockscan.com/tx/{0}';\n","import TransactionView, { ActionBtnState } from './view';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { prettify } from '../../utils';\nimport {\n  DEFAULT_TX_EXPLORER,\n  deserializeTransaction,\n  ExplorerUrlsForTx,\n  serializeTransaction,\n} from './helper';\nimport { addHexPrefix } from 'ethereumjs-util';\nimport {\n  useBackupWeb3React,\n  useInjectedWeb3React,\n  useWeb3ReactActivate,\n} from '../../hooks';\nimport {\n  JsonRpcProvider,\n  Network,\n  Web3Provider,\n} from '@ethersproject/providers';\nimport { CircularProgress } from '@material-ui/core';\n\nconst DEFAULT_ACTION_BTN_STATE: ActionBtnState = {\n  disabled: true,\n  children: 'Pending',\n};\n\ninterface TxSnapshot {\n  txid?: string;\n  chainId?: number;\n  signed?: boolean;\n  sender?: string;\n  payload: object;\n}\n\nconst isValidUrl = (value: string): boolean => {\n  let url: URL | undefined;\n  try {\n    url = new URL(value);\n  } catch {}\n\n  return url?.protocol === 'http:' || url?.protocol === 'https:';\n};\n\nconst renderActionBtnState = async (\n  provider: any,\n  { signed, txid, chainId, payload }: TxSnapshot,\n  onTransactionSigned: (tx: any) => void,\n): Promise<ActionBtnState> => {\n  let btnState: ActionBtnState | undefined = undefined;\n  const network: Network = await provider.getNetwork();\n\n  if (signed) {\n    if (chainId !== network.chainId) {\n      btnState = {\n        disabled: true,\n        children: 'ChainId Mismatched',\n      };\n    } else if (txid) {\n      const tx = await provider.send('eth_getTransactionByHash', [txid]);\n      if (typeof tx === 'object' && tx !== null && tx.hash === txid) {\n        btnState = {\n          disabled: false,\n          children: 'Transaction Found!',\n          onClick: () =>\n            window.open(\n              (\n                ExplorerUrlsForTx[chainId as number] || DEFAULT_TX_EXPLORER\n              ).replace('{0}', txid as string),\n            ),\n        };\n      }\n    }\n\n    if (!btnState) {\n      btnState = {\n        disabled: false,\n        children: 'Broadcast',\n        onClick: () =>\n          provider.send('eth_sendRawTransaction', [\n            serializeTransaction(payload),\n          ]),\n      };\n    }\n  } else if (provider instanceof Web3Provider) {\n    btnState = {\n      disabled: false,\n      children: 'Sign & Broadcast',\n      onClick: () =>\n        provider\n          .getSigner()\n          .sendTransaction(\n            Object.assign(payload, {\n              chainId: network.chainId,\n            }),\n          )\n          .then((tx) =>\n            onTransactionSigned(\n              Object.assign(tx, { chainId: network.chainId }),\n            ),\n          ),\n    };\n  }\n\n  return btnState || DEFAULT_ACTION_BTN_STATE;\n};\n\nconst Transaction = () => {\n  const { active: isWalletInjected, library: injectedProvider } =\n    useInjectedWeb3React();\n  const { library: backupProvider } = useBackupWeb3React();\n  const activateInjectedWeb3 = useWeb3ReactActivate();\n\n  const [jsonTransactionValue, setJsonTransactionValue] = useState<string>('');\n  const [jsonTransactionHelperText, setJsonTransactionHelperText] = useState<\n    string | undefined\n  >();\n  const [rawTransactionValue, setRawTransactionValue] = useState<string>('');\n  const [rawTransactionHelperText, setRawTransactionHelperText] = useState<\n    string | undefined\n  >();\n  const [txSnapshot, setTxSnapshot] = useState<undefined | TxSnapshot>();\n\n  const [nodeSelectedIndex, setNodeSelectedIndex] = useState<number>(0);\n  const [customNodeValue, setCustomNodeValue] = useState<string>('');\n\n  const provider = useMemo((): any | undefined => {\n    if (nodeSelectedIndex === 0) {\n      return backupProvider;\n    } else if (nodeSelectedIndex === 1) {\n      return injectedProvider;\n    } else if (nodeSelectedIndex === 2 && isValidUrl(customNodeValue)) {\n      return new JsonRpcProvider({ url: customNodeValue });\n    }\n  }, [nodeSelectedIndex, injectedProvider, backupProvider, customNodeValue]);\n\n  const [actionBtnState, setActionBtnState] = useState<ActionBtnState>(\n    DEFAULT_ACTION_BTN_STATE,\n  );\n\n  const updateTransaction = async (\n    value: string,\n    source: 'json_tx' | 'raw_tx',\n  ) => {\n    let rawTransaction: string | undefined;\n\n    if (source === 'raw_tx') {\n      rawTransaction = addHexPrefix(value.trim());\n    } else if (value) {\n      const maybe_transaction = JSON.parse(value);\n      rawTransaction = serializeTransaction(maybe_transaction);\n    }\n\n    if (!rawTransaction) {\n      setTxSnapshot(undefined);\n      return;\n    }\n\n    const jsonTransaction = deserializeTransaction(rawTransaction);\n    const txid = jsonTransaction.hash;\n    const senderAddress = jsonTransaction.from;\n\n    txid && delete jsonTransaction.hash;\n    senderAddress && delete jsonTransaction.from;\n\n    const txSnapshot = {\n      txid,\n      chainId: jsonTransaction.chainId,\n      signed: Boolean(\n        jsonTransaction.r &&\n          jsonTransaction.s &&\n          typeof jsonTransaction.v === 'number',\n      ),\n      sender: senderAddress,\n      payload: jsonTransaction,\n    };\n\n    setRawTransactionHelperText(undefined);\n    setRawTransactionValue(rawTransaction);\n    setJsonTransactionHelperText(undefined);\n    setJsonTransactionValue(prettify(jsonTransaction, 'json'));\n    setTxSnapshot(txSnapshot);\n  };\n\n  const onTransactionEditorChange = useCallback(\n    (value: string) => {\n      if (value !== jsonTransactionValue) {\n        updateTransaction(value, 'json_tx').catch((e: Error) => {\n          console.error(e);\n          try {\n            value = prettify(value, 'json');\n          } catch {}\n          setJsonTransactionValue(value);\n          setJsonTransactionHelperText(e?.message);\n        });\n      } else if (!value) {\n        setJsonTransactionValue(value);\n        setJsonTransactionHelperText(undefined);\n      }\n    },\n    [jsonTransactionValue],\n  );\n\n  const onRawTransactionInputChange = (value: string) => {\n    if (value) {\n      updateTransaction(value, 'raw_tx').catch((e: Error) => {\n        console.error(e);\n        setRawTransactionHelperText(e?.message);\n        setRawTransactionValue(value);\n      });\n    } else {\n      setRawTransactionValue(value);\n      setRawTransactionHelperText(undefined);\n    }\n  };\n\n  useEffect(() => {\n    let cancelled: boolean = false;\n\n    if (typeof provider !== 'undefined' && typeof txSnapshot !== 'undefined') {\n      setActionBtnState({\n        disabled: false,\n        children: <CircularProgress color={'inherit'} size={24} />,\n      });\n      renderActionBtnState(\n        provider,\n        txSnapshot,\n        (tx) => !cancelled && onTransactionEditorChange(JSON.stringify(tx)),\n      )\n        .then((value) => !cancelled && setActionBtnState(() => value))\n        .catch(console.error);\n    } else {\n      setActionBtnState(DEFAULT_ACTION_BTN_STATE);\n    }\n\n    return () => {\n      cancelled = true;\n    };\n  }, [provider, txSnapshot, onTransactionEditorChange]);\n\n  useEffect(() => {\n    if (injectedProvider) {\n      setNodeSelectedIndex(1);\n    }\n  }, [injectedProvider]);\n\n  return (\n    <TransactionView\n      rawTransactionHelperText={rawTransactionHelperText}\n      rawTransactionValue={rawTransactionValue}\n      onRawTransactionInputChange={onRawTransactionInputChange}\n      jsonTransactionHelperText={jsonTransactionHelperText}\n      jsonTransactionValue={jsonTransactionValue}\n      onJsonTransactionInputChange={onTransactionEditorChange}\n      txidValue={txSnapshot?.txid || ''}\n      senderAddressValue={txSnapshot?.sender || ''}\n      nodeSelectedIndex={nodeSelectedIndex}\n      onNodeSelect={setNodeSelectedIndex}\n      isWalletInjected={isWalletInjected}\n      injectWallet={activateInjectedWeb3}\n      customNodeValue={customNodeValue}\n      onCustomNodeValueChange={setCustomNodeValue}\n      actionBtnState={actionBtnState}\n    />\n  );\n};\n\nexport default Transaction;\n","import React, { useEffect } from 'react';\n// @ts-ignore\nimport jazzicon from '@metamask/jazzicon';\n\nconst clearChildren = (parent: HTMLDivElement) => {\n  const count = parent.children.length;\n\n  for (let i = 0; i < count; ++i) {\n    parent.removeChild(parent.children[i]);\n  }\n};\n\nconst JazziconAvatar = ({\n  address,\n  size = 45,\n}: {\n  address: string;\n  size?: number;\n}) => {\n  const ref = React.createRef<HTMLDivElement>();\n\n  useEffect(() => {\n    if (address && size && ref !== null && ref.current) {\n      clearChildren(ref.current);\n\n      const node = jazzicon(size, parseInt(address.slice(2, 10), 16));\n      ref.current.appendChild(node);\n    }\n  }, [address, size, ref]);\n\n  return <div ref={ref} />;\n};\n\nexport default JazziconAvatar;\n","import PagePaper from '../../components/PagePaper';\nimport {\n  Badge,\n  Divider,\n  IconButton,\n  Link,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  makeStyles,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport { Center, Column, Row, SizedBox } from '../../components/basic';\nimport { Record } from './helper';\nimport JazziconAvatar from '../../components/JazziconAvatar';\nimport { Forum, Send } from '@material-ui/icons';\n\nconst useStyle = makeStyles((theme) => ({\n  container: {\n    alignItems: 'center',\n    maxHeight: '80vh',\n    '& > *': {\n      width: '100%',\n    },\n  },\n  emptyContainer: {\n    flexDirection: 'column',\n    height: '30vh',\n    textAlign: 'center',\n    '& > #logo': {\n      fontSize: 80,\n      color: theme.palette.divider,\n    },\n  },\n  records: {\n    display: 'flex',\n    flexDirection: 'column-reverse',\n    minHeight: 300,\n    overflow: 'auto',\n    boxShadow: 'inset 0 -1px 1px -1px gray',\n  },\n  recordItemPrimary: {\n    alignItems: 'center',\n    fontSize: 13,\n    marginBottom: 8,\n    '& > #link': {\n      marginLeft: 2,\n      fontSize: 14,\n      fontWeight: 600,\n    },\n    '& > #dot': {\n      fontWeight: 400,\n      marginLeft: 4,\n      marginRight: 4,\n    },\n    '& > #date': {\n      fontWeight: 500,\n    },\n  },\n  recordItemSecondary: {\n    maxHeight: 80,\n    overflow: 'auto',\n  },\n  flexBox: {\n    flex: 1,\n  },\n  floorLabel: {\n    borderRadius: '10px',\n    backgroundColor: 'rgb(240, 240, 240)',\n    color: 'rgb(204, 204, 204)',\n    padding: '2px 5px 2px 5px',\n    fontSize: '9px',\n    lineHeight: '9px',\n    fontWeight: 600,\n  },\n  inputContainer: {\n    alignItems: 'center',\n    paddingLeft: 16,\n    '& > #send': {\n      transition: 'transform 300ms ease-in-out',\n      '&:hover': {\n        transform: 'rotate(-45deg)',\n      },\n    },\n  },\n}));\n\nexport interface DiscussionViewProps {\n  isWrongNetwork: boolean;\n  records: Array<Record>;\n  account: string;\n  messageValue: string;\n  onMessageValueChange: (value: string) => void;\n  submitMessage: () => void;\n  connectWallet: () => void;\n}\n\nconst DiscussionView = ({\n  isWrongNetwork,\n  records,\n  account,\n  messageValue,\n  onMessageValueChange,\n  submitMessage,\n  connectWallet,\n}: DiscussionViewProps) => {\n  const classes = useStyle();\n\n  return (\n    <PagePaper>\n      <Column className={classes.container}>\n        <Center>\n          <Badge badgeContent={'Dev'} color={'secondary'}>\n            <Typography component={'h1'} variant={'h4'}>\n              Discussion\n            </Typography>\n          </Badge>\n        </Center>\n        <SizedBox height={32} />\n\n        {records.length > 0 ? (\n          <List className={classes.records}>\n            {records.map((i, index, me) => (\n              <RecordItemView\n                key={i.id}\n                record={i}\n                isLastOne={index + 1 === me.length}\n                account={account}\n              />\n            ))}\n          </List>\n        ) : (\n          <Center className={classes.emptyContainer}>\n            <Forum id={'logo'} />\n            {isWrongNetwork && (\n              <Typography variant={'body2'} color={'error'}>\n                Wrong network <br />\n                Please connect to the Ropsten Ethereum network.\n              </Typography>\n            )}\n          </Center>\n        )}\n        <SizedBox height={8} />\n        <Row className={classes.inputContainer}>\n          <TextField\n            id={'input'}\n            fullWidth\n            multiline\n            maxRows={3}\n            placeholder={'Join the discussion...'}\n            value={messageValue}\n            onChange={(e) => onMessageValueChange(e.target.value)}\n          />\n          <IconButton id={'send'} color={'primary'} disabled={!account}>\n            <Send onClick={!!account ? submitMessage : connectWallet} />\n          </IconButton>\n        </Row>\n      </Column>\n    </PagePaper>\n  );\n};\n\nconst RecordItemView = ({\n  record: { id, sender, message, date },\n  isLastOne,\n  account,\n}: {\n  record: Record;\n  isLastOne: boolean;\n  account: string;\n}) => {\n  const classes = useStyle();\n  const floor = `${id}`;\n  const shortSender = `${sender.slice(0, 6)}`;\n\n  return (\n    <>\n      <ListItem alignItems={'flex-start'}>\n        <ListItemAvatar>\n          <Badge\n            invisible={account.toLowerCase() !== sender.toLowerCase()}\n            badgeContent={'me'}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            color={'secondary'}\n          >\n            <JazziconAvatar address={sender} />\n          </Badge>\n        </ListItemAvatar>\n\n        <ListItemText\n          disableTypography\n          primary={\n            <Row className={classes.recordItemPrimary}>\n              <Link\n                id={'link'}\n                href={`https://blockscan.com/address/${sender}`}\n                target={'_blank'}\n              >\n                {shortSender}\n              </Link>\n              <Typography id={'dot'} variant={'caption'}>\n                •\n              </Typography>\n              <Typography\n                id={'date'}\n                variant={'inherit'}\n                color={'textSecondary'}\n              >\n                {date}\n              </Typography>\n              <div className={classes.flexBox} />\n              <span className={classes.floorLabel}>{floor}</span>\n            </Row>\n          }\n          secondary={\n            <Typography\n              className={classes.recordItemSecondary}\n              variant={'body2'}\n            >\n              {message}\n            </Typography>\n          }\n        />\n      </ListItem>\n      {!isLastOne && <Divider variant={'inset'} component={'li'} />}\n    </>\n  );\n};\n\nexport default DiscussionView;\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';\nimport { Provider, TransactionRequest } from '@ethersproject/providers';\nimport type { OpenBoard, OpenBoardInterface } from '../OpenBoard';\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        components: [\n          {\n            internalType: 'uint256',\n            name: 'id',\n            type: 'uint256',\n          },\n          {\n            internalType: 'address',\n            name: 'sender',\n            type: 'address',\n          },\n          {\n            internalType: 'string',\n            name: 'message',\n            type: 'string',\n          },\n          {\n            internalType: 'uint256',\n            name: 'timestamp',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bool',\n            name: 'isDonated',\n            type: 'bool',\n          },\n          {\n            internalType: 'uint256',\n            name: 'donatedValue',\n            type: 'uint256',\n          },\n        ],\n        indexed: false,\n        internalType: 'struct Record',\n        name: 'record',\n        type: 'tuple',\n      },\n    ],\n    name: 'NewRecord',\n    type: 'event',\n  },\n  {\n    inputs: [],\n    name: 'MAX_CAPACITY',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bool',\n        name: '_enabled',\n        type: 'bool',\n      },\n    ],\n    name: 'changeEnabled',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'newOwner',\n        type: 'address',\n      },\n    ],\n    name: 'changeOwner',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'enabled',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'historicalDonation',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'owner',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'recordId',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    name: 'records',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: 'id',\n        type: 'uint256',\n      },\n      {\n        internalType: 'address',\n        name: 'sender',\n        type: 'address',\n      },\n      {\n        internalType: 'string',\n        name: 'message',\n        type: 'string',\n      },\n      {\n        internalType: 'uint256',\n        name: 'timestamp',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bool',\n        name: 'isDonated',\n        type: 'bool',\n      },\n      {\n        internalType: 'uint256',\n        name: 'donatedValue',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'message',\n        type: 'string',\n      },\n    ],\n    name: 'submitMessage',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'message',\n        type: 'string',\n      },\n    ],\n    name: 'donate',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'ownerClaim',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n];\n\nconst _bytecode =\n  '';\n\nexport class OpenBoard__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    overrides?: Overrides & { from?: string | Promise<string> },\n  ): Promise<OpenBoard> {\n    return super.deploy(overrides || {}) as Promise<OpenBoard>;\n  }\n  getDeployTransaction(\n    overrides?: Overrides & { from?: string | Promise<string> },\n  ): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): OpenBoard {\n    return super.attach(address) as OpenBoard;\n  }\n  connect(signer: Signer): OpenBoard__factory {\n    return super.connect(signer) as OpenBoard__factory;\n  }\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): OpenBoardInterface {\n    return new utils.Interface(_abi) as OpenBoardInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider,\n  ): OpenBoard {\n    return new Contract(address, _abi, signerOrProvider) as OpenBoard;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer, utils } from 'ethers';\nimport { Provider } from '@ethersproject/providers';\nimport type { Ownable, OwnableInterface } from '../Ownable';\n\nconst _abi = [\n  {\n    inputs: [],\n    name: 'enabled',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'owner',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'newOwner',\n        type: 'address',\n      },\n    ],\n    name: 'changeOwner',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bool',\n        name: '_enabled',\n        type: 'bool',\n      },\n    ],\n    name: 'changeEnabled',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n];\n\nexport class Ownable__factory {\n  static readonly abi = _abi;\n  static createInterface(): OwnableInterface {\n    return new utils.Interface(_abi) as OwnableInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider,\n  ): Ownable {\n    return new Contract(address, _abi, signerOrProvider) as Ownable;\n  }\n}\n","import { OpenBoard, OpenBoard__factory } from '../../types/contracts';\nimport { useContract } from '../../hooks';\nimport moment from 'moment';\n\nconst CONTRACT_ADDRESS = '0xa5954b05e2d7dbc2894bfe2732207ce2d8f656c7';\n\nexport const useOpenBoardContract = () =>\n  useContract(CONTRACT_ADDRESS, OpenBoard__factory) as OpenBoard;\n\nexport interface Record {\n  id: number;\n  sender: string;\n  message: string;\n  date: string;\n  isDonated: boolean;\n  donatedValue: number;\n}\n\nexport const normalizeRecord = (origin: any): Record => ({\n  id: origin.id.toNumber(),\n  sender: origin.sender,\n  message: origin.message,\n  date: moment(origin.timestamp * 1e3).fromNow(),\n  isDonated: origin.isDonated,\n  donatedValue: origin.donatedValue.toString(),\n});\n","import DiscussionView from './view';\nimport { normalizeRecord, Record, useOpenBoardContract } from './helper';\nimport { OpenBoard } from '../../types/contracts';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useActiveWeb3React, useWeb3ReactActivate } from '../../hooks';\n\nconst MAX_CAPACITY = 100;\n\nconst loadHistoricalRecords = async (\n  contract: OpenBoard,\n): Promise<Array<Record>> => {\n  const recordId = (await contract.recordId()).toNumber();\n  const lastIndex = Math.min(recordId, MAX_CAPACITY);\n\n  const records: Array<Record> = [];\n\n  for (let i = 0; i < lastIndex; ++i) {\n    const batchSize = 10;\n    const lastBatch = Math.min(i + batchSize, lastIndex);\n    const calls = [];\n    while (i < lastBatch) {\n      calls.push(contract.records(i));\n      ++i;\n    }\n    const originRecords = await Promise.all(calls);\n    records.push(...originRecords.map(normalizeRecord));\n  }\n\n  records.sort((a, b) => b.id - a.id);\n  return records;\n};\n\nconst Discussion = () => {\n  const { account, chainId } = useActiveWeb3React();\n  const activateInjectedWeb3 = useWeb3ReactActivate();\n  const contract: OpenBoard | undefined = useOpenBoardContract();\n  const [records, setRecords] = useState<Array<Record>>([]);\n  const [messageValue, setMessageValue] = useState<string>('');\n\n  const submitMessage = useCallback(() => {\n    if (!contract || !messageValue) {\n      return;\n    }\n\n    contract\n      .submitMessage(messageValue)\n      .then(() => setMessageValue(''))\n      .catch(console.error);\n  }, [contract, messageValue]);\n\n  useEffect(() => {\n    if (!contract) {\n      return;\n    }\n\n    let cancelled = false;\n    loadHistoricalRecords(contract)\n      .then((records) => !cancelled && setRecords(records))\n      .catch(console.error);\n\n    const filter = contract.filters.NewRecord();\n    const listener = (newRecord: any) => {\n      if (!cancelled) {\n        setRecords((prevState) => [normalizeRecord(newRecord), ...prevState]);\n      }\n    };\n    contract.on(filter, listener);\n\n    return () => {\n      cancelled = true;\n      contract.removeListener(filter, listener);\n    };\n  }, [contract, account]);\n\n  return (\n    <DiscussionView\n      isWrongNetwork={chainId !== 3}\n      records={records}\n      account={typeof account === 'string' ? account : ''}\n      connectWallet={activateInjectedWeb3}\n      messageValue={messageValue}\n      onMessageValueChange={setMessageValue}\n      submitMessage={submitMessage}\n    />\n  );\n};\n\nexport default Discussion;\n","import {\n  Divider,\n  Drawer,\n  ListItem,\n  ListItemText,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core';\nimport React, { useMemo } from 'react';\nimport { SizedBox } from './basic';\nimport { DrawerProps } from '@material-ui/core/Drawer/Drawer';\n\nconst DRAWER_WIDTH = 240;\nconst useStyle = makeStyles((theme) => ({\n  drawer: {},\n  drawerPaper: {\n    marginTop: theme.spacing(8),\n    width: DRAWER_WIDTH,\n    height: 300,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  menuItem: {\n    height: theme.spacing(8),\n  },\n}));\n\nconst PagesDrawer = ({\n  menus,\n  open,\n  onDrawerItemClick,\n  onClose,\n}: {\n  menus: Array<string>;\n  open: boolean;\n  onDrawerItemClick: (text: string, index: number) => void;\n  onClose: VoidFunction;\n}) => {\n  const classes = useStyle();\n  const theme = useTheme();\n  const isDown800 = useMediaQuery(theme.breakpoints.down(800));\n\n  const drawerProps = useMemo<DrawerProps>(() => {\n    if (isDown800) {\n      return {\n        anchor: 'bottom',\n      };\n    } else {\n      return {\n        anchor: 'left',\n        className: classes.drawer,\n        classes: { paper: classes.drawerPaper },\n      };\n    }\n  }, [classes, isDown800]);\n\n  return (\n    <Drawer open={open} onClose={onClose} {...drawerProps}>\n      {menus.map((text, index) => (\n        <ListItem\n          className={classes.menuItem}\n          button\n          key={text}\n          onClick={() => onDrawerItemClick(text, index)}\n          divider={!isDown800}\n        >\n          <ListItemText primary={text} />\n        </ListItem>\n      ))}\n\n      {isDown800 && <Divider />}\n      <SizedBox height={theme.spacing(6)} />\n    </Drawer>\n  );\n};\n\nexport default PagesDrawer;\n","import React, { useState } from 'react';\nimport {\n  AppBar,\n  IconButton,\n  makeStyles,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport PagesDrawer from './PagesDrawer';\nimport { useNavigate } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    color: 'default',\n    position: 'relative',\n  },\n  main: {\n    width: 'auto',\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst MyAppBar = ({ onDrawerBtnClick }: { onDrawerBtnClick: VoidFunction }) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar className={classes.appBar}>\n      <Toolbar>\n        <IconButton\n          color={'inherit'}\n          aria-label={'open drawer'}\n          onClick={onDrawerBtnClick}\n          edge={'start'}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography variant={'h6'} color={'inherit'} noWrap>\n          Web3 Example\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nconst PageWrapper: React.FC<React.PropsWithChildren<unknown>> = ({\n  children,\n}) => {\n  const classes = useStyles();\n  const [isDrawerOpening, setIsDrawerOpening] = useState<boolean>(false);\n  const navigate = useNavigate();\n\n  return (\n    <>\n      <MyAppBar\n        onDrawerBtnClick={() => setIsDrawerOpening((prevState) => !prevState)}\n      />\n      <PagesDrawer\n        menus={['Message', 'Transaction', 'Discussion']}\n        open={isDrawerOpening}\n        onClose={() => setIsDrawerOpening(() => false)}\n        onDrawerItemClick={(text) => {\n          navigate(`/${text.toLowerCase()}`);\n          setIsDrawerOpening(false);\n        }}\n      />\n      <main className={classes.main}>{children}</main>\n    </>\n  );\n};\n\nexport default PageWrapper;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Web3Root from './web3/Web3Root';\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport Message from './pages/Message';\nimport Transaction from './pages/Transaction';\nimport Discussion from './pages/Discussion';\nimport { CssBaseline } from '@material-ui/core';\nimport PageWrapper from './components/PageWrapper';\n\nconst router = createBrowserRouter(\n  [\n    {\n      path: '/message',\n      element: (\n        <PageWrapper>\n          <Message />\n        </PageWrapper>\n      ),\n    },\n    {\n      path: '/transaction',\n      element: (\n        <PageWrapper>\n          <Transaction />\n        </PageWrapper>\n      ),\n    },\n    {\n      path: '/discussion',\n      element: (\n        <PageWrapper>\n          <Discussion />\n        </PageWrapper>\n      ),\n    },\n  ],\n  { basename: 'web3-example' },\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <>\n      <CssBaseline />\n      <Web3Root>\n        <RouterProvider router={router} />\n      </Web3Root>\n    </>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import * as signUtil from 'eth-sig-util';\n\nexport const easyCheckMessageHash = (\n  messageHash: string | undefined,\n): boolean => {\n  if (\n    typeof messageHash === 'string' &&\n    messageHash.startsWith('0x') &&\n    messageHash.length === 66\n  ) {\n    try {\n      return Buffer.from(messageHash.slice(2), 'hex').length === 32;\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  return false;\n};\n\nexport const easyCheckSignature = (signature: string | undefined): boolean => {\n  if (\n    typeof signature == 'string' &&\n    signature.startsWith('0x') &&\n    signature.length === 132\n  ) {\n    try {\n      return Buffer.from(signature.slice(2), 'hex').length === 65;\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  return false;\n};\n\nexport const easyCheckLegacyEIP712Struct = (value: string | undefined) => {\n  if (\n    typeof value === 'string' &&\n    value.startsWith('[') &&\n    value.endsWith(']')\n  ) {\n    try {\n      const struct = JSON.parse(value);\n      if (Array.isArray(struct)) {\n        return struct.every(\n          (i: any) =>\n            typeof i === 'object' &&\n            typeof i.type === 'string' &&\n            typeof i.name == 'string' &&\n            i.value !== undefined,\n        );\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  return false;\n};\n\nexport const easyCheckStandardEIP712Struct = (value: string | undefined) => {\n  if (\n    typeof value === 'string' &&\n    value.startsWith('{') &&\n    value.endsWith('}')\n  ) {\n    try {\n      const struct = JSON.parse(value);\n      if (typeof struct === 'object') {\n        return signUtil.TYPED_MESSAGE_SCHEMA.required.every((i) => !!struct[i]);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  return false;\n};\n\nexport const stringifyProviderError = (error: any): string => {\n  const errorType = typeof error;\n  if (errorType === 'undefined') {\n    return 'Something wrong';\n  } else if (errorType === 'string') {\n    return error;\n  } else if (errorType === 'object' && typeof error.message === 'string') {\n    return error.message;\n  } else if (errorType === 'object' && error.data) {\n    return JSON.stringify(error.data);\n  } else {\n    return JSON.stringify(error);\n  }\n};\n"],"sourceRoot":""}