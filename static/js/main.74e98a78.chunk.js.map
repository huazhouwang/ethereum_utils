{"version":3,"sources":["components/Editor.tsx","components/PagePaper.tsx","hooks/index.ts","components/basic.tsx","components/ExpandableHelperText.tsx","components/MultiActionsSelector.tsx","pages/Transaction/view.tsx","pages/Transaction/helper.ts","pages/Transaction/index.tsx","components/PagesDrawer.tsx","App.tsx","index.tsx","pages/Message/view.tsx","pages/Message/methods.ts","pages/Message/index.tsx","pages/Message/helper.ts","connector.tsx","components/LabelText.tsx","utils/index.ts"],"names":["Editor","props","theme","useTheme","isUp800","useMediaQuery","breakpoints","up","width","fontSize","showGutter","wrapEnabled","showPrintMargin","highlightActiveLine","enableBasicAutocompletion","enableLiveAutocompletion","tabSize","debounceChangePeriod","useStyles","makeStyles","paper","marginTop","spacing","marginBottom","padding","marginLeft","marginRight","PagePaper","children","classes","className","useInjectedWeb3Activate","useState","isAutoConnect","setIsAutoConnect","useWeb3React","active","activate","inject","useCallback","injectedNetwork","useEffect","isAuthorized","then","Flex","styled","display","Column","flexDirection","Row","SizedBox","justifyItems","alignItems","height","style","ExpandableHelperText","value","stripThreshold","isDialogOpen","setIsDialogOpen","isLongText","length","stripText","slice","FormHelperText","error","Link","component","onClick","color","underline","Dialog","scroll","open","onClose","DialogTitle","DialogContent","DialogContentText","MultiActionsSelector","selectedIndex","actions","onActionSelect","groupProps","React","openMenu","setOpenMenu","anchorEl","setAnchorEl","ButtonGroup","action","Button","e","target","currentTarget","Boolean","ArrowDropDown","Menu","keepMounted","map","index","MenuItem","selected","label","useStyle","container","bottomContainer","justifyContent","flexWrap","nodeInput","borderColor","borderRadius","actionBtn","TransactionView","rawTransactionHelperText","rawTransactionValue","onRawTransactionInputChange","jsonTransactionHelperText","jsonTransactionValue","onJsonTransactionInputChange","txidValue","senderAddressValue","nodeSelectedIndex","onNodeSelect","isWalletInjected","injectWallet","customNodeValue","onCustomNodeValueChange","actionBtnState","Typography","variant","align","name","placeholder","mode","onChange","TextField","multiline","maxRows","undefined","LabelText","id","FormHelperTextProps","InputProps","normalizedTransactionKeys","chain_id","gas_limit","gas","gas_price","access_list","max_priority_fee_per_gas","max_fee_per_gas","input","asHexNumber","BigNumber","from","toString","toHexString","asNumber","parseInt","normalizedTransactionValues","hash","addHexPrefix","to","nonce","gasLimit","Math","max","gasPrice","data","chainId","type","maxPriorityFeePerGas","maxFeePerGas","r","s","v","allowedUnsignedTransactionKeys","allowedSignatureKeys","allowedTransactionKeys","normalizedTransaction","maybe_transaction","Object","fromEntries","entries","filter","isMeaninglessValue","key","includes","serializeTransaction","maybeTransaction","transaction","signature","keys","exportSignature","unSignedTransaction","serialize","deserializeTransaction","rawTransaction","parse","ExplorerUrlsForTx","DEFAULT_ACTION_BTN_STATE","disabled","renderActionBtnState","provider","onTransactionSigned","a","signed","txid","payload","btnState","getNetwork","network","send","tx","console","log","window","replace","Web3Provider","getSigner","sendTransaction","assign","Transaction","setJsonTransactionValue","setJsonTransactionHelperText","setRawTransactionValue","setRawTransactionHelperText","txSnapshot","setTxSnapshot","setNodeSelectedIndex","injectedProvider","library","isAutoConnectWallet","doActivateInjected","setCustomNodeValue","useMemo","createBackupProvider","url","URL","protocol","isValidUrl","JsonRpcProvider","setActionBtnState","updateTransaction","source","trim","JSON","jsonTransaction","senderAddress","sender","prettify","onTransactionEditorChange","catch","message","cancelled","CircularProgress","size","stringify","drawer","drawerPaper","drawerHeader","mixins","toolbar","menuItem","PagesDrawer","menus","onDrawerItemClick","isDown800","down","drawerProps","anchor","Drawer","text","ListItem","button","divider","ListItemText","primary","Divider","appBar","position","main","DRAWER_MENU","Pagers","Message","require","default","MyAppBar","onDrawerBtnClick","AppBar","Toolbar","IconButton","edge","noWrap","App","isDrawerOpening","setIsDrawerOpening","Page","setPage","CssBaseline","prevState","ReactDOM","render","StrictMode","document","getElementById","options","margin","caseGroup","bottomButtonGroup","MessageEditorView","methodOptions","selectedMethod","onMethodSelected","cases","checkIsTargetMessage","hashMessage","isWalletEnabled","connectedAccount","connectWallet","onSign","preferJsonStringMessage","messageValue","setMessageValue","messageHashValue","setMessageHashValue","signatureValue","setSignatureValue","disabledSignBtn","setDisabledSignBtn","recoveredAddress","setRecoveredAddress","setMessageValueWrapper","formattedMessage","onSignButtonClick","messageHash","easyCheckMessageHash","hashIt","Select","event","method","tag","Chip","onTagClick","DEMO_TYPED_DATA_01","DEMO_TYPED_DATA_02","DEMO_TYPED_DATA_03","Methods","eth_sign","Promise","resolve","signMessage","account","response","result","personal_sign","ethUtil","typed_data_sign","easyCheckLegacyEIP712Struct","signUtil","isMetaMask","typed_data_sign_v1","typed_data_sign_v3","easyCheckStandardEIP712Struct","sign","typed_data_sign_v4","recoverAddress","hashBuffer","sigBuffer","assert","public_key","MessageEditor","web3","setSelectedMethod","snackBarState","setSnackBarState","easyCheckSignature","toLowerCase","isPositive","stringifyProviderError","isOpening","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","severity","startsWith","Buffer","endsWith","struct","Array","isArray","every","i","required","errorType","Web3ProviderNetwork","createWeb3ReactRoot","ethereum","autoRefreshOnNetworkChange","process","allowGzip","getLibrary","InjectedConnector","Web3Root","format","Error"],"mappings":"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","file":"static/js/main.74e98a78.chunk.js","sourcesContent":["import AceEditor from 'react-ace';\nimport { IAceEditorProps } from 'react-ace/lib/ace';\nimport 'ace-builds/src-noconflict/mode-json';\nimport 'ace-builds/src-noconflict/theme-tomorrow_night_eighties';\nimport { useMediaQuery, useTheme } from '@material-ui/core';\n\nconst Editor = (props: IAceEditorProps) => {\n  const theme = useTheme();\n  const isUp800 = useMediaQuery(theme.breakpoints.up(800));\n\n  return (\n    <AceEditor\n      width={'100%'}\n      fontSize={14}\n      showGutter={isUp800}\n      wrapEnabled\n      showPrintMargin\n      highlightActiveLine\n      enableBasicAutocompletion\n      enableLiveAutocompletion\n      tabSize={2}\n      debounceChangePeriod={600}\n      {...props}\n    />\n  );\n};\n\nexport default Editor;\n","import { makeStyles, Paper } from '@material-ui/core';\nimport { PaperProps } from '@material-ui/core/Paper/Paper';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(800 + theme.spacing(2) * 2)]: {\n      width: 800,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n}));\n\nconst PagePaper = ({ children, ...props }: PaperProps) => {\n  const classes = useStyles();\n  return (\n    <Paper className={classes.paper} {...props}>\n      {children}\n    </Paper>\n  );\n};\n\nexport default PagePaper;\n","import { useWeb3React } from '@web3-react/core';\nimport { useCallback, useEffect, useState } from 'react';\nimport { injectedNetwork } from '../connector';\n\nexport const useInjectedWeb3Activate = (): [boolean, () => void] => {\n  const [isAutoConnect, setIsAutoConnect] = useState<boolean>(false);\n  const { active, activate } = useWeb3React();\n\n  const inject = useCallback(() => {\n    if (active) {\n      return;\n    }\n\n    return activate(injectedNetwork);\n  }, [active, activate]);\n\n  useEffect(() => {\n    injectedNetwork.isAuthorized().then((isAuthorized) => {\n      if (isAuthorized) {\n        inject()?.then(() => setIsAutoConnect(true));\n      }\n    });\n  }, [inject]);\n\n  return [isAutoConnect, inject];\n};\n","import { styled } from '@material-ui/core';\n\nconst Flex = styled('div')({\n  display: 'flex',\n});\n\nconst Column = styled(Flex)({\n  flexDirection: 'column',\n});\n\nconst Row = styled(Flex)({\n  flexDirection: 'row',\n});\n\nconst Center = styled(Flex)({\n  justifyItems: 'center',\n  alignItems: 'center',\n});\n\nconst SizedBox = ({ width, height }: { width?: any; height?: any }) => (\n  <div style={{ width, height }} />\n);\n\nexport { Flex, Column, Row, Center, SizedBox };\n","import { Row, SizedBox } from './basic';\nimport {\n  Dialog,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormHelperText,\n  Link,\n} from '@material-ui/core';\nimport { useState } from 'react';\n\nconst ExpandableHelperText = ({\n  value,\n  stripThreshold = 50,\n}: {\n  value: string | undefined;\n  stripThreshold?: number;\n}) => {\n  const [isDialogOpen, setIsDialogOpen] = useState<boolean>(false);\n  const isLongText = value && value.length >= stripThreshold;\n  const stripText = isLongText\n    ? value?.slice(0, stripThreshold) + '...'\n    : value;\n\n  return (\n    <>\n      {value && (\n        <FormHelperText error>\n          <Row>\n            {stripText}\n            {isLongText && (\n              <>\n                <SizedBox width={3} />\n                <Link\n                  component=\"button\"\n                  onClick={() => setIsDialogOpen(true)}\n                  color={'inherit'}\n                  underline={'always'}\n                  aria-label={value}\n                >\n                  more\n                </Link>\n                <Dialog\n                  scroll={'paper'}\n                  open={isDialogOpen}\n                  onClose={() => setIsDialogOpen(false)}\n                >\n                  <DialogTitle>Error</DialogTitle>\n                  <DialogContent>\n                    <DialogContentText>{value}</DialogContentText>\n                  </DialogContent>\n                </Dialog>\n              </>\n            )}\n          </Row>\n        </FormHelperText>\n      )}\n    </>\n  );\n};\n\nexport default ExpandableHelperText;\n","import {\n  Button,\n  ButtonGroup,\n  ButtonGroupProps,\n  Menu,\n  MenuItem,\n} from '@material-ui/core';\nimport { ArrowDropDown } from '@material-ui/icons';\nimport React from 'react';\n\nexport interface MultiActionType {\n  label: string;\n  action: JSX.Element;\n}\n\nconst MultiActionsSelector = ({\n  selectedIndex,\n  actions,\n  onActionSelect,\n  groupProps,\n}: {\n  selectedIndex: number;\n  actions: Array<MultiActionType>;\n  onActionSelect: (action: MultiActionType, index: number) => void;\n  groupProps?: ButtonGroupProps;\n}) => {\n  const [openMenu, setOpenMenu] = React.useState(false);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  // const [selectedIndex, setSelectedIndex] = useState<number>(0);\n\n  return (\n    <ButtonGroup {...groupProps}>\n      {actions[selectedIndex].action}\n      <Button\n        onClick={(e) => {\n          const target = e.currentTarget;\n          setAnchorEl(target);\n          setOpenMenu(Boolean(target));\n        }}\n      >\n        <ArrowDropDown />\n      </Button>\n      <Menu\n        keepMounted\n        anchorEl={anchorEl}\n        open={openMenu}\n        onClose={() => setOpenMenu(false)}\n      >\n        {actions.map((action, index) => (\n          <MenuItem\n            key={action.label}\n            selected={index === selectedIndex}\n            onClick={() => {\n              onActionSelect(action, index);\n              setOpenMenu(false);\n            }}\n          >\n            {action.label}\n          </MenuItem>\n        ))}\n      </Menu>\n    </ButtonGroup>\n  );\n};\n\nexport default MultiActionsSelector;\n","import { Column, Row, SizedBox } from '../../components/basic';\nimport { Button, makeStyles, TextField, Typography } from '@material-ui/core';\nimport PagePaper from '../../components/PagePaper';\nimport Editor from '../../components/Editor';\nimport LabelText from '../../components/LabelText';\nimport SwapVertIcon from '@material-ui/icons/SwapVert';\nimport ExpandableHelperText from '../../components/ExpandableHelperText';\nimport MultiActionsSelector from '../../components/MultiActionsSelector';\n\nconst DEMO_TRANSACTION_JSON = `\n// Input json format transaction here like this:\n{\n  \"nonce\": 0,\n  \"gasPrice\": \"0x0df8475800\",\n  \"gasLimit\": \"0x0186a0\",\n  \"to\": \"0x3535353535353535353535353535353535353535\",\n  \"value\": \"0x64\",\n  \"data\": \"0x\",\n  \"chainId\": 0,\n  \"v\": 27,\n  \"r\": \"0x82de9950cc5aac0dca7210cb4b77320ac9e844717d39b1781e9d941d920a1206\",\n  \"s\": \"0x1da497b3c134f50b2fce514d66e20c5e43f9615f097395a5527041d14860a52f\"\n}\n`;\nconst DEMO_RAW_TRANSACTION = `\n// or hex string raw transaction like this:\n0xf86580850df8475800830186a094353535353535353535353535353535353535353564801ba082de9950cc5aac0dca7210cb4b77320ac9e844717d39b1781e9d941d920a1206a01da497b3c134f50b2fce514d66e20c5e43f9615f097395a5527041d14860a52f\n`;\n\nconst useStyle = makeStyles((theme) => ({\n  container: {\n    alignItems: 'center',\n    '& > *': {\n      width: '100%',\n    },\n  },\n  bottomContainer: {\n    justifyContent: 'flex-end',\n    flexWrap: 'wrap',\n    '& > *': {\n      marginBottom: '8px',\n    },\n  },\n  nodeInput: {\n    height: '40px',\n    borderColor: 'transparent',\n    borderRadius: 0,\n  },\n  actionBtn: {\n    marginLeft: '16px',\n  },\n}));\n\nexport interface ActionBtnState {\n  children: JSX.Element | string;\n  disabled?: boolean;\n  onClick?: () => void;\n}\n\nexport interface TransactionViewProps {\n  rawTransactionValue: string;\n  onRawTransactionInputChange: (value: string) => void;\n  rawTransactionHelperText?: string;\n\n  jsonTransactionHelperText?: string;\n  jsonTransactionValue: string;\n  onJsonTransactionInputChange: (value: string) => void;\n\n  txidValue: string;\n  senderAddressValue: string;\n\n  nodeSelectedIndex: number;\n  onNodeSelect: (index: number) => void;\n  isWalletInjected: boolean;\n  chainIdOnEnv?: number;\n  injectWallet: () => void;\n  customNodeValue: string;\n  onCustomNodeValueChange: (value: string) => void;\n  actionBtnState: ActionBtnState;\n}\n\nconst TransactionView = ({\n  rawTransactionHelperText,\n  rawTransactionValue,\n  onRawTransactionInputChange,\n  jsonTransactionHelperText,\n  jsonTransactionValue,\n  onJsonTransactionInputChange,\n  txidValue,\n  senderAddressValue,\n  nodeSelectedIndex,\n  onNodeSelect,\n  isWalletInjected,\n  injectWallet,\n  customNodeValue,\n  onCustomNodeValueChange,\n  actionBtnState,\n}: TransactionViewProps) => {\n  const classes = useStyle();\n\n  return (\n    <PagePaper>\n      <Column className={classes.container}>\n        <Typography component={'h1'} variant={'h4'} align={'center'}>\n          Transaction\n        </Typography>\n\n        <SizedBox height={32} />\n\n        <Editor\n          name={'transaction_editor'}\n          placeholder={DEMO_TRANSACTION_JSON}\n          mode={'json'}\n          theme={'tomorrow_night_eighties'}\n          value={jsonTransactionValue}\n          onChange={onJsonTransactionInputChange}\n          aria-describedby=\"transaction_editor_helper_text\"\n        />\n        {jsonTransactionHelperText && (\n          <ExpandableHelperText value={jsonTransactionHelperText} />\n        )}\n\n        <SizedBox height={3} />\n        <SwapVertIcon color={'disabled'} />\n        <SizedBox height={3} />\n\n        <TextField\n          error={!!rawTransactionHelperText}\n          multiline\n          maxRows={5}\n          variant={'outlined'}\n          label={\n            rawTransactionValue && rawTransactionValue.length > 0\n              ? 'Raw Transaction'\n              : undefined\n          }\n          placeholder={DEMO_RAW_TRANSACTION}\n          value={rawTransactionValue}\n          onChange={(e) => onRawTransactionInputChange(e.target.value)}\n        />\n        {rawTransactionHelperText && (\n          <ExpandableHelperText value={rawTransactionHelperText} />\n        )}\n\n        <SizedBox height={16} />\n        <LabelText\n          id={'txid'}\n          FormHelperTextProps={{ variant: 'standard' }}\n          value={txidValue}\n          label={'Txid'}\n        />\n        <SizedBox height={8} />\n        <LabelText\n          id={'sender_address'}\n          value={senderAddressValue}\n          label={'Sender Address'}\n        />\n        <SizedBox height={16} />\n\n        <Row className={classes.bottomContainer}>\n          <MultiActionsSelector\n            selectedIndex={nodeSelectedIndex}\n            onActionSelect={(action, index) => onNodeSelect(index)}\n            actions={[\n              {\n                label: 'Default ETH Mainnet',\n                action: <Button>ETH Mainnet</Button>,\n              },\n              {\n                label: 'Connect Wallet',\n                action: (\n                  <Button onClick={injectWallet}>\n                    {isWalletInjected ? 'Connected' : 'Connect Wallet'}\n                  </Button>\n                ),\n              },\n              {\n                label: 'Custom',\n                action: (\n                  <TextField\n                    variant={'outlined'}\n                    value={customNodeValue}\n                    placeholder={'https://my_rpc_node.com'}\n                    onChange={(e) => onCustomNodeValueChange(e.target.value)}\n                    InputProps={{\n                      className: classes.nodeInput,\n                    }}\n                  />\n                ),\n              },\n            ]}\n            groupProps={{\n              variant: 'contained',\n              color: 'primary',\n            }}\n          />\n          <Button\n            className={classes.actionBtn}\n            variant={'contained'}\n            color={'secondary'}\n            {...actionBtnState}\n          />\n        </Row>\n      </Column>\n    </PagePaper>\n  );\n};\n\nexport default TransactionView;\n","import {\n  serialize,\n  parse,\n  Transaction,\n  UnsignedTransaction,\n} from '@ethersproject/transactions';\nimport { Signature } from '@ethersproject/bytes/src.ts/index';\nimport { addHexPrefix } from 'ethereumjs-util';\nimport { BigNumber } from '@ethersproject/bignumber';\n\nconst normalizedTransactionKeys: { [key: string]: string } = {\n  chain_id: 'chainId',\n  gas_limit: 'gasLimit',\n  gas: 'gasLimit',\n  gas_price: 'gasPrice',\n  access_list: 'accessList',\n  max_priority_fee_per_gas: 'maxPriorityFeePerGas',\n  max_fee_per_gas: 'maxFeePerGas',\n  input: 'data',\n};\n\nconst asHexNumber = (value: number | string | undefined): string =>\n  typeof value === 'undefined'\n    ? '0x00'\n    : BigNumber.from(\n        typeof value === 'number' ? value.toString() : value,\n      ).toHexString();\n\nconst asNumber = (value: number | string | undefined): number =>\n  parseInt(asHexNumber(value), 16);\n\nconst normalizedTransactionValues: {\n  [key: string]: (value: any) => any;\n} = {\n  hash: addHexPrefix,\n  from: addHexPrefix,\n  to: addHexPrefix,\n  nonce: asNumber,\n  gasLimit: (value) => asHexNumber(Math.max(21000, asNumber(value))),\n  gasPrice: asHexNumber,\n  data: addHexPrefix,\n  value: asHexNumber,\n  chainId: asNumber,\n  type: asNumber,\n  maxPriorityFeePerGas: asHexNumber,\n  maxFeePerGas: asHexNumber,\n  r: addHexPrefix,\n  s: addHexPrefix,\n  v: asNumber,\n};\n\nconst allowedUnsignedTransactionKeys: Array<string> = [\n  'to',\n  'nonce',\n  'gasLimit',\n  'gasPrice',\n  'data',\n  'value',\n  'chainId',\n  'type',\n  'accessList',\n  'maxPriorityFeePerGas',\n  'maxFeePerGas',\n];\n\nconst allowedSignatureKeys: Array<string> = ['r', 's', 'v'];\n\nconst allowedTransactionKeys: Array<string> = [\n  ...allowedUnsignedTransactionKeys,\n  ...allowedSignatureKeys,\n  'hash',\n  'from',\n];\n\nconst isMeaninglessValue = (value: any) =>\n  typeof value === 'undefined' ||\n  value === null ||\n  (typeof value === 'string' && value.length === 0);\n\nconst normalizedTransaction = (maybe_transaction: object): Transaction => {\n  const transaction = Object.fromEntries(\n    Object.entries(maybe_transaction)\n      .filter(([_, value]) => !isMeaninglessValue(value))\n      .map(([key, value]): [string, any] => [\n        key in normalizedTransactionKeys ? normalizedTransactionKeys[key] : key,\n        key in normalizedTransactionValues\n          ? normalizedTransactionValues[key](value)\n          : value,\n      ])\n      .filter(([key, _]) => allowedTransactionKeys.includes(key)),\n  );\n  return transaction as Transaction;\n};\n\nconst exportSignature = (transaction: Transaction): Signature | undefined => {\n  let signature: Signature | undefined = Object.fromEntries(\n    Object.entries(transaction).filter(([key, _]) =>\n      allowedSignatureKeys.includes(key),\n    ),\n  ) as Signature;\n\n  if (Object.keys(signature).length !== allowedSignatureKeys.length) {\n    signature = undefined;\n  }\n  return signature;\n};\n\nexport const serializeTransaction = (\n  maybeTransaction: object,\n): string | undefined => {\n  const transaction = normalizedTransaction(maybeTransaction);\n  const signature: Signature | undefined = exportSignature(transaction);\n\n  const unSignedTransaction = Object.fromEntries(\n    Object.entries(transaction).filter(([key, _]) =>\n      allowedUnsignedTransactionKeys.includes(key),\n    ),\n  ) as UnsignedTransaction;\n\n  return serialize(unSignedTransaction, signature);\n};\n\nexport const deserializeTransaction = (rawTransaction: string) =>\n  normalizedTransaction(parse(rawTransaction));\n\nexport const ExplorerUrlsForTx: { [key: number]: string } = {\n  1: 'https://etherscan.io/tx/{0}',\n  3: 'https://ropsten.etherscan.io/tx/{0}',\n  56: 'https://bscscan.com/tx/{0}',\n  97: 'https://testnet.bscscan.com/tx/{0}',\n  128: 'https://hecoinfo.com/tx/{0}',\n  256: 'https://testnet.hecoinfo.com/{0}',\n};\n","import TransactionView, { ActionBtnState } from './view';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { prettify } from '../../utils';\nimport {\n  serializeTransaction,\n  deserializeTransaction,\n  ExplorerUrlsForTx,\n} from './helper';\nimport { addHexPrefix } from 'ethereumjs-util';\nimport { useInjectedWeb3Activate } from '../../hooks';\nimport { useWeb3React } from '@web3-react/core';\nimport { createBackupProvider } from '../../connector';\nimport {\n  JsonRpcProvider,\n  Network,\n  Web3Provider,\n} from '@ethersproject/providers';\nimport { CircularProgress } from '@material-ui/core';\n\nconst DEFAULT_ACTION_BTN_STATE: ActionBtnState = {\n  disabled: true,\n  children: 'Pending',\n};\n\ninterface TxSnapshot {\n  txid?: string;\n  chainId?: number;\n  signed?: boolean;\n  sender?: string;\n  payload: object;\n}\n\nconst isValidUrl = (value: string): boolean => {\n  let url: URL | undefined;\n  try {\n    url = new URL(value);\n  } catch {}\n\n  return url?.protocol === 'http:' || url?.protocol === 'https:';\n};\n\nconst renderActionBtnState = async (\n  provider: any,\n  { signed, txid, chainId, payload }: TxSnapshot,\n  onTransactionSigned: (tx: any) => void,\n): Promise<ActionBtnState> => {\n  let btnState: ActionBtnState | undefined = undefined;\n  const network: Network = await provider.getNetwork();\n\n  if (signed) {\n    if (chainId !== network.chainId) {\n      btnState = {\n        disabled: true,\n        children: 'ChainId Mismatched',\n      };\n    } else if (txid) {\n      const tx = await provider.send('eth_getTransactionByHash', [txid]);\n      console.log('fetch tx: ', tx);\n      if (typeof tx === 'object' && tx !== null && tx.hash === txid) {\n        btnState = {\n          disabled: false,\n          children: 'Transaction Found!',\n          onClick: () =>\n            window.open(\n              (ExplorerUrlsForTx[chainId as number] || '{0}').replace(\n                '{0}',\n                txid as string,\n              ),\n            ),\n        };\n      }\n    }\n\n    if (!btnState) {\n      btnState = {\n        disabled: false,\n        children: 'Broadcast',\n        onClick: () =>\n          provider.send('eth_sendRawTransaction', [\n            serializeTransaction(payload),\n          ]),\n      };\n    }\n  } else if (provider instanceof Web3Provider) {\n    btnState = {\n      disabled: false,\n      children: 'Sign & Broadcast',\n      onClick: () =>\n        provider\n          .getSigner()\n          .sendTransaction(\n            Object.assign(payload, {\n              chainId: network.chainId,\n            }),\n          )\n          .then((tx) =>\n            onTransactionSigned(\n              Object.assign(tx, { chainId: network.chainId }),\n            ),\n          ),\n    };\n  }\n\n  return btnState || DEFAULT_ACTION_BTN_STATE;\n};\n\nconst Transaction = () => {\n  const [jsonTransactionValue, setJsonTransactionValue] = useState<string>('');\n  const [jsonTransactionHelperText, setJsonTransactionHelperText] = useState<\n    string | undefined\n  >();\n  const [rawTransactionValue, setRawTransactionValue] = useState<string>('');\n  const [rawTransactionHelperText, setRawTransactionHelperText] = useState<\n    string | undefined\n  >();\n  const [txSnapshot, setTxSnapshot] = useState<undefined | TxSnapshot>();\n\n  const [nodeSelectedIndex, setNodeSelectedIndex] = useState<number>(0);\n  const { active: isWalletInjected, library: injectedProvider } =\n    useWeb3React();\n  const [isAutoConnectWallet, doActivateInjected] = useInjectedWeb3Activate();\n  const [customNodeValue, setCustomNodeValue] = useState<string>('');\n  const provider = useMemo((): any | undefined => {\n    if (nodeSelectedIndex === 0) {\n      return createBackupProvider();\n    } else if (nodeSelectedIndex === 1) {\n      return injectedProvider;\n    } else if (nodeSelectedIndex === 2 && isValidUrl(customNodeValue)) {\n      return new JsonRpcProvider({ url: customNodeValue });\n    }\n  }, [nodeSelectedIndex, injectedProvider, customNodeValue]);\n\n  const [actionBtnState, setActionBtnState] = useState<ActionBtnState>(\n    DEFAULT_ACTION_BTN_STATE,\n  );\n\n  const updateTransaction = async (\n    value: string,\n    source: 'json_tx' | 'raw_tx',\n  ) => {\n    console.log('updateTransaction: ', value);\n    let rawTransaction: string | undefined;\n\n    if (source === 'raw_tx') {\n      rawTransaction = addHexPrefix(value.trim());\n    } else if (value) {\n      const maybe_transaction = JSON.parse(value);\n      rawTransaction = serializeTransaction(maybe_transaction);\n    }\n\n    if (!rawTransaction) {\n      setTxSnapshot(undefined);\n      return;\n    }\n\n    const jsonTransaction = deserializeTransaction(rawTransaction);\n    const txid = jsonTransaction.hash;\n    const senderAddress = jsonTransaction.from;\n\n    txid && delete jsonTransaction.hash;\n    senderAddress && delete jsonTransaction.from;\n\n    const txSnapshot = {\n      txid,\n      chainId: jsonTransaction.chainId,\n      signed: Boolean(\n        jsonTransaction.r && jsonTransaction.s && jsonTransaction.v,\n      ),\n      sender: senderAddress,\n      payload: jsonTransaction,\n    };\n\n    setRawTransactionHelperText(undefined);\n    setRawTransactionValue(rawTransaction);\n    setJsonTransactionHelperText(undefined);\n    setJsonTransactionValue(prettify(jsonTransaction, 'json'));\n    setTxSnapshot(txSnapshot);\n  };\n\n  const onTransactionEditorChange = useCallback(\n    (value: string) => {\n      if (value !== jsonTransactionValue) {\n        updateTransaction(value, 'json_tx').catch((e: Error) => {\n          console.error(e);\n          try {\n            value = prettify(value, 'json');\n          } catch {}\n          setJsonTransactionValue(value);\n          setJsonTransactionHelperText(e?.message);\n        });\n      } else if (!value) {\n        setJsonTransactionValue(value);\n        setJsonTransactionHelperText(undefined);\n      }\n    },\n    [jsonTransactionValue],\n  );\n\n  const onRawTransactionInputChange = (value: string) => {\n    if (value) {\n      updateTransaction(value, 'raw_tx').catch((e: Error) => {\n        console.error(e);\n        setRawTransactionHelperText(e?.message);\n        setRawTransactionValue(value);\n      });\n    } else {\n      setRawTransactionValue(value);\n      setRawTransactionHelperText(undefined);\n    }\n  };\n\n  useEffect(() => {\n    let cancelled: boolean = false;\n\n    console.log('useEffect: ', provider, txSnapshot);\n    if (typeof provider !== 'undefined' && typeof txSnapshot !== 'undefined') {\n      setActionBtnState({\n        disabled: false,\n        children: <CircularProgress color={'inherit'} size={24} />,\n      });\n      renderActionBtnState(\n        provider,\n        txSnapshot,\n        (tx) => !cancelled && onTransactionEditorChange(JSON.stringify(tx)),\n      )\n        .then((value) => !cancelled && setActionBtnState(() => value))\n        .catch(console.error);\n    } else {\n      setActionBtnState(DEFAULT_ACTION_BTN_STATE);\n    }\n\n    return () => {\n      cancelled = true;\n    };\n  }, [provider, txSnapshot, onTransactionEditorChange]);\n\n  useEffect(() => {\n    if (isAutoConnectWallet) {\n      setNodeSelectedIndex(1);\n    }\n  }, [isAutoConnectWallet]);\n\n  return (\n    <TransactionView\n      rawTransactionHelperText={rawTransactionHelperText}\n      rawTransactionValue={rawTransactionValue}\n      onRawTransactionInputChange={onRawTransactionInputChange}\n      jsonTransactionHelperText={jsonTransactionHelperText}\n      jsonTransactionValue={jsonTransactionValue}\n      onJsonTransactionInputChange={onTransactionEditorChange}\n      txidValue={txSnapshot?.txid || ''}\n      senderAddressValue={txSnapshot?.sender || ''}\n      nodeSelectedIndex={nodeSelectedIndex}\n      onNodeSelect={setNodeSelectedIndex}\n      isWalletInjected={isWalletInjected}\n      injectWallet={doActivateInjected}\n      customNodeValue={customNodeValue}\n      onCustomNodeValueChange={setCustomNodeValue}\n      actionBtnState={actionBtnState}\n    />\n  );\n};\n\nexport default Transaction;\n","import {\n  Divider,\n  Drawer,\n  ListItem,\n  ListItemText,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core';\nimport React, { useMemo } from 'react';\nimport { SizedBox } from './basic';\nimport { DrawerProps } from '@material-ui/core/Drawer/Drawer';\n\nconst DRAWER_WIDTH = 240;\nconst useStyle = makeStyles((theme) => ({\n  drawer: {},\n  drawerPaper: {\n    marginTop: theme.spacing(8),\n    width: DRAWER_WIDTH,\n    height: 300,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  menuItem: {\n    height: theme.spacing(8),\n  },\n}));\n\nconst PagesDrawer = ({\n  menus,\n  open,\n  onDrawerItemClick,\n  onClose,\n}: {\n  menus: Array<string>;\n  open: boolean;\n  onDrawerItemClick: (text: string, index: number) => void;\n  onClose: VoidFunction;\n}) => {\n  const classes = useStyle();\n  const theme = useTheme();\n  const isDown800 = useMediaQuery(theme.breakpoints.down(800));\n\n  const drawerProps = useMemo<DrawerProps>(() => {\n    if (isDown800) {\n      return {\n        anchor: 'bottom',\n      };\n    } else {\n      return {\n        anchor: 'left',\n        className: classes.drawer,\n        classes: { paper: classes.drawerPaper },\n      };\n    }\n  }, [classes, isDown800]);\n\n  return (\n    <Drawer open={open} onClose={onClose} {...drawerProps}>\n      {menus.map((text, index) => (\n        <ListItem\n          className={classes.menuItem}\n          button\n          key={text}\n          onClick={() => onDrawerItemClick(text, index)}\n          divider={!isDown800}\n        >\n          <ListItemText primary={text} />\n        </ListItem>\n      ))}\n\n      {isDown800 && <Divider />}\n      <SizedBox height={theme.spacing(6)} />\n    </Drawer>\n  );\n};\n\nexport default PagesDrawer;\n","import {\n  AppBar,\n  CssBaseline,\n  IconButton,\n  makeStyles,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\nimport React, { useState } from 'react';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport PagesDrawer from './components/PagesDrawer';\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    color: 'default',\n    position: 'relative',\n  },\n  main: {\n    width: 'auto',\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst DRAWER_MENU = ['Message', 'Transaction'];\nconst DEFAULT_PAGE = 'Message';\n\nconst Pagers: { [key: string]: React.FC } = {\n  Message: () => require('./pages/Message/index').default,\n  Transaction: () => require('./pages/Transaction/index').default,\n};\n\nconst MyAppBar = ({ onDrawerBtnClick }: { onDrawerBtnClick: VoidFunction }) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar className={classes.appBar}>\n      <Toolbar>\n        <IconButton\n          color={'inherit'}\n          aria-label={'open drawer'}\n          onClick={onDrawerBtnClick}\n          edge={'start'}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography variant={'h6'} color={'inherit'} noWrap>\n          Ethereum Utils\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nconst App = () => {\n  const classes = useStyles();\n  const [isDrawerOpening, setIsDrawerOpening] = useState<boolean>(false);\n  const [Page, setPage] = useState<React.FC>(Pagers[DEFAULT_PAGE]);\n\n  return (\n    <>\n      <CssBaseline />\n      <MyAppBar\n        onDrawerBtnClick={() => setIsDrawerOpening((prevState) => !prevState)}\n      />\n      <PagesDrawer\n        menus={DRAWER_MENU}\n        open={isDrawerOpening}\n        onClose={() => setIsDrawerOpening(() => false)}\n        onDrawerItemClick={(text) => {\n          setPage((Pagers as any)[text]);\n          setIsDrawerOpening(false);\n        }}\n      />\n      <main className={classes.main}>\n        <Page />\n      </main>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Web3Root from './connector';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Web3Root>\n      <App />\n    </Web3Root>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import {\n  Button,\n  Chip,\n  makeStyles,\n  MenuItem,\n  Select,\n  Typography,\n} from '@material-ui/core';\nimport { Column, Row, SizedBox } from '../../components/basic';\nimport { useCallback, useEffect, useState } from 'react';\nimport { easyCheckMessageHash } from './helper';\nimport Editor from '../../components/Editor';\nimport LabelText from '../../components/LabelText';\nimport PagePaper from '../../components/PagePaper';\nimport { prettify } from '../../utils';\n\nexport interface MessageViewProps {\n  methodOptions: Array<string>;\n  selectedMethod: string;\n  onMethodSelected: (method: string) => void;\n  cases: Array<{ name: string; value: string }>;\n  checkIsTargetMessage: (message: string) => boolean;\n  hashMessage: (message: string) => Promise<string>;\n  isWalletEnabled: boolean;\n  connectedAccount?: string | null;\n  connectWallet: () => void;\n  onSign: (message: string) => Promise<[string, string]>;\n  preferJsonStringMessage?: boolean;\n}\n\nconst useStyle = makeStyles((theme) => ({\n  container: {\n    padding: 0,\n  },\n  options: {\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    margin: theme.spacing(3, 0, 1),\n  },\n  caseGroup: {\n    flexWrap: 'wrap',\n    padding: 0,\n    marginBottom: theme.spacing(1),\n    '& > *': {\n      margin: theme.spacing(0.5),\n    },\n  },\n  bottomButtonGroup: {\n    justifyContent: 'flex-end',\n    padding: 0,\n  },\n}));\n\nexport const MessageEditorView = ({\n  methodOptions,\n  selectedMethod,\n  onMethodSelected,\n  cases,\n  checkIsTargetMessage,\n  hashMessage,\n  isWalletEnabled,\n  connectedAccount,\n  connectWallet,\n  onSign,\n  preferJsonStringMessage,\n}: MessageViewProps) => {\n  const classes = useStyle();\n  const [messageValue, setMessageValue] = useState<string>('');\n  const [messageHashValue, setMessageHashValue] = useState<string>('');\n  const [signatureValue, setSignatureValue] = useState<string>('');\n  const [disabledSignBtn, setDisabledSignBtn] = useState<boolean>(true);\n  const [recoveredAddress, setRecoveredAddress] = useState<string>('');\n\n  const setMessageValueWrapper = useCallback(\n    (message: string) => {\n      const formattedMessage = prettify(\n        message,\n        preferJsonStringMessage ? 'json' : 'text',\n      );\n\n      setMessageValue(formattedMessage);\n    },\n    [preferJsonStringMessage],\n  );\n\n  const onSignButtonClick = useCallback(async () => {\n    const [signature, recoveredAddress] = await onSign(messageValue);\n    setSignatureValue(signature);\n    setRecoveredAddress(recoveredAddress);\n  }, [messageValue, onSign]);\n\n  const onTagClick = (index: number) => {\n    const message = cases[index].value;\n    setMessageValueWrapper(message);\n  };\n\n  useEffect(() => {\n    if (cases[0].value) {\n      setMessageValueWrapper(cases[0].value);\n    }\n  }, [cases, setMessageValueWrapper]);\n\n  useEffect(() => {\n    const hashIt = async () => {\n      try {\n        let message = messageValue;\n        if (message && checkIsTargetMessage(message)) {\n          const messageHash: string = await hashMessage(message);\n\n          if (easyCheckMessageHash(messageHash)) {\n            setMessageHashValue(messageHash);\n            setDisabledSignBtn(false);\n          } else {\n            setDisabledSignBtn(true);\n          }\n        }\n      } catch (e) {\n        setDisabledSignBtn(true);\n        console.error('Error in hashing message', e);\n      }\n\n      setSignatureValue('');\n      setRecoveredAddress('');\n    };\n\n    hashIt().catch(console.error);\n  }, [checkIsTargetMessage, hashMessage, messageValue]);\n\n  return (\n    <PagePaper>\n      <Column className={classes.container}>\n        <Typography component={'h1'} variant={'h4'} align={'center'}>\n          Message\n        </Typography>\n\n        <Row className={classes.options}>\n          <Select\n            variant={'outlined'}\n            value={selectedMethod}\n            onChange={(event) => onMethodSelected(event.target.value as string)}\n          >\n            {methodOptions.map((method) => (\n              <MenuItem key={method} value={method}>\n                {method}\n              </MenuItem>\n            ))}\n          </Select>\n        </Row>\n\n        <Row className={classes.caseGroup}>\n          {cases.map((tag, index) => (\n            <Chip\n              size={'small'}\n              key={tag.name}\n              label={tag.name}\n              onClick={() => onTagClick(index)}\n            />\n          ))}\n        </Row>\n        <Editor\n          name={'message_editor'}\n          placeholder={'Input Message Here'}\n          mode={'json'}\n          theme={'tomorrow_night_eighties'}\n          value={messageValue}\n          onChange={setMessageValueWrapper}\n        />\n        <SizedBox height={10} />\n        <LabelText\n          id={'message_hash'}\n          value={messageHashValue}\n          label={'Message Hash'}\n        />\n        <SizedBox height={10} />\n        <LabelText\n          id={'signature'}\n          value={signatureValue}\n          label={'Signature'}\n        />\n        <SizedBox height={10} />\n        <LabelText\n          id={'recovered_address'}\n          value={recoveredAddress}\n          label={'Recovered Address'}\n          placeholder={'Please make sure the message and signature are correct'}\n        />\n        <SizedBox height={10} />\n        <Row className={classes.bottomButtonGroup}>\n          <Button\n            variant={'contained'}\n            color={'primary'}\n            disabled={isWalletEnabled}\n            onClick={connectWallet}\n          >\n            {isWalletEnabled && connectedAccount\n              ? `${connectedAccount.slice(0, 4)}...${connectedAccount.slice(\n                  -4,\n                )}`\n              : 'Connect'}\n          </Button>\n          <SizedBox width={16} />\n          <Button\n            variant={'contained'}\n            color={'secondary'}\n            disabled={disabledSignBtn || !isWalletEnabled}\n            onClick={onSignButtonClick}\n          >\n            SIGN\n          </Button>\n        </Row>\n      </Column>\n    </PagePaper>\n  );\n};\n","import {\n  easyCheckLegacyEIP712Struct,\n  easyCheckMessageHash,\n  easyCheckStandardEIP712Struct,\n} from './helper';\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types';\nimport * as ethUtil from 'ethereumjs-util';\nimport * as signUtil from 'eth-sig-util';\n\nexport interface MessageSignMethod {\n  name: string;\n  cases: Array<{ name: string; value: string }>;\n  preferJsonStringMessage?: boolean;\n  checkIsTargetMessage: (message: string) => boolean;\n  hashMessage: (message: string) => Promise<string>;\n  signMessage: (\n    web3: Web3ReactContextInterface,\n    message: string,\n  ) => Promise<string>;\n}\n\nconst DEMO_TYPED_DATA_01 =\n  '{\"types\":{\"EIP712Domain\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"chainId\",\"type\":\"uint256\"},{\"name\":\"verifyingContract\",\"type\":\"address\"}],\"Person\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"wallet\",\"type\":\"address\"}],\"Mail\":[{\"name\":\"from\",\"type\":\"Person\"},{\"name\":\"to\",\"type\":\"Person\"},{\"name\":\"contents\",\"type\":\"string\"}]},\"primaryType\":\"Mail\",\"domain\":{\"name\":\"Ether Mail\",\"version\":\"1\",\"chainId\":1,\"verifyingContract\":\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\"},\"message\":{\"from\":{\"name\":\"Cow\",\"wallet\":\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\"},\"to\":{\"name\":\"Bob\",\"wallet\":\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\"},\"contents\":\"Hello, Bob!\"}}';\nconst DEMO_TYPED_DATA_02 =\n  '{\"types\":{\"EIP712Domain\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"chainId\",\"type\":\"uint256\"},{\"name\":\"verifyingContract\",\"type\":\"address\"}],\"Person\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"wallet\",\"type\":\"address\"}],\"Mail\":[{\"name\":\"from\",\"type\":\"Person\"},{\"name\":\"to\",\"type\":\"Person\"},{\"name\":\"contents\",\"type\":\"string\"},{\"name\":\"payload\",\"type\":\"bytes\"}]},\"primaryType\":\"Mail\",\"domain\":{\"name\":\"Ether Mail\",\"version\":\"1\",\"chainId\":1,\"verifyingContract\":\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\"},\"message\":{\"from\":{\"name\":\"Cow\",\"wallet\":\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\"},\"to\":{\"name\":\"Bob\",\"wallet\":\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\"},\"contents\":\"Hello, Bob!\",\"payload\":\"0x25192142931f380985072cdd991e37f65cf8253ba7a0e675b54163a1d133b8ca\"}}';\nconst DEMO_TYPED_DATA_03 =\n  '{\"types\":{\"EIP712Domain\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"chainId\",\"type\":\"uint256\"},{\"name\":\"verifyingContract\",\"type\":\"address\"}],\"Person\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"mother\",\"type\":\"Person\"},{\"name\":\"father\",\"type\":\"Person\"}]},\"domain\":{\"name\":\"Family Tree\",\"version\":\"1\",\"chainId\":1,\"verifyingContract\":\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\"},\"primaryType\":\"Person\",\"message\":{\"name\":\"Jon\",\"mother\":{\"name\":\"Lyanna\",\"father\":{\"name\":\"Rickard\"}},\"father\":{\"name\":\"Rhaegar\",\"father\":{\"name\":\"Aeris II\"}}}}';\n\nexport const Methods: { [key: string]: MessageSignMethod } = {\n  eth_sign: {\n    name: 'eth_sign',\n    cases: [\n      {\n        name: 'Demo 1',\n        value:\n          '0x0000000000000000000000000000000000000000000000000000000000000000',\n      },\n      {\n        name: 'Demo 2',\n        value:\n          '0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF',\n      },\n    ],\n    checkIsTargetMessage: easyCheckMessageHash,\n    hashMessage: async (message: string): Promise<string> =>\n      Promise.resolve(message),\n    signMessage: (\n      { account, library }: Web3ReactContextInterface,\n      message: string,\n    ): Promise<string> =>\n      library\n        .getSigner(account)\n        .provider.provider.send('eth_sign', [account, message])\n        .then((response: any) => response?.result || response),\n  },\n  personal_sign: {\n    name: 'personal_sign',\n    cases: [\n      { name: 'Hello OneKey', value: 'Hello OneKey' },\n      { name: 'To Da Moon', value: 'To Da Moon' },\n    ],\n    checkIsTargetMessage: (message: string | undefined): boolean =>\n      typeof message === 'string' && message.length > 0,\n    hashMessage: async (message: string): Promise<string> =>\n      ethUtil.addHexPrefix(\n        ethUtil.hashPersonalMessage(ethUtil.toBuffer(message)).toString('hex'),\n      ),\n    signMessage: (\n      { account, library }: Web3ReactContextInterface,\n      message: string,\n    ): Promise<string> =>\n      library\n        .getSigner(account)\n        .provider.send('personal_sign', [account, message])\n        .then((response: any) => response?.result || response),\n  },\n  typed_data_sign: {\n    name: 'typed_data_sign',\n    cases: [\n      {\n        name: 'Single Value',\n        value: '[{\"type\":\"string\",\"name\":\"message\",\"value\":\"Hi, Alice!\"}]',\n      },\n      {\n        name: 'Multiple values',\n        value:\n          '[{\"type\":\"string\",\"name\":\"message\",\"value\":\"Hi, Alice!\"},{\"type\":\"uint8\",\"name\":\"value\",\"value\":10}]',\n      },\n      {\n        name: 'With bytes',\n        value: '[{\"type\":\"bytes\",\"name\":\"message\",\"value\":\"0xdeadbeaf\"}]',\n      },\n    ],\n    preferJsonStringMessage: true,\n    checkIsTargetMessage: easyCheckLegacyEIP712Struct,\n    hashMessage: async (message: string): Promise<string> =>\n      ethUtil.addHexPrefix(signUtil.typedSignatureHash(JSON.parse(message))),\n    signMessage: (\n      { account, library }: Web3ReactContextInterface,\n      message: string,\n    ): Promise<string> =>\n      library.provider\n        .send(\n          'eth_signTypedData',\n          library.provider.isMetaMask\n            ? [JSON.parse(message), account]\n            : [account, message],\n        )\n        .then((response: any) => response?.result || response),\n  },\n  typed_data_sign_v1: {\n    name: 'typed_data_sign_v1',\n    cases: [\n      {\n        name: 'Single Value',\n        value: '[{\"type\":\"string\",\"name\":\"message\",\"value\":\"Hi, Alice!\"}]',\n      },\n      {\n        name: 'Multiple values',\n        value:\n          '[{\"type\":\"string\",\"name\":\"message\",\"value\":\"Hi, Alice!\"},{\"type\":\"uint8\",\"name\":\"value\",\"value\":10}]',\n      },\n      {\n        name: 'With bytes',\n        value: '[{\"type\":\"bytes\",\"name\":\"message\",\"value\":\"0xdeadbeaf\"}]',\n      },\n    ],\n    preferJsonStringMessage: true,\n    checkIsTargetMessage: easyCheckLegacyEIP712Struct,\n    hashMessage: async (message: string): Promise<string> =>\n      ethUtil.addHexPrefix(signUtil.typedSignatureHash(JSON.parse(message))),\n    signMessage: (\n      { account, library }: Web3ReactContextInterface,\n      message: string,\n    ): Promise<string> =>\n      library.provider\n        .send('eth_signTypedData_v1', [account, message])\n        .then((response: any) => response?.result || response),\n  },\n  typed_data_sign_v3: {\n    name: 'typed_data_sign_v3',\n    cases: [\n      {\n        name: 'Demo',\n        value: DEMO_TYPED_DATA_01,\n      },\n      {\n        name: 'With bytes',\n        value: DEMO_TYPED_DATA_02,\n      },\n      {\n        name: 'With recursive types',\n        value: DEMO_TYPED_DATA_03,\n      },\n    ],\n    preferJsonStringMessage: true,\n    checkIsTargetMessage: easyCheckStandardEIP712Struct,\n    hashMessage: async (message: string): Promise<string> =>\n      ethUtil.addHexPrefix(\n        signUtil.TypedDataUtils.sign(JSON.parse(message), false).toString(\n          'hex',\n        ),\n      ),\n    signMessage: (\n      { account, library }: Web3ReactContextInterface,\n      message: string,\n    ): Promise<string> =>\n      library.provider\n        .send('eth_signTypedData_v3', [account, message])\n        .then((response: any) => response?.result || response),\n  },\n  typed_data_sign_v4: {\n    name: 'typed_data_sign_v4',\n    cases: [\n      {\n        name: 'Demo',\n        value: DEMO_TYPED_DATA_01,\n      },\n      {\n        name: 'With bytes',\n        value: DEMO_TYPED_DATA_02,\n      },\n      {\n        name: 'With recursive types',\n        value: DEMO_TYPED_DATA_03,\n      },\n      {\n        name: 'With array',\n        value:\n          '{\"types\":{\"EIP712Domain\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"chainId\",\"type\":\"uint256\"},{\"name\":\"verifyingContract\",\"type\":\"address\"}],\"Person\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"wallets\",\"type\":\"address[]\"}],\"Mail\":[{\"name\":\"from\",\"type\":\"Person\"},{\"name\":\"to\",\"type\":\"Person[]\"},{\"name\":\"contents\",\"type\":\"string\"}],\"Group\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"members\",\"type\":\"Person[]\"}]},\"domain\":{\"name\":\"Ether Mail\",\"version\":\"1\",\"chainId\":1,\"verifyingContract\":\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\"},\"primaryType\":\"Mail\",\"message\":{\"from\":{\"name\":\"Cow\",\"wallets\":[\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\"0xDeaDbeefdEAdbeefdEadbEEFdeadbeEFdEaDbeeF\"]},\"to\":[{\"name\":\"Bob\",\"wallets\":[\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\"0xB0BdaBea57B0BDABeA57b0bdABEA57b0BDabEa57\",\"0xB0B0b0b0b0b0B000000000000000000000000000\"]}],\"contents\":\"Hello, Bob!\"}}',\n      },\n      {\n        name: 'With 2D array',\n        value:\n          '{\"types\":{\"EIP712Domain\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"chainId\",\"type\":\"uint256\"},{\"name\":\"verifyingContract\",\"type\":\"address\"}],\"Person\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"wallets\",\"type\":\"address[]\"},{\"name\":\"logo_matrix\",\"type\":\"int[][]\"}],\"Mail\":[{\"name\":\"from\",\"type\":\"Person\"},{\"name\":\"to\",\"type\":\"Person[]\"},{\"name\":\"contents\",\"type\":\"string\"}],\"Group\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"members\",\"type\":\"Person[]\"}]},\"domain\":{\"name\":\"Ether Mail\",\"version\":\"1\",\"chainId\":1,\"verifyingContract\":\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\"},\"primaryType\":\"Mail\",\"message\":{\"from\":{\"name\":\"Cow\",\"wallets\":[\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\"0xDeaDbeefdEAdbeefdEadbEEFdeadbeEFdEaDbeeF\"],\"logo_matrix\":[[0,255],[-255,-1]]},\"to\":[{\"name\":\"Bob\",\"wallets\":[\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\"0xB0BdaBea57B0BDABeA57b0bdABEA57b0BDabEa57\",\"0xB0B0b0b0b0b0B000000000000000000000000000\"],\"logo_matrix\":[[0,0],[0,0]]}],\"contents\":\"Hello, Bob!\"}}',\n      },\n    ],\n    preferJsonStringMessage: true,\n    checkIsTargetMessage: easyCheckStandardEIP712Struct,\n    hashMessage: async (message: string): Promise<string> =>\n      ethUtil.addHexPrefix(\n        signUtil.TypedDataUtils.sign(JSON.parse(message), true).toString('hex'),\n      ),\n    signMessage: (\n      { account, library }: Web3ReactContextInterface,\n      message: string,\n    ): Promise<string> =>\n      library.provider\n        .send('eth_signTypedData_v4', [account, message])\n        .then((response: any) => response?.result || response),\n  },\n};\n","import { MessageEditorView } from './view';\nimport { useCallback, useState } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { MessageSignMethod, Methods } from './methods';\nimport { Snackbar } from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { easyCheckSignature, stringifyProviderError } from './helper';\nimport * as ethUtil from 'ethereumjs-util';\nimport { useInjectedWeb3Activate } from '../../hooks';\n\nconst recoverAddress = (messageHash: string, signature: string): string => {\n  const hashBuffer = ethUtil.toBuffer(messageHash);\n  const sigBuffer = ethUtil.toBuffer(signature);\n\n  console.assert(\n    hashBuffer.length === 32,\n    `Invalid message hash: ${messageHash}`,\n  );\n  console.assert(sigBuffer.length === 65, `Invalid signature: ${signature}`);\n\n  const [r, s, v] = [\n    sigBuffer.slice(0, 32),\n    sigBuffer.slice(32, 64),\n    sigBuffer[64],\n  ];\n  const public_key = ethUtil.ecrecover(hashBuffer, v, r, s);\n  return ethUtil.addHexPrefix(ethUtil.pubToAddress(public_key).toString('hex'));\n};\n\nconst MessageEditor = () => {\n  const web3 = useWeb3React();\n  const { active, account } = web3;\n  const [, doActivateInjected] = useInjectedWeb3Activate();\n  const [selectedMethod, setSelectedMethod] = useState<string>('eth_sign');\n  const [snackBarState, setSnackBarState] = useState<{\n    isOpening: boolean;\n    isPositive?: boolean;\n    message?: string;\n  }>();\n\n  const method: MessageSignMethod = Methods[selectedMethod || 'eth_sign'];\n  const onSign = useCallback(\n    async (message: string): Promise<[string, string]> => {\n      console.assert(!!account);\n      let snackBarState: { isPositive: boolean; message: string } | undefined =\n        undefined;\n      let signature = '';\n      let recoveredAddress = '';\n\n      try {\n        signature = await method.signMessage(web3, message);\n        if (signature && easyCheckSignature(signature)) {\n          recoveredAddress = recoverAddress(\n            await method.hashMessage(message),\n            signature,\n          );\n\n          if (recoveredAddress.toLowerCase() === account?.toLowerCase()) {\n            snackBarState = {\n              isPositive: true,\n              message: 'Signature Verified',\n            };\n          } else {\n            snackBarState = {\n              isPositive: false,\n              message: 'Sorry! The Message Signature Verification Failed',\n            };\n          }\n        } else {\n          snackBarState = {\n            isPositive: false,\n            message: 'Invalid signature',\n          };\n        }\n      } catch (e) {\n        console.error('Error in signing message', e);\n\n        snackBarState = {\n          isPositive: false,\n          message: stringifyProviderError(e),\n        };\n      }\n\n      if (snackBarState) {\n        setSnackBarState(() => ({ isOpening: true, ...snackBarState }));\n      }\n\n      return [signature, recoveredAddress];\n    },\n    [web3, account, method],\n  );\n\n  return (\n    <>\n      <MessageEditorView\n        isWalletEnabled={active}\n        connectedAccount={account}\n        connectWallet={doActivateInjected}\n        methodOptions={Object.keys(Methods)}\n        selectedMethod={selectedMethod}\n        onMethodSelected={setSelectedMethod}\n        cases={method.cases}\n        preferJsonStringMessage={method.preferJsonStringMessage}\n        hashMessage={method.hashMessage}\n        checkIsTargetMessage={method.checkIsTargetMessage}\n        onSign={onSign}\n      />\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={snackBarState?.isOpening || false}\n        autoHideDuration={3000}\n        onClose={() =>\n          setSnackBarState((prevState) => ({\n            ...prevState,\n            isOpening: false,\n          }))\n        }\n      >\n        <MuiAlert severity={snackBarState?.isPositive ? 'success' : 'error'}>\n          {snackBarState?.message}\n        </MuiAlert>\n      </Snackbar>\n    </>\n  );\n};\n\nexport default MessageEditor;\n","import * as signUtil from 'eth-sig-util';\n\nexport const easyCheckMessageHash = (\n  messageHash: string | undefined,\n): boolean => {\n  if (\n    typeof messageHash === 'string' &&\n    messageHash.startsWith('0x') &&\n    messageHash.length === 66\n  ) {\n    try {\n      return Buffer.from(messageHash.slice(2), 'hex').length === 32;\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  return false;\n};\n\nexport const easyCheckSignature = (signature: string | undefined): boolean => {\n  if (\n    typeof signature == 'string' &&\n    signature.startsWith('0x') &&\n    signature.length === 132\n  ) {\n    try {\n      return Buffer.from(signature.slice(2), 'hex').length === 65;\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  return false;\n};\n\nexport const easyCheckLegacyEIP712Struct = (value: string | undefined) => {\n  if (\n    typeof value === 'string' &&\n    value.startsWith('[') &&\n    value.endsWith(']')\n  ) {\n    try {\n      const struct = JSON.parse(value);\n      if (Array.isArray(struct)) {\n        return struct.every(\n          (i: any) =>\n            typeof i === 'object' &&\n            typeof i.type === 'string' &&\n            typeof i.name == 'string' &&\n            i.value !== undefined,\n        );\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  return false;\n};\n\nexport const easyCheckStandardEIP712Struct = (value: string | undefined) => {\n  if (\n    typeof value === 'string' &&\n    value.startsWith('{') &&\n    value.endsWith('}')\n  ) {\n    try {\n      const struct = JSON.parse(value);\n      if (typeof struct === 'object') {\n        return signUtil.TYPED_MESSAGE_SCHEMA.required.every((i) => !!struct[i]);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  return false;\n};\n\nexport const stringifyProviderError = (error: any): string => {\n  const errorType = typeof error;\n  if (errorType === 'undefined') {\n    return 'Something wrong';\n  } else if (errorType === 'string') {\n    return error;\n  } else if (errorType === 'object' && typeof error.message === 'string') {\n    return error.message;\n  } else if (errorType === 'object' && error.data) {\n    return JSON.stringify(error.data);\n  } else {\n    return JSON.stringify(error);\n  }\n};\n","import { JsonRpcProvider, Web3Provider } from '@ethersproject/providers';\nimport { createWeb3ReactRoot, Web3ReactProvider } from '@web3-react/core';\nimport { InjectedConnector } from '@web3-react/injected-connector';\n\nconst Web3ProviderNetwork = createWeb3ReactRoot('NETWORK');\n\nconst { ethereum } = window as any;\nethereum && (ethereum.autoRefreshOnNetworkChange = false);\n\nexport const createBackupProvider = (): JsonRpcProvider | undefined => {\n  try {\n    const url = process.env['REACT_APP_DEFAULT_ETH_RPC_URL'];\n    if (url) {\n      return new JsonRpcProvider({ url: url, allowGzip: true });\n    }\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nconst getLibrary = (provider: any) =>\n  new Web3Provider(\n    provider,\n    typeof provider.chainId === 'number'\n      ? provider.chainId\n      : typeof provider.chainId === 'string'\n      ? parseInt(provider.chainId)\n      : 'any',\n  );\n\nconst Web3Root = ({ children }: { children: any }) => (\n  <Web3ReactProvider getLibrary={getLibrary}>\n    <Web3ProviderNetwork getLibrary={getLibrary}>\n      {children}\n    </Web3ProviderNetwork>\n  </Web3ReactProvider>\n);\n\nexport const injectedNetwork = new InjectedConnector({});\nexport default Web3Root;\n","import { TextField } from '@material-ui/core';\nimport { TextFieldProps } from '@material-ui/core/TextField/TextField';\n\nconst LabelText = ({\n  id,\n  value,\n  label,\n  placeholder,\n  ...props\n}: TextFieldProps) => (\n  <TextField\n    id={id}\n    variant=\"outlined\"\n    value={value}\n    label={label}\n    placeholder={placeholder}\n    {...props}\n  />\n);\n\nexport default LabelText;\n","export const prettify = (\n  value: string | object,\n  format: 'json' | 'text',\n): string => {\n  if (format === 'json') {\n    if (typeof value === 'string') {\n      value = JSON.parse(value);\n    }\n\n    return JSON.stringify(value, undefined, 2);\n  } else if (format === 'text') {\n    if (typeof value === 'object') {\n      value = JSON.stringify(value);\n    }\n\n    return value;\n  } else {\n    throw Error(`Invalid format: ${format}, value: ${value}`);\n  }\n};\n"],"sourceRoot":""}